

================================================================
== Report Version
================================================================
* Tool:          Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
* Version:       2012.4
* Build date:    Fri Dec 07 12:41:34 PM 2012
* Copyright (C): 2012 Xilinx Inc. All rights reserved.


================================================================
== General Information
================================================================
* Project:  IDCT
* Solution: solution1
* Date:     Tue Sep 29 20:16:14 2015



================================================================
== User Assignments
================================================================
* Product Family:           kintex7 kintex7_fpv6 zynq zynq_fpv6 
* Part:                     xc7z020clg484-1
* Top Model name:           IDCT_thread
* Target clock period (ns): 10.00
* Clock uncertainty (ns):   3.00


================================================================
== Performance Estimates
================================================================
+ Summary of timing analysis: 
    * Estimated clock period (ns): 6.36
+ Summary of overall latency (clock cycles): 
    * Best-case latency:    ?
    * Average-case latency: ?
    * Worst-case latency:   ?
+ Summary of loop latency (clock cycles): 
    + Loop 1: 
        * Trip count:        inf
        * Latency:           ?
        * Iteration latency: ?
        + Loop 1.1: 
            * Trip count: 1
            * Latency:    ?
            + Loop 1.1.1: 
                * Trip count: ?
                * Latency:    ?
        + Loop 1.2: 
            * Trip count: 1
            * Latency:    ?
            + Loop 1.2.1: 
                * Trip count: ?
                * Latency:    ?
        + Loop 1.3: 
            * Trip count: ?
            * Latency:    ?
            + Loop 1.3.1: 
                * Trip count:   32
                * Latency:      ?
                + Loop 1.3.1.1: 
                    * Trip count: ?
                    * Latency:    ?
            + Loop 1.3.2: 
                * Trip count:   8
                * Latency:      248
                + Loop 1.3.2.1: 
                    * Trip count: 8
                    * Latency:    16
            + Loop 1.3.3: 
                * Trip count:   8
                * Latency:      512
                + Loop 1.3.3.1: 
                    * Trip count: 8
                    * Latency:    16
                + Loop 1.3.3.2: 
                    * Trip count: 8
                    * Latency:    32
            + Loop 1.3.4: 
                * Trip count:   16
                * Latency:      ?
                + Loop 1.3.4.1: 
                    * Trip count: ?
                    * Latency:    ?


================================================================
== Area Estimates
================================================================
* Summary: 
(Target device: xc7z020clg484-1)
+---+-----------------+---------+-------+--------+-------+-------+
| ID|             Name| BRAM_18K| DSP48E|      FF|    LUT|  SLICE|
+---+-----------------+---------+-------+--------+-------+-------+
|  0|        Component|        -|      -|       -|      -|      -|
|  1|       Expression|        -|      -|       -|      -|      -|
|  2|             FIFO|        -|      -|       -|      -|      -|
|  3|           Memory|        -|      -|       -|      -|      -|
|  4|      Multiplexer|        -|      -|       -|      -|      -|
|  5|         Register|        -|      -|       -|      -|      -|
|  6|      ShiftMemory|        -|      -|       -|      -|      -|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|            Total|        0|      0|       0|      0|      0|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|        Available|      280|    220|  106400|  53200|  13300|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|  Utilization (%)|        0|      0|       0|      0|      0|
+---+-----------------+---------+-------+--------+-------+-------+

+ Details: 
    * Component: 
    N/A

    * Expression: 
    N/A

    * FIFO: 
    N/A

    * Memory: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A

    * ShiftMemory: 
    N/A

* Hierarchical Multiplexer Count: 
+---+--------------+-----+-----+------+
| ID|          Name| Size| Bits| Count|
+---+--------------+-----+-----+------+
|  0|  (This level)|    0|    0|     0|
+---+--------------+-----+-----+------+
|  -|         Total|    0|    0|     0|
+---+--------------+-----+-----+------+



================================================================
== Power Estimate
================================================================
* Summary: 
+---+-------------+
| ID|         Name|
+---+-------------+
|  0|    Component|
|  1|   Expression|
|  2|         FIFO|
|  3|       Memory|
|  4|  Multiplexer|
|  5|     Register|
|  6|  ShiftMemory|
+---+-------------+
|  -|        Total|
+---+-------------+

* Hierarchical Register Count: 
+---+--------------+------+
| ID|          Name| Count|
+---+--------------+------+
|  0|  (This level)|     0|
+---+--------------+------+
|  -|         Total|     0|
+---+--------------+------+



================================================================
== Interface Summary
================================================================
* Interfaces: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 0
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 61
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / (!indvar1)
	11  / (indvar1)
8 --> 
	9  / (!tmp_V)
	8  / (tmp_V)
9 --> 
	10  / true
10 --> 
	7  / true
11 --> 
	12  / (tmp_4 & !indvar)
	6  / (!tmp_4 & !tmp_8) | (indvar & !tmp_8)
	15  / (!tmp_4 & tmp_8) | (indvar & tmp_8)
12 --> 
	13  / (!tmp_V_2)
	12  / (tmp_V_2)
13 --> 
	14  / true
14 --> 
	11  / true
15 --> 
	6  / (exitcond)
	16  / (!exitcond)
16 --> 
	17  / (!exitcond1)
	20  / (exitcond1)
17 --> 
	18  / (!tmp_V_4)
	17  / (tmp_V_4)
18 --> 
	19  / true
19 --> 
	16  / true
20 --> 
	36  / (exitcond2)
	21  / (!exitcond2)
21 --> 
	22  / (!exitcond5)
	23  / (exitcond5)
22 --> 
	21  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	20  / true
36 --> 
	37  / (!exitcond3)
	56  / (exitcond3)
37 --> 
	38  / (!exitcond4)
	39  / (exitcond4)
38 --> 
	37  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	36  / (exitcond7)
	53  / (!exitcond7)
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	52  / true
56 --> 
	15  / (exitcond6)
	57  / (!exitcond6)
57 --> 
	58  / (!tmp_V_6)
	57  / (tmp_V_6)
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	56  / true
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: NBLOCKS [1/1] 0.00ns
entry:0  %NBLOCKS = alloca i32                           ; <i32*> [#uses=3]

ST_1: uiCommand [1/1] 0.00ns
entry:1  %uiCommand = alloca i32                         ; <i32*> [#uses=3]

ST_1: Y [1/1] 0.00ns
entry:2  %Y = alloca [64 x i32], align 4                 ; <[64 x i32]*> [#uses=10]

ST_1: in [1/1] 0.00ns
entry:3  %in = alloca [64 x i16], align 2                ; <[64 x i16]*> [#uses=3]

ST_1: Idct [1/1] 0.00ns
entry:4  %Idct = alloca [64 x i8], align 1               ; <[64 x i8]*> [#uses=5]

ST_1: Yc [1/1] 0.00ns
entry:5  %Yc = alloca [8 x i32], align 4                 ; <[8 x i32]*> [#uses=10]


 <State 2>: 0.00ns
ST_2: stg_68 [1/1] 0.00ns
entry:6  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [7 x i8]* @p_str2, [11 x i8]* @p_str3, i32 0, i32 0, i1* %nResetPort) nounwind

ST_2: stg_69 [1/1] 0.00ns
entry:7  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [7 x i8]* @p_str2, [10 x i8]* @p_str4, i32 0, i32 0, i1* %ClockPort) nounwind

ST_2: stg_70 [1/1] 0.00ns
entry:8  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 1, [18 x i8]* @p_str5, [17 x i8]* @p_str6, i32 0, i32 0, i1* %ReadEnablePort_0) nounwind

ST_2: stg_71 [1/1] 0.00ns
entry:9  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [18 x i8]* @p_str5, [16 x i8]* @p_str7, i32 0, i32 0, i1* %ReadEmptyPort_0) nounwind

ST_2: stg_72 [1/1] 0.00ns
entry:10  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [19 x i8]* @p_str8, [15 x i8]* @p_str9, i32 0, i32 0, i32* %ReadDataPort_0) nounwind

ST_2: stg_73 [1/1] 0.00ns
entry:11  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 1, [18 x i8]* @p_str5, [18 x i8]* @p_str10, i32 0, i32 0, i1* %WriteEnablePort_0) nounwind

ST_2: stg_74 [1/1] 0.00ns
entry:12  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [18 x i8]* @p_str5, [16 x i8]* @p_str11, i32 0, i32 0, i1* %WriteFullPort_0) nounwind

ST_2: stg_75 [1/1] 0.00ns
entry:13  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 1, [19 x i8]* @p_str8, [16 x i8]* @p_str12, i32 0, i32 0, i32* %WriteDataPort_0) nounwind

ST_2: stg_76 [1/1] 0.00ns
entry:14  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 1, [18 x i8]* @p_str5, [17 x i8]* @p_str13, i32 0, i32 0, i1* %ReadEnablePort_1) nounwind

ST_2: stg_77 [1/1] 0.00ns
entry:15  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [18 x i8]* @p_str5, [16 x i8]* @p_str14, i32 0, i32 0, i1* %ReadEmptyPort_1) nounwind

ST_2: stg_78 [1/1] 0.00ns
entry:16  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [19 x i8]* @p_str8, [15 x i8]* @p_str15, i32 0, i32 0, i32* %ReadDataPort_1) nounwind

ST_2: stg_79 [1/1] 0.00ns
entry:17  call void (...)* @_ssdm_op_SpecProcessDef([5 x i8]* @p_str1, i32 2, [7 x i8]* @p_str16) nounwind

ST_2: tmp_1 [1/1] 0.00ns
entry:18  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str17) nounwind ; <i32> [#uses=1]

ST_2: stg_81 [1/1] 0.00ns
entry:19  call void (...)* @_ssdm_op_SpecProtocol(i32 1, [1 x i8]* @p_str) nounwind

ST_2: p_ssdm_reset_v [1/1] 0.00ns
entry:20  %p_ssdm_reset_v = call i32 (...)* @_ssdm_op_SpecStateBegin(i32 0, i32 0, i32 1) nounwind ; <i32> [#uses=1]

ST_2: stg_83 [1/1] 0.00ns
entry:21  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 false) nounwind

ST_2: stg_84 [1/1] 0.00ns
entry:22  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_1, i1 false) nounwind

ST_2: stg_85 [1/1] 0.00ns
entry:23  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %WriteEnablePort_0, i1 false) nounwind

ST_2: stg_86 [1/1] 0.00ns
entry:24  call void @_ssdm_op_WireWrite.volatile.i32P(i32* %WriteDataPort_0, i32 0) nounwind


 <State 3>: 0.00ns
ST_3: stg_87 [1/1] 0.00ns
entry:25  call void (...)* @_ssdm_op_Wait(i32 1) nounwind


 <State 4>: 0.00ns
ST_4: stg_88 [1/1] 0.00ns
entry:26  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_4: empty [1/1] 0.00ns
entry:27  %empty = call i32 (...)* @_ssdm_op_SpecStateEnd(i32 %p_ssdm_reset_v) nounwind ; <i32> [#uses=0]

ST_4: empty_19 [1/1] 0.00ns
entry:28  %empty_19 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str17, i32 %tmp_1) nounwind ; <i32> [#uses=0]


 <State 5>: 1.57ns
ST_5: Yc_addr_9 [1/1] 0.00ns
entry:29  %Yc_addr_9 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 0 ; <i32*> [#uses=2]

ST_5: Yc_addr [1/1] 0.00ns
entry:30  %Yc_addr = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 4 ; <i32*> [#uses=2]

ST_5: Yc_addr_1 [1/1] 0.00ns
entry:31  %Yc_addr_1 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 6 ; <i32*> [#uses=2]

ST_5: Yc_addr_2 [1/1] 0.00ns
entry:32  %Yc_addr_2 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 2 ; <i32*> [#uses=2]

ST_5: Yc_addr_3 [1/1] 0.00ns
entry:33  %Yc_addr_3 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 1 ; <i32*> [#uses=2]

ST_5: Yc_addr_4 [1/1] 0.00ns
entry:34  %Yc_addr_4 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 7 ; <i32*> [#uses=2]

ST_5: Yc_addr_5 [1/1] 0.00ns
entry:35  %Yc_addr_5 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 3 ; <i32*> [#uses=2]

ST_5: Yc_addr_6 [1/1] 0.00ns
entry:36  %Yc_addr_6 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 5 ; <i32*> [#uses=2]

ST_5: stg_99 [1/1] 1.57ns
entry:37  store i32 0, i32* %NBLOCKS

ST_5: stg_100 [1/1] 0.00ns
entry:38  br label %bb


 <State 6>: 1.30ns
ST_6: loop_begin [1/1] 0.00ns
bb:0  %loop_begin = call i32 (...)* @_ssdm_op_SpecLoopBegin() nounwind ; <i32> [#uses=0]

ST_6: val_V_0 [1/1] 0.00ns
bb:1  %val_V_0 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_0) nounwind ; <i1> [#uses=0]

ST_6: stg_103 [1/1] 1.30ns
bb:2  br label %bb11.i


 <State 7>: 2.52ns
ST_7: indvar1 [1/1] 0.00ns
bb11.i:0  %indvar1 = phi i1 [ %indvar_next1, %bb7.i ], [ false, %bb ] ; <i1> [#uses=2]

ST_7: empty_20 [1/1] 0.00ns
bb11.i:1  %empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1) nounwind ; <i32> [#uses=0]

ST_7: indvar_next1 [1/1] 1.37ns
bb11.i:2  %indvar_next1 = xor i1 %indvar1, true           ; <i1> [#uses=1]

ST_7: stg_107 [1/1] 0.00ns
bb11.i:3  br i1 %indvar1, label %ModuleRead_1.exit, label %bb5.i

ST_7: uiCommand_load [1/1] 0.00ns
ModuleRead_1.exit:0  %uiCommand_load = load i32* %uiCommand          ; <i32> [#uses=1]

ST_7: tmp_4 [1/1] 2.52ns
ModuleRead_1.exit:1  %tmp_4 = icmp eq i32 %uiCommand_load, 1         ; <i1> [#uses=1]

ST_7: stg_110 [1/1] 0.00ns
ModuleRead_1.exit:2  br i1 %tmp_4, label %bb1, label %bb2

ST_7: val_V_1_0 [1/1] 0.00ns
bb1:0  %val_V_1_0 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_0) nounwind ; <i1> [#uses=0]

ST_7: stg_112 [1/1] 1.30ns
bb1:1  br label %bb11.i43


 <State 8>: 0.00ns
ST_8: tmp_V [1/1] 0.00ns
bb5.i:0  %tmp_V = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_0) nounwind ; <i1> [#uses=1]

ST_8: stg_114 [1/1] 0.00ns
bb5.i:1  br i1 %tmp_V, label %bb.i65.i, label %bb7.i

ST_8: stg_115 [1/1] 0.00ns
bb.i65.i:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_8: stg_116 [1/1] 0.00ns
bb.i65.i:1  br label %bb5.i

ST_8: val_V [1/1] 0.00ns
bb7.i:0  %val_V = call i32 @_ssdm_op_WireRead.volatile.i32P(i32* %ReadDataPort_0) nounwind ; <i32> [#uses=1]

ST_8: stg_118 [1/1] 0.00ns
bb7.i:1  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 true) nounwind

ST_8: stg_119 [1/1] 0.00ns
bb7.i:5  store i32 %val_V, i32* %uiCommand


 <State 9>: 0.00ns
ST_9: stg_120 [1/1] 0.00ns
bb7.i:2  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_9: stg_121 [1/1] 0.00ns
bb7.i:3  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 false) nounwind


 <State 10>: 0.00ns
ST_10: stg_122 [1/1] 0.00ns
bb7.i:4  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_10: stg_123 [1/1] 0.00ns
bb7.i:6  br label %bb11.i


 <State 11>: 2.52ns
ST_11: indvar [1/1] 0.00ns
bb11.i43:0  %indvar = phi i1 [ %indvar_next, %bb7.i36 ], [ false, %bb1 ] ; <i1> [#uses=2]

ST_11: empty_21 [1/1] 0.00ns
bb11.i43:1  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1) nounwind ; <i32> [#uses=0]

ST_11: indvar_next [1/1] 1.37ns
bb11.i43:2  %indvar_next = xor i1 %indvar, true             ; <i1> [#uses=1]

ST_11: stg_127 [1/1] 0.00ns
bb11.i43:3  br i1 %indvar, label %bb2, label %bb5.i34

ST_11: uiCommand_load_1 [1/1] 0.00ns
bb2:0  %uiCommand_load_1 = load i32* %uiCommand        ; <i32> [#uses=1]

ST_11: tmp_8 [1/1] 2.52ns
bb2:1  %tmp_8 = icmp eq i32 %uiCommand_load_1, 2       ; <i1> [#uses=1]

ST_11: stg_130 [1/1] 0.00ns
bb2:2  br i1 %tmp_8, label %bb23.preheader, label %bb

ST_11: NBLOCKS_load [1/1] 0.00ns
bb23.preheader:0  %NBLOCKS_load = load i32* %NBLOCKS              ; <i32> [#uses=1]

ST_11: tmp1 [1/1] 0.00ns
bb23.preheader:1  %tmp1 = shl i32 %NBLOCKS_load, 1                ; <i32> [#uses=1]

ST_11: stg_133 [1/1] 1.57ns
bb23.preheader:2  br label %bb23


 <State 12>: 1.57ns
ST_12: tmp_V_2 [1/1] 0.00ns
bb5.i34:0  %tmp_V_2 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_0) nounwind ; <i1> [#uses=1]

ST_12: stg_135 [1/1] 0.00ns
bb5.i34:1  br i1 %tmp_V_2, label %bb.i65.i33, label %bb7.i36

ST_12: stg_136 [1/1] 0.00ns
bb.i65.i33:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_12: stg_137 [1/1] 0.00ns
bb.i65.i33:1  br label %bb5.i34

ST_12: val_V_1 [1/1] 0.00ns
bb7.i36:0  %val_V_1 = call i32 @_ssdm_op_WireRead.volatile.i32P(i32* %ReadDataPort_0) nounwind ; <i32> [#uses=1]

ST_12: stg_139 [1/1] 0.00ns
bb7.i36:1  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 true) nounwind

ST_12: stg_140 [1/1] 1.57ns
bb7.i36:5  store i32 %val_V_1, i32* %NBLOCKS


 <State 13>: 0.00ns
ST_13: stg_141 [1/1] 0.00ns
bb7.i36:2  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_13: stg_142 [1/1] 0.00ns
bb7.i36:3  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 false) nounwind


 <State 14>: 0.00ns
ST_14: stg_143 [1/1] 0.00ns
bb7.i36:4  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_14: stg_144 [1/1] 0.00ns
bb7.i36:6  br label %bb11.i43


 <State 15>: 2.52ns
ST_15: block [1/1] 0.00ns
bb23:0  %block = phi i32 [ 0, %bb23.preheader ], [ %block_1, %bb8.i ] ; <i32> [#uses=2]

ST_15: exitcond [1/1] 2.52ns
bb23:1  %exitcond = icmp eq i32 %block, %tmp1           ; <i1> [#uses=1]

ST_15: block_1 [1/1] 2.49ns
bb23:2  %block_1 = add i32 %block, 1                    ; <i32> [#uses=1]

ST_15: stg_148 [1/1] 0.00ns
bb23:3  br i1 %exitcond, label %bb, label %bb4

ST_15: val_V_4_0 [1/1] 0.00ns
bb4:0  %val_V_4_0 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_1) nounwind ; <i1> [#uses=0]

ST_15: stg_150 [1/1] 1.30ns
bb4:1  br label %bb9.i58


 <State 16>: 3.15ns
ST_16: i [1/1] 0.00ns
bb9.i58:0  %i = phi i6 [ 0, %bb4 ], [ %i_1, %bb7.i55 ]     ; <i6> [#uses=4]

ST_16: i_4_cast [1/1] 0.00ns
bb9.i58:1  %i_4_cast = zext i6 %i to i7                    ; <i7> [#uses=1]

ST_16: ptData3_0_rec_i [1/1] 0.00ns
bb9.i58:2  %ptData3_0_rec_i = shl i7 %i_4_cast, 1          ; <i7> [#uses=1]

ST_16: ptData3_0_rec_i_cast [1/1] 0.00ns
bb9.i58:3  %ptData3_0_rec_i_cast = zext i7 %ptData3_0_rec_i to i32 ; <i32> [#uses=1]

ST_16: ptData3_0_sum238241_i [1/1] 0.00ns
bb9.i58:4  %ptData3_0_sum238241_i = call i7 @_ssdm_op_PartSet.i7.i7.i6.i32.i32(i7 1, i6 %i, i32 1, i32 6) ; <i7> [#uses=1]

ST_16: ptData3_0_sum238241_i_cast [1/1] 0.00ns
bb9.i58:5  %ptData3_0_sum238241_i_cast = zext i7 %ptData3_0_sum238241_i to i32 ; <i32> [#uses=1]

ST_16: in_addr_1 [1/1] 0.00ns
bb9.i58:6  %in_addr_1 = getelementptr [64 x i16]* %in, i32 0, i32 %ptData3_0_rec_i_cast ; <i16*> [#uses=1]

ST_16: empty_22 [1/1] 0.00ns
bb9.i58:7  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; <i32> [#uses=0]

ST_16: exitcond1 [1/1] 1.94ns
bb9.i58:8  %exitcond1 = icmp eq i6 %i, -32                 ; <i1> [#uses=1]

ST_16: i_1 [1/1] 1.77ns
bb9.i58:9  %i_1 = add i6 %i, 1                             ; <i6> [#uses=1]

ST_16: stg_161 [1/1] 1.21ns
bb9.i58:10  br i1 %exitcond1, label %bb9, label %bb5.i54


 <State 17>: 2.39ns
ST_17: tmp_V_4 [1/1] 0.00ns
bb5.i54:0  %tmp_V_4 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_1) nounwind ; <i1> [#uses=1]

ST_17: stg_163 [1/1] 0.00ns
bb5.i54:1  br i1 %tmp_V_4, label %bb.i93.i, label %bb7.i55

ST_17: stg_164 [1/1] 0.00ns
bb.i93.i:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_17: stg_165 [1/1] 0.00ns
bb.i93.i:1  br label %bb5.i54

ST_17: val_V_2 [1/1] 0.00ns
bb7.i55:0  %val_V_2 = call i32 @_ssdm_op_WireRead.volatile.i32P(i32* %ReadDataPort_1) nounwind ; <i32> [#uses=2]

ST_17: tmp_5 [1/1] 0.00ns
bb7.i55:1  %tmp_5 = trunc i32 %val_V_2 to i16              ; <i16> [#uses=1]

ST_17: stg_168 [1/1] 2.39ns
bb7.i55:2  store i16 %tmp_5, i16* %in_addr_1, align 2

ST_17: in_addr_2 [1/1] 0.00ns
bb7.i55:3  %in_addr_2 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %ptData3_0_sum238241_i_cast ; <i16*> [#uses=1]

ST_17: p_Result_1 [1/1] 0.00ns
bb7.i55:4  %p_Result_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %val_V_2, i32 16, i32 31) ; <i16> [#uses=1]

ST_17: stg_171 [1/1] 2.39ns
bb7.i55:5  store i16 %p_Result_1, i16* %in_addr_2, align 2

ST_17: stg_172 [1/1] 0.00ns
bb7.i55:6  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_1, i1 true) nounwind


 <State 18>: 0.00ns
ST_18: stg_173 [1/1] 0.00ns
bb7.i55:7  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_18: stg_174 [1/1] 0.00ns
bb7.i55:8  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_1, i1 false) nounwind


 <State 19>: 0.00ns
ST_19: stg_175 [1/1] 0.00ns
bb7.i55:9  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_19: stg_176 [1/1] 0.00ns
bb7.i55:10  br label %bb9.i58


 <State 20>: 3.09ns
ST_20: row [1/1] 0.00ns
bb9:0  %row = phi i4 [ %row_3, %bb8 ], [ 0, %bb9.i58 ] ; <i4> [#uses=3]

ST_20: row_cast [1/1] 0.00ns
bb9:1  %row_cast = zext i4 %row to i6                  ; <i6> [#uses=8]

ST_20: empty_24 [1/1] 0.00ns
bb9:2  %empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_20: exitcond2 [1/1] 1.88ns
bb9:3  %exitcond2 = icmp eq i4 %row, -8                ; <i1> [#uses=1]

ST_20: row_3 [1/1] 0.85ns
bb9:4  %row_3 = add i4 %row, 1                         ; <i4> [#uses=1]

ST_20: stg_182 [1/1] 1.21ns
bb9:5  br i1 %exitcond2, label %bb21, label %bb7.preheader

ST_20: tmp_2 [1/1] 0.00ns
bb7.preheader:0  %tmp_2 = shl i6 %row_cast, 3                    ; <i6> [#uses=2]

ST_20: tmp_2_cast [1/1] 0.00ns
bb7.preheader:1  %tmp_2_cast = zext i6 %tmp_2 to i32             ; <i32> [#uses=1]

ST_20: stg_185 [1/1] 1.21ns
bb7.preheader:2  br label %bb7


 <State 21>: 4.16ns
ST_21: column_1 [1/1] 0.00ns
bb7:0  %column_1 = phi i4 [ %column_2, %bb6 ], [ 0, %bb7.preheader ] ; <i4> [#uses=3]

ST_21: column_1_cast [1/1] 0.00ns
bb7:1  %column_1_cast = zext i4 %column_1 to i6        ; <i6> [#uses=1]

ST_21: empty_23 [1/1] 0.00ns
bb7:2  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_21: exitcond5 [1/1] 1.88ns
bb7:3  %exitcond5 = icmp eq i4 %column_1, -8           ; <i1> [#uses=1]

ST_21: column_2 [1/1] 0.85ns
bb7:4  %column_2 = add i4 %column_1, 1                 ; <i4> [#uses=1]

ST_21: stg_191 [1/1] 0.00ns
bb7:5  br i1 %exitcond5, label %bb8, label %bb6

ST_21: tmp_49 [1/1] 1.77ns
bb6:0  %tmp_49 = add i6 %column_1_cast, %tmp_2         ; <i6> [#uses=1]

ST_21: tmp_49_cast [1/1] 0.00ns
bb6:1  %tmp_49_cast = zext i6 %tmp_49 to i32           ; <i32> [#uses=2]

ST_21: in_addr [1/1] 0.00ns
bb6:2  %in_addr = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %tmp_49_cast ; <i16*> [#uses=1]

ST_21: in_load [2/2] 2.39ns
bb6:3  %in_load = load i16* %in_addr, align 2          ; <i16> [#uses=1]

ST_21: Y_addr_9 [1/1] 0.00ns
bb8:0  %Y_addr_9 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_2_cast ; <i32*> [#uses=2]

ST_21: tmp_80 [1/1] 0.00ns
bb8:41  %tmp_80 = trunc i6 %row_cast to i3              ; <i3> [#uses=1]

ST_21: p_sum5 [1/1] 0.00ns
bb8:42  %p_sum5 = call i6 @_ssdm_op_PartSet.i6.i6.i3.i32.i32(i6 3, i3 %tmp_80, i32 3, i32 5) ; <i6> [#uses=1]

ST_21: p_sum5_cast [1/1] 0.00ns
bb8:43  %p_sum5_cast = zext i6 %p_sum5 to i32           ; <i32> [#uses=1]

ST_21: Y_addr_5 [1/1] 0.00ns
bb8:44  %Y_addr_5 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %p_sum5_cast ; <i32*> [#uses=2]

ST_21: Y_load_5 [2/2] 2.39ns
bb8:45  %Y_load_5 = load i32* %Y_addr_5, align 4        ; <i32> [#uses=1]

ST_21: tmp_82 [1/1] 0.00ns
bb8:49  %tmp_82 = trunc i6 %row_cast to i3              ; <i3> [#uses=1]

ST_21: p_sum6 [1/1] 0.00ns
bb8:50  %p_sum6 = call i6 @_ssdm_op_PartSet.i6.i6.i3.i32.i32(i6 5, i3 %tmp_82, i32 3, i32 5) ; <i6> [#uses=1]

ST_21: p_sum6_cast [1/1] 0.00ns
bb8:51  %p_sum6_cast = zext i6 %p_sum6 to i32           ; <i32> [#uses=1]

ST_21: Y_addr_6 [1/1] 0.00ns
bb8:52  %Y_addr_6 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %p_sum6_cast ; <i32*> [#uses=2]

ST_21: Y_load_6 [2/2] 2.39ns
bb8:53  %Y_load_6 = load i32* %Y_addr_6, align 4        ; <i32> [#uses=1]


 <State 22>: 4.78ns
ST_22: in_load [1/2] 2.39ns
bb6:3  %in_load = load i16* %in_addr, align 2          ; <i16> [#uses=1]

ST_22: tmp_50_cast [1/1] 0.00ns
bb6:4  %tmp_50_cast = zext i16 %in_load to i19         ; <i19> [#uses=1]

ST_22: tmp_51 [1/1] 0.00ns
bb6:5  %tmp_51 = shl i19 %tmp_50_cast, 3               ; <i19> [#uses=1]

ST_22: tmp_51_cast [1/1] 0.00ns
bb6:6  %tmp_51_cast = sext i19 %tmp_51 to i32          ; <i32> [#uses=1]

ST_22: Y_addr_7 [1/1] 0.00ns
bb6:7  %Y_addr_7 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_49_cast ; <i32*> [#uses=1]

ST_22: stg_212 [1/1] 2.39ns
bb6:8  store i32 %tmp_51_cast, i32* %Y_addr_7, align 4

ST_22: stg_213 [1/1] 0.00ns
bb6:9  br label %bb7


 <State 23>: 2.39ns
ST_23: Y_load_5 [1/2] 2.39ns
bb8:45  %Y_load_5 = load i32* %Y_addr_5, align 4        ; <i32> [#uses=1]

ST_23: Y_load_6 [1/2] 2.39ns
bb8:53  %Y_load_6 = load i32* %Y_addr_6, align 4        ; <i32> [#uses=1]


 <State 24>: 6.36ns
ST_24: tmp_74 [1/1] 0.00ns
bb8:9  %tmp_74 = trunc i6 %row_cast to i3              ; <i3> [#uses=1]

ST_24: p_sum1 [1/1] 0.00ns
bb8:10  %p_sum1 = call i6 @_ssdm_op_PartSet.i6.i6.i3.i32.i32(i6 6, i3 %tmp_74, i32 3, i32 5) ; <i6> [#uses=1]

ST_24: p_sum1_cast [1/1] 0.00ns
bb8:11  %p_sum1_cast = zext i6 %p_sum1 to i32           ; <i32> [#uses=1]

ST_24: Y_addr_1 [1/1] 0.00ns
bb8:12  %Y_addr_1 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %p_sum1_cast ; <i32*> [#uses=2]

ST_24: Y_load_7 [2/2] 2.39ns
bb8:13  %Y_load_7 = load i32* %Y_addr_1, align 4        ; <i32> [#uses=2]

ST_24: tmp_75 [1/1] 0.00ns
bb8:14  %tmp_75 = trunc i6 %row_cast to i3              ; <i3> [#uses=1]

ST_24: p_sum2 [1/1] 0.00ns
bb8:15  %p_sum2 = call i6 @_ssdm_op_PartSet.i6.i6.i3.i32.i32(i6 2, i3 %tmp_75, i32 3, i32 5) ; <i6> [#uses=1]

ST_24: p_sum2_cast [1/1] 0.00ns
bb8:16  %p_sum2_cast = zext i6 %p_sum2 to i32           ; <i32> [#uses=1]

ST_24: Y_addr_2 [1/1] 0.00ns
bb8:17  %Y_addr_2 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %p_sum2_cast ; <i32*> [#uses=2]

ST_24: Y_load_8 [2/2] 2.39ns
bb8:18  %Y_load_8 = load i32* %Y_addr_2, align 4        ; <i32> [#uses=2]

ST_24: tmp_17 [3/3] 6.36ns
bb8:46  %tmp_17 = mul nsw i32 %Y_load_5, 23170          ; <i32> [#uses=1]

ST_24: tmp_19 [3/3] 6.36ns
bb8:54  %tmp_19 = mul nsw i32 %Y_load_6, 23170          ; <i32> [#uses=1]


 <State 25>: 6.36ns
ST_25: tmp_73 [1/1] 0.00ns
bb8:2  %tmp_73 = trunc i6 %row_cast to i3              ; <i3> [#uses=1]

ST_25: Y_load_7 [1/2] 2.39ns
bb8:13  %Y_load_7 = load i32* %Y_addr_1, align 4        ; <i32> [#uses=2]

ST_25: Y_load_8 [1/2] 2.39ns
bb8:18  %Y_load_8 = load i32* %Y_addr_2, align 4        ; <i32> [#uses=2]

ST_25: tmp_78 [1/1] 0.00ns
bb8:29  %tmp_78 = trunc i6 %row_cast to i3              ; <i3> [#uses=1]

ST_25: p_sum3 [1/1] 0.00ns
bb8:30  %p_sum3 = call i6 @_ssdm_op_PartSet.i6.i6.i3.i32.i32(i6 1, i3 %tmp_78, i32 3, i32 5) ; <i6> [#uses=1]

ST_25: p_sum3_cast [1/1] 0.00ns
bb8:31  %p_sum3_cast = zext i6 %p_sum3 to i32           ; <i32> [#uses=1]

ST_25: Y_addr_3 [1/1] 0.00ns
bb8:32  %Y_addr_3 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %p_sum3_cast ; <i32*> [#uses=2]

ST_25: Y_load_3 [2/2] 2.39ns
bb8:33  %Y_load_3 = load i32* %Y_addr_3, align 4        ; <i32> [#uses=2]

ST_25: tmp_79 [1/1] 0.00ns
bb8:34  %tmp_79 = trunc i6 %row_cast to i3              ; <i3> [#uses=1]

ST_25: p_sum4 [1/1] 0.00ns
bb8:35  %p_sum4 = call i6 @_ssdm_op_PartSet.i6.i6.i3.i32.i32(i6 7, i3 %tmp_79, i32 3, i32 5) ; <i6> [#uses=1]

ST_25: p_sum4_cast [1/1] 0.00ns
bb8:36  %p_sum4_cast = zext i6 %p_sum4 to i32           ; <i32> [#uses=1]

ST_25: Y_addr_4 [1/1] 0.00ns
bb8:37  %Y_addr_4 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %p_sum4_cast ; <i32*> [#uses=2]

ST_25: Y_load_4 [2/2] 2.39ns
bb8:38  %Y_load_4 = load i32* %Y_addr_4, align 4        ; <i32> [#uses=2]

ST_25: tmp_17 [2/3] 6.36ns
bb8:46  %tmp_17 = mul nsw i32 %Y_load_5, 23170          ; <i32> [#uses=1]

ST_25: tmp_19 [2/3] 6.36ns
bb8:54  %tmp_19 = mul nsw i32 %Y_load_6, 23170          ; <i32> [#uses=1]


 <State 26>: 6.36ns
ST_26: tmp_9 [3/3] 6.36ns
bb8:19  %tmp_9 = mul nsw i32 %Y_load_8, 8867            ; <i32> [#uses=1]

ST_26: tmp_s [3/3] 6.36ns
bb8:20  %tmp_s = mul nsw i32 %Y_load_7, 21407           ; <i32> [#uses=1]

ST_26: tmp_10 [3/3] 6.36ns
bb8:24  %tmp_10 = mul nsw i32 %Y_load_8, 21407          ; <i32> [#uses=1]

ST_26: tmp_11 [3/3] 6.36ns
bb8:25  %tmp_11 = mul nsw i32 %Y_load_7, 8867           ; <i32> [#uses=1]

ST_26: Y_load_3 [1/2] 2.39ns
bb8:33  %Y_load_3 = load i32* %Y_addr_3, align 4        ; <i32> [#uses=2]

ST_26: Y_load_4 [1/2] 2.39ns
bb8:38  %Y_load_4 = load i32* %Y_addr_4, align 4        ; <i32> [#uses=2]

ST_26: tmp_17 [1/3] 6.36ns
bb8:46  %tmp_17 = mul nsw i32 %Y_load_5, 23170          ; <i32> [#uses=1]

ST_26: tmp_81 [1/1] 0.00ns
bb8:47  %tmp_81 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_17, i32 14, i32 31) ; <i18> [#uses=1]

ST_26: tmp_19 [1/3] 6.36ns
bb8:54  %tmp_19 = mul nsw i32 %Y_load_6, 23170          ; <i32> [#uses=1]

ST_26: tmp_83 [1/1] 0.00ns
bb8:55  %tmp_83 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_19, i32 14, i32 31) ; <i18> [#uses=1]


 <State 27>: 6.36ns
ST_27: tmp_9 [2/3] 6.36ns
bb8:19  %tmp_9 = mul nsw i32 %Y_load_8, 8867            ; <i32> [#uses=1]

ST_27: tmp_s [2/3] 6.36ns
bb8:20  %tmp_s = mul nsw i32 %Y_load_7, 21407           ; <i32> [#uses=1]

ST_27: tmp_10 [2/3] 6.36ns
bb8:24  %tmp_10 = mul nsw i32 %Y_load_8, 21407          ; <i32> [#uses=1]

ST_27: tmp_11 [2/3] 6.36ns
bb8:25  %tmp_11 = mul nsw i32 %Y_load_7, 8867           ; <i32> [#uses=1]

ST_27: z1_4 [1/1] 2.49ns
bb8:39  %z1_4 = sub nsw i32 %Y_load_3, %Y_load_4        ; <i32> [#uses=2]

ST_27: z1_7 [1/1] 2.49ns
bb8:40  %z1_7 = add nsw i32 %Y_load_4, %Y_load_3        ; <i32> [#uses=2]

ST_27: z1_5 [1/1] 0.00ns
bb8:48  %z1_5 = sext i18 %tmp_81 to i32                 ; <i32> [#uses=2]

ST_27: z1_6 [1/1] 0.00ns
bb8:56  %z1_6 = sext i18 %tmp_83 to i32                 ; <i32> [#uses=2]

ST_27: y_assign_2 [1/1] 2.49ns
bb8:61  %y_assign_2 = sub nsw i32 %z1_4, %z1_6          ; <i32> [#uses=2]

ST_27: x_assign_1 [1/1] 2.49ns
bb8:62  %x_assign_1 = add nsw i32 %z1_4, %z1_6          ; <i32> [#uses=2]

ST_27: x_assign_2 [1/1] 2.49ns
bb8:63  %x_assign_2 = sub nsw i32 %z1_7, %z1_5          ; <i32> [#uses=2]

ST_27: y_assign_1 [1/1] 2.49ns
bb8:64  %y_assign_1 = add nsw i32 %z1_7, %z1_5          ; <i32> [#uses=2]


 <State 28>: 6.36ns
ST_28: tmp_9 [1/3] 6.36ns
bb8:19  %tmp_9 = mul nsw i32 %Y_load_8, 8867            ; <i32> [#uses=1]

ST_28: tmp_s [1/3] 6.36ns
bb8:20  %tmp_s = mul nsw i32 %Y_load_7, 21407           ; <i32> [#uses=1]

ST_28: tmp_10 [1/3] 6.36ns
bb8:24  %tmp_10 = mul nsw i32 %Y_load_8, 21407          ; <i32> [#uses=1]

ST_28: tmp_11 [1/3] 6.36ns
bb8:25  %tmp_11 = mul nsw i32 %Y_load_7, 8867           ; <i32> [#uses=1]

ST_28: tmp_25 [3/3] 6.36ns
bb8:65  %tmp_25 = mul nsw i32 %x_assign_1, 13623        ; <i32> [#uses=1]

ST_28: tmp_26 [3/3] 6.36ns
bb8:66  %tmp_26 = mul nsw i32 %y_assign_1, 9102         ; <i32> [#uses=1]

ST_28: tmp_29 [3/3] 6.36ns
bb8:70  %tmp_29 = mul nsw i32 %x_assign_1, 9102         ; <i32> [#uses=1]

ST_28: tmp_30 [3/3] 6.36ns
bb8:71  %tmp_30 = mul nsw i32 %y_assign_1, 13623        ; <i32> [#uses=1]

ST_28: tmp_33 [3/3] 6.36ns
bb8:75  %tmp_33 = mul nsw i32 %x_assign_2, 16069        ; <i32> [#uses=1]

ST_28: tmp_34 [3/3] 6.36ns
bb8:76  %tmp_34 = mul nsw i32 %y_assign_2, 3196         ; <i32> [#uses=1]

ST_28: tmp_37 [3/3] 6.36ns
bb8:80  %tmp_37 = mul nsw i32 %x_assign_2, 3196         ; <i32> [#uses=1]

ST_28: tmp_38 [3/3] 6.36ns
bb8:81  %tmp_38 = mul nsw i32 %y_assign_2, 16069        ; <i32> [#uses=1]


 <State 29>: 6.36ns
ST_29: Y_load_2 [2/2] 2.39ns
bb8:1  %Y_load_2 = load i32* %Y_addr_9, align 4        ; <i32> [#uses=2]

ST_29: p_sum [1/1] 0.00ns
bb8:3  %p_sum = call i6 @_ssdm_op_PartSet.i6.i6.i3.i32.i32(i6 4, i3 %tmp_73, i32 3, i32 5) ; <i6> [#uses=1]

ST_29: p_sum_cast [1/1] 0.00ns
bb8:4  %p_sum_cast = zext i6 %p_sum to i32             ; <i32> [#uses=1]

ST_29: Y_addr [1/1] 0.00ns
bb8:5  %Y_addr = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %p_sum_cast ; <i32*> [#uses=2]

ST_29: Y_load [2/2] 2.39ns
bb8:6  %Y_load = load i32* %Y_addr, align 4            ; <i32> [#uses=2]

ST_29: tmp_3 [1/1] 2.49ns
bb8:21  %tmp_3 = sub nsw i32 %tmp_9, %tmp_s             ; <i32> [#uses=1]

ST_29: tmp_76 [1/1] 0.00ns
bb8:22  %tmp_76 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_3, i32 14, i32 31) ; <i18> [#uses=1]

ST_29: tmp_12 [1/1] 2.49ns
bb8:26  %tmp_12 = add nsw i32 %tmp_11, %tmp_10          ; <i32> [#uses=1]

ST_29: tmp_77 [1/1] 0.00ns
bb8:27  %tmp_77 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_12, i32 14, i32 31) ; <i18> [#uses=1]

ST_29: tmp_25 [2/3] 6.36ns
bb8:65  %tmp_25 = mul nsw i32 %x_assign_1, 13623        ; <i32> [#uses=1]

ST_29: tmp_26 [2/3] 6.36ns
bb8:66  %tmp_26 = mul nsw i32 %y_assign_1, 9102         ; <i32> [#uses=1]

ST_29: tmp_29 [2/3] 6.36ns
bb8:70  %tmp_29 = mul nsw i32 %x_assign_1, 9102         ; <i32> [#uses=1]

ST_29: tmp_30 [2/3] 6.36ns
bb8:71  %tmp_30 = mul nsw i32 %y_assign_1, 13623        ; <i32> [#uses=1]

ST_29: tmp_33 [2/3] 6.36ns
bb8:75  %tmp_33 = mul nsw i32 %x_assign_2, 16069        ; <i32> [#uses=1]

ST_29: tmp_34 [2/3] 6.36ns
bb8:76  %tmp_34 = mul nsw i32 %y_assign_2, 3196         ; <i32> [#uses=1]

ST_29: tmp_37 [2/3] 6.36ns
bb8:80  %tmp_37 = mul nsw i32 %x_assign_2, 3196         ; <i32> [#uses=1]

ST_29: tmp_38 [2/3] 6.36ns
bb8:81  %tmp_38 = mul nsw i32 %y_assign_2, 16069        ; <i32> [#uses=1]


 <State 30>: 6.36ns
ST_30: Y_load_2 [1/2] 2.39ns
bb8:1  %Y_load_2 = load i32* %Y_addr_9, align 4        ; <i32> [#uses=2]

ST_30: Y_load [1/2] 2.39ns
bb8:6  %Y_load = load i32* %Y_addr, align 4            ; <i32> [#uses=2]

ST_30: tmp_25 [1/3] 6.36ns
bb8:65  %tmp_25 = mul nsw i32 %x_assign_1, 13623        ; <i32> [#uses=1]

ST_30: tmp_26 [1/3] 6.36ns
bb8:66  %tmp_26 = mul nsw i32 %y_assign_1, 9102         ; <i32> [#uses=1]

ST_30: tmp_29 [1/3] 6.36ns
bb8:70  %tmp_29 = mul nsw i32 %x_assign_1, 9102         ; <i32> [#uses=1]

ST_30: tmp_30 [1/3] 6.36ns
bb8:71  %tmp_30 = mul nsw i32 %y_assign_1, 13623        ; <i32> [#uses=1]

ST_30: tmp_33 [1/3] 6.36ns
bb8:75  %tmp_33 = mul nsw i32 %x_assign_2, 16069        ; <i32> [#uses=1]

ST_30: tmp_34 [1/3] 6.36ns
bb8:76  %tmp_34 = mul nsw i32 %y_assign_2, 3196         ; <i32> [#uses=1]

ST_30: tmp_37 [1/3] 6.36ns
bb8:80  %tmp_37 = mul nsw i32 %x_assign_2, 3196         ; <i32> [#uses=1]

ST_30: tmp_38 [1/3] 6.36ns
bb8:81  %tmp_38 = mul nsw i32 %y_assign_2, 16069        ; <i32> [#uses=1]


 <State 31>: 4.98ns
ST_31: z1_1 [1/1] 2.49ns
bb8:7  %z1_1 = sub nsw i32 %Y_load_2, %Y_load          ; <i32> [#uses=2]

ST_31: z1_0 [1/1] 2.49ns
bb8:8  %z1_0 = add nsw i32 %Y_load, %Y_load_2          ; <i32> [#uses=2]

ST_31: z1_3 [1/1] 0.00ns
bb8:28  %z1_3 = sext i18 %tmp_77 to i32                 ; <i32> [#uses=2]

ST_31: z3_3 [1/1] 2.49ns
bb8:57  %z3_3 = sub nsw i32 %z1_0, %z1_3                ; <i32> [#uses=2]

ST_31: z3_0 [1/1] 2.49ns
bb8:58  %z3_0 = add nsw i32 %z1_0, %z1_3                ; <i32> [#uses=2]

ST_31: tmp_27 [1/1] 2.49ns
bb8:67  %tmp_27 = sub nsw i32 %tmp_25, %tmp_26          ; <i32> [#uses=1]

ST_31: tmp_84 [1/1] 0.00ns
bb8:68  %tmp_84 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_27, i32 14, i32 31) ; <i18> [#uses=1]

ST_31: tmp_31 [1/1] 2.49ns
bb8:72  %tmp_31 = add nsw i32 %tmp_30, %tmp_29          ; <i32> [#uses=1]

ST_31: tmp_85 [1/1] 0.00ns
bb8:73  %tmp_85 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_31, i32 14, i32 31) ; <i18> [#uses=1]

ST_31: tmp_35 [1/1] 2.49ns
bb8:77  %tmp_35 = sub nsw i32 %tmp_33, %tmp_34          ; <i32> [#uses=1]

ST_31: tmp_86 [1/1] 0.00ns
bb8:78  %tmp_86 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_35, i32 14, i32 31) ; <i18> [#uses=1]

ST_31: tmp_39 [1/1] 2.49ns
bb8:82  %tmp_39 = add nsw i32 %tmp_38, %tmp_37          ; <i32> [#uses=1]

ST_31: tmp_88 [1/1] 0.00ns
bb8:83  %tmp_88 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_39, i32 14, i32 31) ; <i18> [#uses=1]


 <State 32>: 4.88ns
ST_32: z1_2 [1/1] 0.00ns
bb8:23  %z1_2 = sext i18 %tmp_76 to i32                 ; <i32> [#uses=2]

ST_32: z3_2 [1/1] 2.49ns
bb8:59  %z3_2 = sub nsw i32 %z1_1, %z1_2                ; <i32> [#uses=2]

ST_32: z3_1 [1/1] 2.49ns
bb8:60  %z3_1 = add nsw i32 %z1_1, %z1_2                ; <i32> [#uses=2]

ST_32: z3_7 [1/1] 0.00ns
bb8:74  %z3_7 = sext i18 %tmp_85 to i32                 ; <i32> [#uses=2]

ST_32: tmp_41 [1/1] 2.49ns
bb8:85  %tmp_41 = sub nsw i32 %z3_0, %z3_7              ; <i32> [#uses=1]

ST_32: stg_322 [1/1] 2.39ns
bb8:86  store i32 %tmp_41, i32* %Y_addr_4, align 4

ST_32: tmp_42 [1/1] 2.49ns
bb8:87  %tmp_42 = add nsw i32 %z3_0, %z3_7              ; <i32> [#uses=1]

ST_32: stg_324 [1/1] 2.39ns
bb8:88  store i32 %tmp_42, i32* %Y_addr_9, align 4


 <State 33>: 4.88ns
ST_33: z3_6 [1/1] 0.00ns
bb8:84  %z3_6 = sext i18 %tmp_88 to i32                 ; <i32> [#uses=2]

ST_33: tmp_43 [1/1] 2.49ns
bb8:89  %tmp_43 = sub nsw i32 %z3_1, %z3_6              ; <i32> [#uses=1]

ST_33: stg_327 [1/1] 2.39ns
bb8:90  store i32 %tmp_43, i32* %Y_addr_1, align 4

ST_33: tmp_44 [1/1] 2.49ns
bb8:91  %tmp_44 = add nsw i32 %z3_1, %z3_6              ; <i32> [#uses=1]

ST_33: stg_329 [1/1] 2.39ns
bb8:92  store i32 %tmp_44, i32* %Y_addr_3, align 4


 <State 34>: 4.88ns
ST_34: z3_5 [1/1] 0.00ns
bb8:79  %z3_5 = sext i18 %tmp_86 to i32                 ; <i32> [#uses=2]

ST_34: tmp_45 [1/1] 2.49ns
bb8:93  %tmp_45 = sub nsw i32 %z3_2, %z3_5              ; <i32> [#uses=1]

ST_34: stg_332 [1/1] 2.39ns
bb8:94  store i32 %tmp_45, i32* %Y_addr_6, align 4

ST_34: tmp_46 [1/1] 2.49ns
bb8:95  %tmp_46 = add nsw i32 %z3_2, %z3_5              ; <i32> [#uses=1]

ST_34: stg_334 [1/1] 2.39ns
bb8:96  store i32 %tmp_46, i32* %Y_addr_2, align 4


 <State 35>: 4.88ns
ST_35: z3_4 [1/1] 0.00ns
bb8:69  %z3_4 = sext i18 %tmp_84 to i32                 ; <i32> [#uses=2]

ST_35: tmp_47 [1/1] 2.49ns
bb8:97  %tmp_47 = sub nsw i32 %z3_3, %z3_4              ; <i32> [#uses=1]

ST_35: stg_337 [1/1] 2.39ns
bb8:98  store i32 %tmp_47, i32* %Y_addr, align 4

ST_35: tmp_48 [1/1] 2.49ns
bb8:99  %tmp_48 = add nsw i32 %z3_3, %z3_4              ; <i32> [#uses=1]

ST_35: stg_339 [1/1] 2.39ns
bb8:100  store i32 %tmp_48, i32* %Y_addr_5, align 4

ST_35: stg_340 [1/1] 0.00ns
bb8:101  br label %bb9


 <State 36>: 3.09ns
ST_36: column [1/1] 0.00ns
bb21:0  %column = phi i4 [ 0, %bb9 ], [ %column_3, %bb19 ] ; <i4> [#uses=3]

ST_36: column_cast [1/1] 0.00ns
bb21:1  %column_cast = zext i4 %column to i6            ; <i6> [#uses=2]

ST_36: empty_27 [1/1] 0.00ns
bb21:2  %empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_36: exitcond3 [1/1] 1.88ns
bb21:3  %exitcond3 = icmp eq i4 %column, -8             ; <i1> [#uses=1]

ST_36: column_3 [1/1] 0.85ns
bb21:4  %column_3 = add i4 %column, 1                   ; <i4> [#uses=1]

ST_36: stg_346 [1/1] 1.21ns
bb21:5  br i1 %exitcond3, label %bb22, label %bb13

ST_36: val_V_6_0 [1/1] 0.00ns
bb22:0  %val_V_6_0 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %WriteFullPort_0) nounwind ; <i1> [#uses=0]

ST_36: stg_348 [1/1] 1.26ns
bb22:1  br label %bb8.i


 <State 37>: 4.16ns
ST_37: row_1 [1/1] 0.00ns
bb13:0  %row_1 = phi i4 [ %row_4, %bb12 ], [ 0, %bb21 ] ; <i4> [#uses=4]

ST_37: row_1_cast1 [1/1] 0.00ns
bb13:1  %row_1_cast1 = zext i4 %row_1 to i6             ; <i6> [#uses=1]

ST_37: row_1_cast [1/1] 0.00ns
bb13:2  %row_1_cast = zext i4 %row_1 to i32             ; <i32> [#uses=1]

ST_37: empty_25 [1/1] 0.00ns
bb13:3  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_37: exitcond4 [1/1] 1.88ns
bb13:4  %exitcond4 = icmp eq i4 %row_1, -8              ; <i1> [#uses=1]

ST_37: row_4 [1/1] 0.85ns
bb13:5  %row_4 = add i4 %row_1, 1                       ; <i4> [#uses=1]

ST_37: stg_355 [1/1] 0.00ns
bb13:6  br i1 %exitcond4, label %bb14, label %bb12

ST_37: tmp_71 [1/1] 0.00ns
bb12:0  %tmp_71 = shl i6 %row_1_cast1, 3                ; <i6> [#uses=1]

ST_37: tmp_72 [1/1] 1.77ns
bb12:1  %tmp_72 = add i6 %tmp_71, %column_cast          ; <i6> [#uses=1]

ST_37: tmp_97_cast [1/1] 0.00ns
bb12:2  %tmp_97_cast = zext i6 %tmp_72 to i32           ; <i32> [#uses=1]

ST_37: Y_addr_8 [1/1] 0.00ns
bb12:3  %Y_addr_8 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_97_cast ; <i32*> [#uses=1]

ST_37: Y_load_1 [2/2] 2.39ns
bb12:4  %Y_load_1 = load i32* %Y_addr_8, align 4        ; <i32> [#uses=1]

ST_37: Yc_load_5 [2/2] 2.39ns
bb14:20  %Yc_load_5 = load i32* %Yc_addr_5, align 4      ; <i32> [#uses=1]

ST_37: Yc_load_6 [2/2] 2.39ns
bb14:24  %Yc_load_6 = load i32* %Yc_addr_6, align 4      ; <i32> [#uses=1]


 <State 38>: 4.78ns
ST_38: Y_load_1 [1/2] 2.39ns
bb12:4  %Y_load_1 = load i32* %Y_addr_8, align 4        ; <i32> [#uses=1]

ST_38: Yc_addr_7 [1/1] 0.00ns
bb12:5  %Yc_addr_7 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 %row_1_cast ; <i32*> [#uses=1]

ST_38: stg_365 [1/1] 2.39ns
bb12:6  store i32 %Y_load_1, i32* %Yc_addr_7, align 4

ST_38: stg_366 [1/1] 0.00ns
bb12:7  br label %bb13


 <State 39>: 2.39ns
ST_39: Yc_load_5 [1/2] 2.39ns
bb14:20  %Yc_load_5 = load i32* %Yc_addr_5, align 4      ; <i32> [#uses=1]

ST_39: Yc_load_6 [1/2] 2.39ns
bb14:24  %Yc_load_6 = load i32* %Yc_addr_6, align 4      ; <i32> [#uses=1]


 <State 40>: 6.36ns
ST_40: Yc_load_2 [2/2] 2.39ns
bb14:4  %Yc_load_2 = load i32* %Yc_addr_1, align 4      ; <i32> [#uses=2]

ST_40: Yc_load_8 [2/2] 2.39ns
bb14:5  %Yc_load_8 = load i32* %Yc_addr_2, align 4      ; <i32> [#uses=2]

ST_40: tmp_21 [3/3] 6.36ns
bb14:21  %tmp_21 = mul nsw i32 %Yc_load_5, 23170         ; <i32> [#uses=1]

ST_40: tmp_23 [3/3] 6.36ns
bb14:25  %tmp_23 = mul nsw i32 %Yc_load_6, 23170         ; <i32> [#uses=1]


 <State 41>: 6.36ns
ST_41: Yc_load_2 [1/2] 2.39ns
bb14:4  %Yc_load_2 = load i32* %Yc_addr_1, align 4      ; <i32> [#uses=2]

ST_41: Yc_load_8 [1/2] 2.39ns
bb14:5  %Yc_load_8 = load i32* %Yc_addr_2, align 4      ; <i32> [#uses=2]

ST_41: Yc_load_3 [2/2] 2.39ns
bb14:16  %Yc_load_3 = load i32* %Yc_addr_3, align 4      ; <i32> [#uses=2]

ST_41: Yc_load_4 [2/2] 2.39ns
bb14:17  %Yc_load_4 = load i32* %Yc_addr_4, align 4      ; <i32> [#uses=2]

ST_41: tmp_21 [2/3] 6.36ns
bb14:21  %tmp_21 = mul nsw i32 %Yc_load_5, 23170         ; <i32> [#uses=1]

ST_41: tmp_23 [2/3] 6.36ns
bb14:25  %tmp_23 = mul nsw i32 %Yc_load_6, 23170         ; <i32> [#uses=1]


 <State 42>: 6.36ns
ST_42: tmp_6 [3/3] 6.36ns
bb14:6  %tmp_6 = mul nsw i32 %Yc_load_8, 8867           ; <i32> [#uses=1]

ST_42: tmp_7 [3/3] 6.36ns
bb14:7  %tmp_7 = mul nsw i32 %Yc_load_2, 21407          ; <i32> [#uses=1]

ST_42: tmp_15 [3/3] 6.36ns
bb14:11  %tmp_15 = mul nsw i32 %Yc_load_8, 21407         ; <i32> [#uses=1]

ST_42: tmp_16 [3/3] 6.36ns
bb14:12  %tmp_16 = mul nsw i32 %Yc_load_2, 8867          ; <i32> [#uses=1]

ST_42: Yc_load_3 [1/2] 2.39ns
bb14:16  %Yc_load_3 = load i32* %Yc_addr_3, align 4      ; <i32> [#uses=2]

ST_42: Yc_load_4 [1/2] 2.39ns
bb14:17  %Yc_load_4 = load i32* %Yc_addr_4, align 4      ; <i32> [#uses=2]

ST_42: tmp_21 [1/3] 6.36ns
bb14:21  %tmp_21 = mul nsw i32 %Yc_load_5, 23170         ; <i32> [#uses=1]

ST_42: tmp_22 [1/1] 0.00ns
bb14:22  %tmp_22 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_21, i32 14, i32 31) ; <i18> [#uses=1]

ST_42: tmp_23 [1/3] 6.36ns
bb14:25  %tmp_23 = mul nsw i32 %Yc_load_6, 23170         ; <i32> [#uses=1]

ST_42: tmp_24 [1/1] 0.00ns
bb14:26  %tmp_24 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_23, i32 14, i32 31) ; <i18> [#uses=1]


 <State 43>: 6.36ns
ST_43: tmp_6 [2/3] 6.36ns
bb14:6  %tmp_6 = mul nsw i32 %Yc_load_8, 8867           ; <i32> [#uses=1]

ST_43: tmp_7 [2/3] 6.36ns
bb14:7  %tmp_7 = mul nsw i32 %Yc_load_2, 21407          ; <i32> [#uses=1]

ST_43: tmp_15 [2/3] 6.36ns
bb14:11  %tmp_15 = mul nsw i32 %Yc_load_8, 21407         ; <i32> [#uses=1]

ST_43: tmp_16 [2/3] 6.36ns
bb14:12  %tmp_16 = mul nsw i32 %Yc_load_2, 8867          ; <i32> [#uses=1]

ST_43: z1_4_1 [1/1] 2.49ns
bb14:18  %z1_4_1 = sub nsw i32 %Yc_load_3, %Yc_load_4    ; <i32> [#uses=2]

ST_43: z1_7_1 [1/1] 2.49ns
bb14:19  %z1_7_1 = add nsw i32 %Yc_load_4, %Yc_load_3    ; <i32> [#uses=2]

ST_43: z1_5_1 [1/1] 0.00ns
bb14:23  %z1_5_1 = sext i18 %tmp_22 to i32               ; <i32> [#uses=2]

ST_43: z1_6_1 [1/1] 0.00ns
bb14:27  %z1_6_1 = sext i18 %tmp_24 to i32               ; <i32> [#uses=2]

ST_43: y_assign_5 [1/1] 2.49ns
bb14:32  %y_assign_5 = sub nsw i32 %z1_4_1, %z1_6_1      ; <i32> [#uses=2]

ST_43: x_assign_4 [1/1] 2.49ns
bb14:33  %x_assign_4 = add nsw i32 %z1_4_1, %z1_6_1      ; <i32> [#uses=2]

ST_43: x_assign_5 [1/1] 2.49ns
bb14:34  %x_assign_5 = sub nsw i32 %z1_7_1, %z1_5_1      ; <i32> [#uses=2]

ST_43: y_assign_4 [1/1] 2.49ns
bb14:35  %y_assign_4 = add nsw i32 %z1_7_1, %z1_5_1      ; <i32> [#uses=2]


 <State 44>: 6.36ns
ST_44: tmp_6 [1/3] 6.36ns
bb14:6  %tmp_6 = mul nsw i32 %Yc_load_8, 8867           ; <i32> [#uses=1]

ST_44: tmp_7 [1/3] 6.36ns
bb14:7  %tmp_7 = mul nsw i32 %Yc_load_2, 21407          ; <i32> [#uses=1]

ST_44: tmp_15 [1/3] 6.36ns
bb14:11  %tmp_15 = mul nsw i32 %Yc_load_8, 21407         ; <i32> [#uses=1]

ST_44: tmp_16 [1/3] 6.36ns
bb14:12  %tmp_16 = mul nsw i32 %Yc_load_2, 8867          ; <i32> [#uses=1]

ST_44: tmp_28 [3/3] 6.36ns
bb14:36  %tmp_28 = mul nsw i32 %x_assign_4, 13623        ; <i32> [#uses=1]

ST_44: tmp_32 [3/3] 6.36ns
bb14:37  %tmp_32 = mul nsw i32 %y_assign_4, 9102         ; <i32> [#uses=1]

ST_44: tmp_50 [3/3] 6.36ns
bb14:41  %tmp_50 = mul nsw i32 %x_assign_4, 9102         ; <i32> [#uses=1]

ST_44: tmp_52 [3/3] 6.36ns
bb14:42  %tmp_52 = mul nsw i32 %y_assign_4, 13623        ; <i32> [#uses=1]

ST_44: tmp_55 [3/3] 6.36ns
bb14:46  %tmp_55 = mul nsw i32 %x_assign_5, 16069        ; <i32> [#uses=1]

ST_44: tmp_56 [3/3] 6.36ns
bb14:47  %tmp_56 = mul nsw i32 %y_assign_5, 3196         ; <i32> [#uses=1]

ST_44: tmp_59 [3/3] 6.36ns
bb14:51  %tmp_59 = mul nsw i32 %x_assign_5, 3196         ; <i32> [#uses=1]

ST_44: tmp_60 [3/3] 6.36ns
bb14:52  %tmp_60 = mul nsw i32 %y_assign_5, 16069        ; <i32> [#uses=1]


 <State 45>: 6.36ns
ST_45: Yc_load_1 [2/2] 2.39ns
bb14:0  %Yc_load_1 = load i32* %Yc_addr_9, align 4      ; <i32> [#uses=2]

ST_45: Yc_load [2/2] 2.39ns
bb14:1  %Yc_load = load i32* %Yc_addr, align 4          ; <i32> [#uses=2]

ST_45: tmp_13 [1/1] 2.49ns
bb14:8  %tmp_13 = sub nsw i32 %tmp_6, %tmp_7            ; <i32> [#uses=1]

ST_45: tmp_14 [1/1] 0.00ns
bb14:9  %tmp_14 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_13, i32 14, i32 31) ; <i18> [#uses=1]

ST_45: tmp_18 [1/1] 2.49ns
bb14:13  %tmp_18 = add nsw i32 %tmp_16, %tmp_15          ; <i32> [#uses=1]

ST_45: tmp_20 [1/1] 0.00ns
bb14:14  %tmp_20 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_18, i32 14, i32 31) ; <i18> [#uses=1]

ST_45: tmp_28 [2/3] 6.36ns
bb14:36  %tmp_28 = mul nsw i32 %x_assign_4, 13623        ; <i32> [#uses=1]

ST_45: tmp_32 [2/3] 6.36ns
bb14:37  %tmp_32 = mul nsw i32 %y_assign_4, 9102         ; <i32> [#uses=1]

ST_45: tmp_50 [2/3] 6.36ns
bb14:41  %tmp_50 = mul nsw i32 %x_assign_4, 9102         ; <i32> [#uses=1]

ST_45: tmp_52 [2/3] 6.36ns
bb14:42  %tmp_52 = mul nsw i32 %y_assign_4, 13623        ; <i32> [#uses=1]

ST_45: tmp_55 [2/3] 6.36ns
bb14:46  %tmp_55 = mul nsw i32 %x_assign_5, 16069        ; <i32> [#uses=1]

ST_45: tmp_56 [2/3] 6.36ns
bb14:47  %tmp_56 = mul nsw i32 %y_assign_5, 3196         ; <i32> [#uses=1]

ST_45: tmp_59 [2/3] 6.36ns
bb14:51  %tmp_59 = mul nsw i32 %x_assign_5, 3196         ; <i32> [#uses=1]

ST_45: tmp_60 [2/3] 6.36ns
bb14:52  %tmp_60 = mul nsw i32 %y_assign_5, 16069        ; <i32> [#uses=1]


 <State 46>: 6.36ns
ST_46: Yc_load_1 [1/2] 2.39ns
bb14:0  %Yc_load_1 = load i32* %Yc_addr_9, align 4      ; <i32> [#uses=2]

ST_46: Yc_load [1/2] 2.39ns
bb14:1  %Yc_load = load i32* %Yc_addr, align 4          ; <i32> [#uses=2]

ST_46: tmp_28 [1/3] 6.36ns
bb14:36  %tmp_28 = mul nsw i32 %x_assign_4, 13623        ; <i32> [#uses=1]

ST_46: tmp_32 [1/3] 6.36ns
bb14:37  %tmp_32 = mul nsw i32 %y_assign_4, 9102         ; <i32> [#uses=1]

ST_46: tmp_50 [1/3] 6.36ns
bb14:41  %tmp_50 = mul nsw i32 %x_assign_4, 9102         ; <i32> [#uses=1]

ST_46: tmp_52 [1/3] 6.36ns
bb14:42  %tmp_52 = mul nsw i32 %y_assign_4, 13623        ; <i32> [#uses=1]

ST_46: tmp_55 [1/3] 6.36ns
bb14:46  %tmp_55 = mul nsw i32 %x_assign_5, 16069        ; <i32> [#uses=1]

ST_46: tmp_56 [1/3] 6.36ns
bb14:47  %tmp_56 = mul nsw i32 %y_assign_5, 3196         ; <i32> [#uses=1]

ST_46: tmp_59 [1/3] 6.36ns
bb14:51  %tmp_59 = mul nsw i32 %x_assign_5, 3196         ; <i32> [#uses=1]

ST_46: tmp_60 [1/3] 6.36ns
bb14:52  %tmp_60 = mul nsw i32 %y_assign_5, 16069        ; <i32> [#uses=1]


 <State 47>: 4.98ns
ST_47: z1_1_1 [1/1] 2.49ns
bb14:2  %z1_1_1 = sub nsw i32 %Yc_load_1, %Yc_load      ; <i32> [#uses=2]

ST_47: z1_0_1 [1/1] 2.49ns
bb14:3  %z1_0_1 = add nsw i32 %Yc_load, %Yc_load_1      ; <i32> [#uses=2]

ST_47: z1_3_1 [1/1] 0.00ns
bb14:15  %z1_3_1 = sext i18 %tmp_20 to i32               ; <i32> [#uses=2]

ST_47: z3_3_1 [1/1] 2.49ns
bb14:28  %z3_3_1 = sub nsw i32 %z1_0_1, %z1_3_1          ; <i32> [#uses=2]

ST_47: z3_0_1 [1/1] 2.49ns
bb14:29  %z3_0_1 = add nsw i32 %z1_0_1, %z1_3_1          ; <i32> [#uses=2]

ST_47: tmp_36 [1/1] 2.49ns
bb14:38  %tmp_36 = sub nsw i32 %tmp_28, %tmp_32          ; <i32> [#uses=1]

ST_47: tmp_40 [1/1] 0.00ns
bb14:39  %tmp_40 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_36, i32 14, i32 31) ; <i18> [#uses=1]

ST_47: tmp_53 [1/1] 2.49ns
bb14:43  %tmp_53 = add nsw i32 %tmp_52, %tmp_50          ; <i32> [#uses=1]

ST_47: tmp_54 [1/1] 0.00ns
bb14:44  %tmp_54 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_53, i32 14, i32 31) ; <i18> [#uses=1]

ST_47: tmp_57 [1/1] 2.49ns
bb14:48  %tmp_57 = sub nsw i32 %tmp_55, %tmp_56          ; <i32> [#uses=1]

ST_47: tmp_58 [1/1] 0.00ns
bb14:49  %tmp_58 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_57, i32 14, i32 31) ; <i18> [#uses=1]

ST_47: tmp_61 [1/1] 2.49ns
bb14:53  %tmp_61 = add nsw i32 %tmp_60, %tmp_59          ; <i32> [#uses=1]

ST_47: tmp_62 [1/1] 0.00ns
bb14:54  %tmp_62 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_61, i32 14, i32 31) ; <i18> [#uses=1]


 <State 48>: 4.88ns
ST_48: z1_2_1 [1/1] 0.00ns
bb14:10  %z1_2_1 = sext i18 %tmp_14 to i32               ; <i32> [#uses=2]

ST_48: z3_2_1 [1/1] 2.49ns
bb14:30  %z3_2_1 = sub nsw i32 %z1_1_1, %z1_2_1          ; <i32> [#uses=2]

ST_48: z3_1_1 [1/1] 2.49ns
bb14:31  %z3_1_1 = add nsw i32 %z1_1_1, %z1_2_1          ; <i32> [#uses=2]

ST_48: z3_7_1 [1/1] 0.00ns
bb14:45  %z3_7_1 = sext i18 %tmp_54 to i32               ; <i32> [#uses=2]

ST_48: tmp_63 [1/1] 2.49ns
bb14:56  %tmp_63 = sub nsw i32 %z3_0_1, %z3_7_1          ; <i32> [#uses=1]

ST_48: stg_455 [1/1] 2.39ns
bb14:57  store i32 %tmp_63, i32* %Yc_addr_4, align 4

ST_48: tmp_64 [1/1] 2.49ns
bb14:58  %tmp_64 = add nsw i32 %z3_0_1, %z3_7_1          ; <i32> [#uses=1]

ST_48: stg_457 [1/1] 2.39ns
bb14:59  store i32 %tmp_64, i32* %Yc_addr_9, align 4


 <State 49>: 4.88ns
ST_49: z3_6_1 [1/1] 0.00ns
bb14:55  %z3_6_1 = sext i18 %tmp_62 to i32               ; <i32> [#uses=2]

ST_49: tmp_65 [1/1] 2.49ns
bb14:60  %tmp_65 = sub nsw i32 %z3_1_1, %z3_6_1          ; <i32> [#uses=1]

ST_49: stg_460 [1/1] 2.39ns
bb14:61  store i32 %tmp_65, i32* %Yc_addr_1, align 4

ST_49: tmp_66 [1/1] 2.49ns
bb14:62  %tmp_66 = add nsw i32 %z3_1_1, %z3_6_1          ; <i32> [#uses=1]

ST_49: stg_462 [1/1] 2.39ns
bb14:63  store i32 %tmp_66, i32* %Yc_addr_3, align 4


 <State 50>: 4.88ns
ST_50: z3_5_1 [1/1] 0.00ns
bb14:50  %z3_5_1 = sext i18 %tmp_58 to i32               ; <i32> [#uses=2]

ST_50: tmp_67 [1/1] 2.49ns
bb14:64  %tmp_67 = sub nsw i32 %z3_2_1, %z3_5_1          ; <i32> [#uses=1]

ST_50: stg_465 [1/1] 2.39ns
bb14:65  store i32 %tmp_67, i32* %Yc_addr_6, align 4

ST_50: tmp_68 [1/1] 2.49ns
bb14:66  %tmp_68 = add nsw i32 %z3_2_1, %z3_5_1          ; <i32> [#uses=1]

ST_50: stg_467 [1/1] 2.39ns
bb14:67  store i32 %tmp_68, i32* %Yc_addr_2, align 4


 <State 51>: 4.88ns
ST_51: z3_4_1 [1/1] 0.00ns
bb14:40  %z3_4_1 = sext i18 %tmp_40 to i32               ; <i32> [#uses=2]

ST_51: tmp_69 [1/1] 2.49ns
bb14:68  %tmp_69 = sub nsw i32 %z3_3_1, %z3_4_1          ; <i32> [#uses=1]

ST_51: stg_470 [1/1] 2.39ns
bb14:69  store i32 %tmp_69, i32* %Yc_addr, align 4

ST_51: tmp_70 [1/1] 2.49ns
bb14:70  %tmp_70 = add nsw i32 %z3_3_1, %z3_4_1          ; <i32> [#uses=1]

ST_51: stg_472 [1/1] 2.39ns
bb14:71  store i32 %tmp_70, i32* %Yc_addr_5, align 4

ST_51: stg_473 [1/1] 1.21ns
bb14:72  br label %bb19


 <State 52>: 2.39ns
ST_52: row_2 [1/1] 0.00ns
bb19:0  %row_2 = phi i4 [ 0, %bb14 ], [ %row_5, %bb15_ifconv ] ; <i4> [#uses=4]

ST_52: row_2_cast1 [1/1] 0.00ns
bb19:1  %row_2_cast1 = zext i4 %row_2 to i32            ; <i32> [#uses=1]

ST_52: row_2_cast [1/1] 0.00ns
bb19:2  %row_2_cast = zext i4 %row_2 to i6              ; <i6> [#uses=1]

ST_52: empty_26 [1/1] 0.00ns
bb19:3  %empty_26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_52: exitcond7 [1/1] 1.88ns
bb19:4  %exitcond7 = icmp eq i4 %row_2, -8              ; <i1> [#uses=1]

ST_52: row_5 [1/1] 0.85ns
bb19:5  %row_5 = add i4 %row_2, 1                       ; <i4> [#uses=1]

ST_52: stg_480 [1/1] 0.00ns
bb19:6  br i1 %exitcond7, label %bb21, label %bb15_ifconv

ST_52: Yc_addr_8 [1/1] 0.00ns
bb15_ifconv:0  %Yc_addr_8 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 %row_2_cast1 ; <i32*> [#uses=1]

ST_52: Yc_load_7 [2/2] 2.39ns
bb15_ifconv:1  %Yc_load_7 = load i32* %Yc_addr_8, align 4      ; <i32> [#uses=2]

ST_52: tmp_95 [1/1] 0.00ns
bb15_ifconv:16  %tmp_95 = shl i6 %row_2_cast, 3                 ; <i6> [#uses=1]

ST_52: tmp_96 [1/1] 1.77ns
bb15_ifconv:17  %tmp_96 = add i6 %tmp_95, %column_cast          ; <i6> [#uses=1]


 <State 53>: 6.25ns
ST_53: Yc_load_7 [1/2] 2.39ns
bb15_ifconv:1  %Yc_load_7 = load i32* %Yc_addr_8, align 4      ; <i32> [#uses=2]

ST_53: tmp_89 [1/1] 0.00ns
bb15_ifconv:2  %tmp_89 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %Yc_load_7, i32 31) ; <i1> [#uses=1]

ST_53: p_lobit_neg_cast [1/1] 0.00ns
bb15_ifconv:3  %p_lobit_neg_cast = sext i1 %tmp_89 to i6       ; <i6> [#uses=1]

ST_53: tmp [1/1] 1.37ns
bb15_ifconv:4  %tmp = xor i6 %p_lobit_neg_cast, -32            ; <i6> [#uses=1]

ST_53: tmp_cast [1/1] 0.00ns
bb15_ifconv:5  %tmp_cast = zext i6 %tmp to i32                 ; <i32> [#uses=1]

ST_53: tmp_90 [1/1] 2.49ns
bb15_ifconv:6  %tmp_90 = add i32 %tmp_cast, %Yc_load_7         ; <i32> [#uses=1]

ST_53: tmp_91 [1/1] 0.00ns
bb15_ifconv:7  %tmp_91 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %tmp_90, i32 6, i32 31) ; <i26> [#uses=1]


 <State 54>: 6.07ns
ST_54: tmp_102_cast [1/1] 0.00ns
bb15_ifconv:8  %tmp_102_cast = sext i26 %tmp_91 to i27         ; <i27> [#uses=1]

ST_54: r [1/1] 2.37ns
bb15_ifconv:9  %r = add i27 %tmp_102_cast, 128                 ; <i27> [#uses=3]

ST_54: tmp_92 [1/1] 2.44ns
bb15_ifconv:10  %tmp_92 = icmp sgt i27 %r, 0                    ; <i1> [#uses=1]

ST_54: tmp_93 [1/1] 0.00ns
bb15_ifconv:11  %tmp_93 = call i19 @_ssdm_op_PartSelect.i19.i27.i32.i32(i27 %r, i32 8, i32 26) ; <i19> [#uses=1]

ST_54: icmp [1/1] 2.33ns
bb15_ifconv:12  %icmp = icmp slt i19 %tmp_93, 1                 ; <i1> [#uses=1]

ST_54: tmp_94 [1/1] 0.00ns
bb15_ifconv:13  %tmp_94 = trunc i27 %r to i8                    ; <i8> [#uses=1]

ST_54: phitmp [1/1] 1.37ns
bb15_ifconv:14  %phitmp = select i1 %icmp, i8 %tmp_94, i8 -1    ; <i8> [#uses=1]


 <State 55>: 3.76ns
ST_55: iftmp_s [1/1] 1.37ns
bb15_ifconv:15  %iftmp_s = select i1 %tmp_92, i8 %phitmp, i8 0  ; <i8> [#uses=1]

ST_55: tmp_107_cast [1/1] 0.00ns
bb15_ifconv:18  %tmp_107_cast = zext i6 %tmp_96 to i32          ; <i32> [#uses=1]

ST_55: Idct_addr [1/1] 0.00ns
bb15_ifconv:19  %Idct_addr = getelementptr inbounds [64 x i8]* %Idct, i32 0, i32 %tmp_107_cast ; <i8*> [#uses=1]

ST_55: stg_502 [1/1] 2.39ns
bb15_ifconv:20  store i8 %iftmp_s, i8* %Idct_addr, align 1

ST_55: stg_503 [1/1] 0.00ns
bb15_ifconv:21  br label %bb19


 <State 56>: 1.91ns
ST_56: i_2 [1/1] 0.00ns
bb8.i:0  %i_2 = phi i5 [ %i_3, %bb7.i67 ], [ 0, %bb22 ]  ; <i5> [#uses=6]

ST_56: i_6_cast [1/1] 0.00ns
bb8.i:1  %i_6_cast = zext i5 %i_2 to i7                  ; <i7> [#uses=1]

ST_56: tmp_i [1/1] 0.00ns
bb8.i:2  %tmp_i = shl i7 %i_6_cast, 2                    ; <i7> [#uses=1]

ST_56: tmp_i_cast [1/1] 0.00ns
bb8.i:3  %tmp_i_cast = zext i7 %tmp_i to i32             ; <i32> [#uses=1]

ST_56: tmp332338_i [1/1] 0.00ns
bb8.i:4  %tmp332338_i = call i7 @_ssdm_op_PartSet.i7.i7.i5.i32.i32(i7 3, i5 %i_2, i32 2, i32 6) ; <i7> [#uses=1]

ST_56: tmp332338_i_cast [1/1] 0.00ns
bb8.i:5  %tmp332338_i_cast = zext i7 %tmp332338_i to i32 ; <i32> [#uses=1]

ST_56: Idct_addr_1 [1/1] 0.00ns
bb8.i:6  %Idct_addr_1 = getelementptr [64 x i8]* %Idct, i32 0, i32 %tmp332338_i_cast ; <i8*> [#uses=1]

ST_56: tmp333339_i [1/1] 0.00ns
bb8.i:7  %tmp333339_i = call i7 @_ssdm_op_PartSet.i7.i7.i5.i32.i32(i7 2, i5 %i_2, i32 2, i32 6) ; <i7> [#uses=1]

ST_56: tmp333339_i_cast [1/1] 0.00ns
bb8.i:8  %tmp333339_i_cast = zext i7 %tmp333339_i to i32 ; <i32> [#uses=1]

ST_56: Idct_addr_2 [1/1] 0.00ns
bb8.i:9  %Idct_addr_2 = getelementptr [64 x i8]* %Idct, i32 0, i32 %tmp333339_i_cast ; <i8*> [#uses=1]

ST_56: tmp335340_i [1/1] 0.00ns
bb8.i:10  %tmp335340_i = call i7 @_ssdm_op_PartSet.i7.i7.i5.i32.i32(i7 1, i5 %i_2, i32 2, i32 6) ; <i7> [#uses=1]

ST_56: tmp335340_i_cast [1/1] 0.00ns
bb8.i:11  %tmp335340_i_cast = zext i7 %tmp335340_i to i32 ; <i32> [#uses=1]

ST_56: Idct_addr_3 [1/1] 0.00ns
bb8.i:12  %Idct_addr_3 = getelementptr [64 x i8]* %Idct, i32 0, i32 %tmp335340_i_cast ; <i8*> [#uses=1]

ST_56: Idct_addr_4 [1/1] 0.00ns
bb8.i:13  %Idct_addr_4 = getelementptr [64 x i8]* %Idct, i32 0, i32 %tmp_i_cast ; <i8*> [#uses=1]

ST_56: empty_28 [1/1] 0.00ns
bb8.i:14  %empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind ; <i32> [#uses=0]

ST_56: exitcond6 [1/1] 1.91ns
bb8.i:15  %exitcond6 = icmp eq i5 %i_2, -16               ; <i1> [#uses=1]

ST_56: i_3 [1/1] 1.77ns
bb8.i:16  %i_3 = add i5 %i_2, 1                           ; <i5> [#uses=1]

ST_56: stg_521 [1/1] 0.00ns
bb8.i:17  br i1 %exitcond6, label %bb23, label %bb5.i66


 <State 57>: 2.39ns
ST_57: tmp_V_6 [1/1] 0.00ns
bb5.i66:0  %tmp_V_6 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %WriteFullPort_0) nounwind ; <i1> [#uses=1]

ST_57: stg_523 [1/1] 0.00ns
bb5.i66:1  br i1 %tmp_V_6, label %bb.i166.i, label %bb7.i67

ST_57: stg_524 [1/1] 0.00ns
bb.i166.i:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_57: stg_525 [1/1] 0.00ns
bb.i166.i:1  br label %bb5.i66

ST_57: Idct_load [2/2] 2.39ns
bb7.i67:0  %Idct_load = load i8* %Idct_addr_4, align 1     ; <i8> [#uses=1]

ST_57: Idct_load_1 [2/2] 2.39ns
bb7.i67:2  %Idct_load_1 = load i8* %Idct_addr_3, align 1   ; <i8> [#uses=1]


 <State 58>: 2.39ns
ST_58: Idct_load [1/2] 2.39ns
bb7.i67:0  %Idct_load = load i8* %Idct_addr_4, align 1     ; <i8> [#uses=1]

ST_58: Idct_load_1 [1/2] 2.39ns
bb7.i67:2  %Idct_load_1 = load i8* %Idct_addr_3, align 1   ; <i8> [#uses=1]

ST_58: Idct_load_2 [2/2] 2.39ns
bb7.i67:3  %Idct_load_2 = load i8* %Idct_addr_2, align 1   ; <i8> [#uses=1]

ST_58: Idct_load_3 [2/2] 2.39ns
bb7.i67:4  %Idct_load_3 = load i8* %Idct_addr_1, align 1   ; <i8> [#uses=1]


 <State 59>: 2.39ns
ST_59: p_Result_s [1/1] 0.00ns
bb7.i67:1  %p_Result_s = zext i8 %Idct_load to i32         ; <i32> [#uses=1]

ST_59: Idct_load_2 [1/2] 2.39ns
bb7.i67:3  %Idct_load_2 = load i8* %Idct_addr_2, align 1   ; <i8> [#uses=1]

ST_59: Idct_load_3 [1/2] 2.39ns
bb7.i67:4  %Idct_load_3 = load i8* %Idct_addr_1, align 1   ; <i8> [#uses=1]

ST_59: tmp_87 [1/1] 0.00ns
bb7.i67:5  %tmp_87 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %Idct_load_3, i8 %Idct_load_2, i8 %Idct_load_1) ; <i24> [#uses=1]

ST_59: p_Result_2 [1/1] 0.00ns
bb7.i67:6  %p_Result_2 = call i32 @_ssdm_op_PartSet.i32.i32.i24.i32.i32(i32 %p_Result_s, i24 %tmp_87, i32 8, i32 31) ; <i32> [#uses=1]

ST_59: stg_537 [1/1] 0.00ns
bb7.i67:7  call void @_ssdm_op_WireWrite.volatile.i32P(i32* %WriteDataPort_0, i32 %p_Result_2) nounwind

ST_59: stg_538 [1/1] 0.00ns
bb7.i67:8  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %WriteEnablePort_0, i1 true) nounwind


 <State 60>: 0.00ns
ST_60: stg_539 [1/1] 0.00ns
bb7.i67:9  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_60: stg_540 [1/1] 0.00ns
bb7.i67:10  call void @_ssdm_op_WireWrite.volatile.i32P(i32* %WriteDataPort_0, i32 0) nounwind

ST_60: stg_541 [1/1] 0.00ns
bb7.i67:11  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %WriteEnablePort_0, i1 false) nounwind


 <State 61>: 0.00ns
ST_61: stg_542 [1/1] 0.00ns
bb7.i67:12  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_61: stg_543 [1/1] 0.00ns
bb7.i67:13  br label %bb8.i



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
