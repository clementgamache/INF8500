

================================================================
== Report Version
================================================================
* Tool:          Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
* Version:       2012.4
* Build date:    Fri Dec 07 12:41:34 PM 2012
* Copyright (C): 2012 Xilinx Inc. All rights reserved.


================================================================
== General Information
================================================================
* Project:  IDCT
* Solution: Opt1
* Date:     Thu Nov 03 20:17:00 2016



================================================================
== User Assignments
================================================================
* Product Family:           zynq zynq_fpv6 
* Part:                     xc7z020clg484-1
* Top Model name:           IDCT_thread
* Target clock period (ns): 10.00
* Clock uncertainty (ns):   3.00


================================================================
== Performance Estimates
================================================================
+ Summary of timing analysis: 
    * Estimated clock period (ns): 6.36
+ Summary of overall latency (clock cycles): 
    * Best-case latency:    ?
    * Average-case latency: ?
    * Worst-case latency:   ?
+ Summary of loop latency (clock cycles): 
    + Loop 1: 
        * Trip count:        inf
        * Latency:           ?
        * Iteration latency: ?
        + Loop 1.1: 
            * Trip count: 1
            * Latency:    ?
            + Loop 1.1.1: 
                * Trip count: ?
                * Latency:    ?
        + Loop 1.2: 
            * Trip count: 1
            * Latency:    ?
            + Loop 1.2.1: 
                * Trip count: ?
                * Latency:    ?
        + Loop 1.3: 
            * Trip count:  ?
            * Latency:     ?
            + Loop 1.3.1: 
                * Trip count:   32
                * Latency:      ?
                + Loop 1.3.1.1: 
                    * Trip count: ?
                    * Latency:    ?
            + Loop 1.3.2: 
                * Trip count: 8
                * Latency:    16
            + Loop 1.3.3: 
                * Trip count: 8
                * Latency:    16
            + Loop 1.3.4: 
                * Trip count: 8
                * Latency:    16
            + Loop 1.3.5: 
                * Trip count: 8
                * Latency:    16
            + Loop 1.3.6: 
                * Trip count: 8
                * Latency:    16
            + Loop 1.3.7: 
                * Trip count: 8
                * Latency:    16
            + Loop 1.3.8: 
                * Trip count: 8
                * Latency:    16
            + Loop 1.3.9: 
                * Trip count: 8
                * Latency:    16
            + Loop 1.3.10: 
                * Trip count:    8
                * Latency:       512
                + Loop 1.3.10.1: 
                    * Trip count: 8
                    * Latency:    16
                + Loop 1.3.10.2: 
                    * Trip count: 8
                    * Latency:    32
            + Loop 1.3.11: 
                * Trip count:    16
                * Latency:       ?
                + Loop 1.3.11.1: 
                    * Trip count: ?
                    * Latency:    ?


================================================================
== Area Estimates
================================================================
* Summary: 
(Target device: xc7z020clg484-1)
+---+-----------------+---------+-------+--------+-------+-------+
| ID|             Name| BRAM_18K| DSP48E|      FF|    LUT|  SLICE|
+---+-----------------+---------+-------+--------+-------+-------+
|  0|        Component|        -|      -|       -|      -|      -|
|  1|       Expression|        -|      -|       -|      -|      -|
|  2|             FIFO|        -|      -|       -|      -|      -|
|  3|           Memory|        -|      -|       -|      -|      -|
|  4|      Multiplexer|        -|      -|       -|      -|      -|
|  5|         Register|        -|      -|       -|      -|      -|
|  6|      ShiftMemory|        -|      -|       -|      -|      -|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|            Total|        0|      0|       0|      0|      0|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|        Available|      280|    220|  106400|  53200|  13300|
+---+-----------------+---------+-------+--------+-------+-------+
|  -|  Utilization (%)|        0|      0|       0|      0|      0|
+---+-----------------+---------+-------+--------+-------+-------+

+ Details: 
    * Component: 
    N/A

    * Expression: 
    N/A

    * FIFO: 
    N/A

    * Memory: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A

    * ShiftMemory: 
    N/A

* Hierarchical Multiplexer Count: 
+---+--------------+-----+-----+------+
| ID|          Name| Size| Bits| Count|
+---+--------------+-----+-----+------+
|  0|  (This level)|    0|    0|     0|
+---+--------------+-----+-----+------+
|  -|         Total|    0|    0|     0|
+---+--------------+-----+-----+------+



================================================================
== Power Estimate
================================================================
* Summary: 
+---+-------------+
| ID|         Name|
+---+-------------+
|  0|    Component|
|  1|   Expression|
|  2|         FIFO|
|  3|       Memory|
|  4|  Multiplexer|
|  5|     Register|
|  6|  ShiftMemory|
+---+-------------+
|  -|        Total|
+---+-------------+

* Hierarchical Register Count: 
+---+--------------+------+
| ID|          Name| Count|
+---+--------------+------+
|  0|  (This level)|     0|
+---+--------------+------+
|  -|         Total|     0|
+---+--------------+------+



================================================================
== Interface Summary
================================================================
* Interfaces: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 0
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 165
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / (!indvar1)
	11  / (indvar1)
8 --> 
	9  / (!tmp_V)
	8  / (tmp_V)
9 --> 
	10  / true
10 --> 
	7  / true
11 --> 
	12  / (tmp_4 & !indvar)
	6  / (!tmp_4 & !tmp_8) | (indvar & !tmp_8)
	15  / (!tmp_4 & tmp_8) | (indvar & tmp_8)
12 --> 
	13  / (!tmp_V_2)
	12  / (tmp_V_2)
13 --> 
	14  / true
14 --> 
	11  / true
15 --> 
	6  / (exitcond1)
	16  / (!exitcond1)
16 --> 
	17  / (!exitcond2)
	20  / (exitcond2)
17 --> 
	18  / (!tmp_V_4)
	17  / (tmp_V_4)
18 --> 
	19  / true
19 --> 
	16  / true
20 --> 
	21  / (!exitcond3)
	22  / (exitcond3)
21 --> 
	20  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / (!exitcond4)
	37  / (exitcond4)
36 --> 
	35  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / (!exitcond5)
	52  / (exitcond5)
51 --> 
	50  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / (!exitcond6)
	67  / (exitcond6)
66 --> 
	65  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / (!exitcond7)
	82  / (exitcond7)
81 --> 
	80  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / (!exitcond8)
	97  / (exitcond8)
96 --> 
	95  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / (!exitcond9)
	112  / (exitcond9)
111 --> 
	110  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / (!exitcond10)
	127  / (exitcond10)
126 --> 
	125  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / (!exitcond)
	160  / (exitcond)
141 --> 
	142  / (!exitcond11)
	143  / (exitcond11)
142 --> 
	141  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	140  / (exitcond13)
	157  / (!exitcond13)
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	156  / true
160 --> 
	15  / (exitcond12)
	161  / (!exitcond12)
161 --> 
	162  / (!tmp_V_6)
	161  / (tmp_V_6)
162 --> 
	163  / true
163 --> 
	164  / true
164 --> 
	165  / true
165 --> 
	160  / true
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: NBLOCKS [1/1] 0.00ns
entry:0  %NBLOCKS = alloca i32                           ; <i32*> [#uses=3]

ST_1: uiCommand [1/1] 0.00ns
entry:1  %uiCommand = alloca i32                         ; <i32*> [#uses=3]

ST_1: Y [1/1] 0.00ns
entry:2  %Y = alloca [64 x i32], align 4                 ; <[64 x i32]*> [#uses=73]

ST_1: in [1/1] 0.00ns
entry:3  %in = alloca [64 x i16], align 2                ; <[64 x i16]*> [#uses=10]

ST_1: Idct [1/1] 0.00ns
entry:4  %Idct = alloca [64 x i8], align 1               ; <[64 x i8]*> [#uses=5]

ST_1: Yc [1/1] 0.00ns
entry:5  %Yc = alloca [8 x i32], align 4                 ; <[8 x i32]*> [#uses=10]


 <State 2>: 0.00ns
ST_2: stg_172 [1/1] 0.00ns
entry:6  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [7 x i8]* @p_str2, [11 x i8]* @p_str3, i32 0, i32 0, i1* %nResetPort) nounwind

ST_2: stg_173 [1/1] 0.00ns
entry:7  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [7 x i8]* @p_str2, [10 x i8]* @p_str4, i32 0, i32 0, i1* %ClockPort) nounwind

ST_2: stg_174 [1/1] 0.00ns
entry:8  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 1, [18 x i8]* @p_str5, [17 x i8]* @p_str6, i32 0, i32 0, i1* %ReadEnablePort_0) nounwind

ST_2: stg_175 [1/1] 0.00ns
entry:9  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [18 x i8]* @p_str5, [16 x i8]* @p_str7, i32 0, i32 0, i1* %ReadEmptyPort_0) nounwind

ST_2: stg_176 [1/1] 0.00ns
entry:10  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [19 x i8]* @p_str8, [15 x i8]* @p_str9, i32 0, i32 0, i32* %ReadDataPort_0) nounwind

ST_2: stg_177 [1/1] 0.00ns
entry:11  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 1, [18 x i8]* @p_str5, [18 x i8]* @p_str10, i32 0, i32 0, i1* %WriteEnablePort_0) nounwind

ST_2: stg_178 [1/1] 0.00ns
entry:12  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [18 x i8]* @p_str5, [16 x i8]* @p_str11, i32 0, i32 0, i1* %WriteFullPort_0) nounwind

ST_2: stg_179 [1/1] 0.00ns
entry:13  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 1, [19 x i8]* @p_str8, [16 x i8]* @p_str12, i32 0, i32 0, i32* %WriteDataPort_0) nounwind

ST_2: stg_180 [1/1] 0.00ns
entry:14  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 1, [18 x i8]* @p_str5, [17 x i8]* @p_str13, i32 0, i32 0, i1* %ReadEnablePort_1) nounwind

ST_2: stg_181 [1/1] 0.00ns
entry:15  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [18 x i8]* @p_str5, [16 x i8]* @p_str14, i32 0, i32 0, i1* %ReadEmptyPort_1) nounwind

ST_2: stg_182 [1/1] 0.00ns
entry:16  call void (...)* @_ssdm_op_SpecPort([5 x i8]* @p_str1, i32 0, [19 x i8]* @p_str8, [15 x i8]* @p_str15, i32 0, i32 0, i32* %ReadDataPort_1) nounwind

ST_2: stg_183 [1/1] 0.00ns
entry:17  call void (...)* @_ssdm_op_SpecProcessDef([5 x i8]* @p_str1, i32 2, [7 x i8]* @p_str16) nounwind

ST_2: tmp_1 [1/1] 0.00ns
entry:18  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str17) nounwind ; <i32> [#uses=1]

ST_2: stg_185 [1/1] 0.00ns
entry:19  call void (...)* @_ssdm_op_SpecProtocol(i32 1, [1 x i8]* @p_str) nounwind

ST_2: p_ssdm_reset_v [1/1] 0.00ns
entry:20  %p_ssdm_reset_v = call i32 (...)* @_ssdm_op_SpecStateBegin(i32 0, i32 0, i32 1) nounwind ; <i32> [#uses=1]

ST_2: stg_187 [1/1] 0.00ns
entry:21  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 false) nounwind

ST_2: stg_188 [1/1] 0.00ns
entry:22  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_1, i1 false) nounwind

ST_2: stg_189 [1/1] 0.00ns
entry:23  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %WriteEnablePort_0, i1 false) nounwind

ST_2: stg_190 [1/1] 0.00ns
entry:24  call void @_ssdm_op_WireWrite.volatile.i32P(i32* %WriteDataPort_0, i32 0) nounwind


 <State 3>: 0.00ns
ST_3: stg_191 [1/1] 0.00ns
entry:25  call void (...)* @_ssdm_op_Wait(i32 1) nounwind


 <State 4>: 0.00ns
ST_4: stg_192 [1/1] 0.00ns
entry:26  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_4: empty [1/1] 0.00ns
entry:27  %empty = call i32 (...)* @_ssdm_op_SpecStateEnd(i32 %p_ssdm_reset_v) nounwind ; <i32> [#uses=0]

ST_4: empty_16 [1/1] 0.00ns
entry:28  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str17, i32 %tmp_1) nounwind ; <i32> [#uses=0]


 <State 5>: 1.57ns
ST_5: Yc_addr_9 [1/1] 0.00ns
entry:29  %Yc_addr_9 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 0 ; <i32*> [#uses=2]

ST_5: Y_addr_9 [1/1] 0.00ns
entry:30  %Y_addr_9 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 0 ; <i32*> [#uses=2]

ST_5: Y_addr [1/1] 0.00ns
entry:31  %Y_addr = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 4 ; <i32*> [#uses=2]

ST_5: Y_addr_1 [1/1] 0.00ns
entry:32  %Y_addr_1 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 6 ; <i32*> [#uses=2]

ST_5: Y_addr_2 [1/1] 0.00ns
entry:33  %Y_addr_2 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 2 ; <i32*> [#uses=2]

ST_5: Y_addr_3 [1/1] 0.00ns
entry:34  %Y_addr_3 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 1 ; <i32*> [#uses=2]

ST_5: Y_addr_4 [1/1] 0.00ns
entry:35  %Y_addr_4 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 7 ; <i32*> [#uses=2]

ST_5: Y_addr_5 [1/1] 0.00ns
entry:36  %Y_addr_5 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 3 ; <i32*> [#uses=2]

ST_5: Y_addr_6 [1/1] 0.00ns
entry:37  %Y_addr_6 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 5 ; <i32*> [#uses=2]

ST_5: Y_addr_18 [1/1] 0.00ns
entry:38  %Y_addr_18 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 8 ; <i32*> [#uses=2]

ST_5: Y_addr_10 [1/1] 0.00ns
entry:39  %Y_addr_10 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 12 ; <i32*> [#uses=2]

ST_5: Y_addr_11 [1/1] 0.00ns
entry:40  %Y_addr_11 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 14 ; <i32*> [#uses=2]

ST_5: Y_addr_12 [1/1] 0.00ns
entry:41  %Y_addr_12 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 10 ; <i32*> [#uses=2]

ST_5: Y_addr_13 [1/1] 0.00ns
entry:42  %Y_addr_13 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 9 ; <i32*> [#uses=2]

ST_5: Y_addr_14 [1/1] 0.00ns
entry:43  %Y_addr_14 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 15 ; <i32*> [#uses=2]

ST_5: Y_addr_15 [1/1] 0.00ns
entry:44  %Y_addr_15 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 11 ; <i32*> [#uses=2]

ST_5: Y_addr_16 [1/1] 0.00ns
entry:45  %Y_addr_16 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 13 ; <i32*> [#uses=2]

ST_5: Y_addr_27 [1/1] 0.00ns
entry:46  %Y_addr_27 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 16 ; <i32*> [#uses=2]

ST_5: Y_addr_19 [1/1] 0.00ns
entry:47  %Y_addr_19 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 20 ; <i32*> [#uses=2]

ST_5: Y_addr_20 [1/1] 0.00ns
entry:48  %Y_addr_20 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 22 ; <i32*> [#uses=2]

ST_5: Y_addr_21 [1/1] 0.00ns
entry:49  %Y_addr_21 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 18 ; <i32*> [#uses=2]

ST_5: Y_addr_22 [1/1] 0.00ns
entry:50  %Y_addr_22 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 17 ; <i32*> [#uses=2]

ST_5: Y_addr_23 [1/1] 0.00ns
entry:51  %Y_addr_23 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 23 ; <i32*> [#uses=2]

ST_5: Y_addr_24 [1/1] 0.00ns
entry:52  %Y_addr_24 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 19 ; <i32*> [#uses=2]

ST_5: Y_addr_25 [1/1] 0.00ns
entry:53  %Y_addr_25 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 21 ; <i32*> [#uses=2]

ST_5: Y_addr_36 [1/1] 0.00ns
entry:54  %Y_addr_36 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 24 ; <i32*> [#uses=2]

ST_5: Y_addr_28 [1/1] 0.00ns
entry:55  %Y_addr_28 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 28 ; <i32*> [#uses=2]

ST_5: Y_addr_29 [1/1] 0.00ns
entry:56  %Y_addr_29 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 30 ; <i32*> [#uses=2]

ST_5: Y_addr_30 [1/1] 0.00ns
entry:57  %Y_addr_30 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 26 ; <i32*> [#uses=2]

ST_5: Y_addr_31 [1/1] 0.00ns
entry:58  %Y_addr_31 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 25 ; <i32*> [#uses=2]

ST_5: Y_addr_32 [1/1] 0.00ns
entry:59  %Y_addr_32 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 31 ; <i32*> [#uses=2]

ST_5: Y_addr_33 [1/1] 0.00ns
entry:60  %Y_addr_33 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 27 ; <i32*> [#uses=2]

ST_5: Y_addr_34 [1/1] 0.00ns
entry:61  %Y_addr_34 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 29 ; <i32*> [#uses=2]

ST_5: Y_addr_45 [1/1] 0.00ns
entry:62  %Y_addr_45 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 32 ; <i32*> [#uses=2]

ST_5: Y_addr_37 [1/1] 0.00ns
entry:63  %Y_addr_37 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 36 ; <i32*> [#uses=2]

ST_5: Y_addr_38 [1/1] 0.00ns
entry:64  %Y_addr_38 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 38 ; <i32*> [#uses=2]

ST_5: Y_addr_39 [1/1] 0.00ns
entry:65  %Y_addr_39 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 34 ; <i32*> [#uses=2]

ST_5: Y_addr_40 [1/1] 0.00ns
entry:66  %Y_addr_40 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 33 ; <i32*> [#uses=2]

ST_5: Y_addr_41 [1/1] 0.00ns
entry:67  %Y_addr_41 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 39 ; <i32*> [#uses=2]

ST_5: Y_addr_42 [1/1] 0.00ns
entry:68  %Y_addr_42 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 35 ; <i32*> [#uses=2]

ST_5: Y_addr_43 [1/1] 0.00ns
entry:69  %Y_addr_43 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 37 ; <i32*> [#uses=2]

ST_5: Y_addr_54 [1/1] 0.00ns
entry:70  %Y_addr_54 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 40 ; <i32*> [#uses=2]

ST_5: Y_addr_46 [1/1] 0.00ns
entry:71  %Y_addr_46 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 44 ; <i32*> [#uses=2]

ST_5: Y_addr_47 [1/1] 0.00ns
entry:72  %Y_addr_47 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 46 ; <i32*> [#uses=2]

ST_5: Y_addr_48 [1/1] 0.00ns
entry:73  %Y_addr_48 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 42 ; <i32*> [#uses=2]

ST_5: Y_addr_49 [1/1] 0.00ns
entry:74  %Y_addr_49 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 41 ; <i32*> [#uses=2]

ST_5: Y_addr_50 [1/1] 0.00ns
entry:75  %Y_addr_50 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 47 ; <i32*> [#uses=2]

ST_5: Y_addr_51 [1/1] 0.00ns
entry:76  %Y_addr_51 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 43 ; <i32*> [#uses=2]

ST_5: Y_addr_52 [1/1] 0.00ns
entry:77  %Y_addr_52 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 45 ; <i32*> [#uses=2]

ST_5: Y_addr_63 [1/1] 0.00ns
entry:78  %Y_addr_63 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 48 ; <i32*> [#uses=2]

ST_5: Y_addr_55 [1/1] 0.00ns
entry:79  %Y_addr_55 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 52 ; <i32*> [#uses=2]

ST_5: Y_addr_56 [1/1] 0.00ns
entry:80  %Y_addr_56 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 54 ; <i32*> [#uses=2]

ST_5: Y_addr_57 [1/1] 0.00ns
entry:81  %Y_addr_57 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 50 ; <i32*> [#uses=2]

ST_5: Y_addr_58 [1/1] 0.00ns
entry:82  %Y_addr_58 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 49 ; <i32*> [#uses=2]

ST_5: Y_addr_59 [1/1] 0.00ns
entry:83  %Y_addr_59 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 55 ; <i32*> [#uses=2]

ST_5: Y_addr_60 [1/1] 0.00ns
entry:84  %Y_addr_60 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 51 ; <i32*> [#uses=2]

ST_5: Y_addr_61 [1/1] 0.00ns
entry:85  %Y_addr_61 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 53 ; <i32*> [#uses=2]

ST_5: Y_addr_72 [1/1] 0.00ns
entry:86  %Y_addr_72 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 56 ; <i32*> [#uses=2]

ST_5: Y_addr_64 [1/1] 0.00ns
entry:87  %Y_addr_64 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 60 ; <i32*> [#uses=2]

ST_5: Y_addr_65 [1/1] 0.00ns
entry:88  %Y_addr_65 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 62 ; <i32*> [#uses=2]

ST_5: Y_addr_66 [1/1] 0.00ns
entry:89  %Y_addr_66 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 58 ; <i32*> [#uses=2]

ST_5: Y_addr_67 [1/1] 0.00ns
entry:90  %Y_addr_67 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 57 ; <i32*> [#uses=2]

ST_5: Y_addr_68 [1/1] 0.00ns
entry:91  %Y_addr_68 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 63 ; <i32*> [#uses=2]

ST_5: Y_addr_69 [1/1] 0.00ns
entry:92  %Y_addr_69 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 59 ; <i32*> [#uses=2]

ST_5: Y_addr_70 [1/1] 0.00ns
entry:93  %Y_addr_70 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 61 ; <i32*> [#uses=2]

ST_5: Yc_addr [1/1] 0.00ns
entry:94  %Yc_addr = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 4 ; <i32*> [#uses=2]

ST_5: Yc_addr_1 [1/1] 0.00ns
entry:95  %Yc_addr_1 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 6 ; <i32*> [#uses=2]

ST_5: Yc_addr_2 [1/1] 0.00ns
entry:96  %Yc_addr_2 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 2 ; <i32*> [#uses=2]

ST_5: Yc_addr_3 [1/1] 0.00ns
entry:97  %Yc_addr_3 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 1 ; <i32*> [#uses=2]

ST_5: Yc_addr_4 [1/1] 0.00ns
entry:98  %Yc_addr_4 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 7 ; <i32*> [#uses=2]

ST_5: Yc_addr_5 [1/1] 0.00ns
entry:99  %Yc_addr_5 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 3 ; <i32*> [#uses=2]

ST_5: Yc_addr_6 [1/1] 0.00ns
entry:100  %Yc_addr_6 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 5 ; <i32*> [#uses=2]

ST_5: stg_267 [1/1] 1.57ns
entry:101  store i32 0, i32* %NBLOCKS

ST_5: stg_268 [1/1] 0.00ns
entry:102  br label %bb


 <State 6>: 1.30ns
ST_6: loop_begin [1/1] 0.00ns
bb:0  %loop_begin = call i32 (...)* @_ssdm_op_SpecLoopBegin() nounwind ; <i32> [#uses=0]

ST_6: val_V_0 [1/1] 0.00ns
bb:1  %val_V_0 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_0) nounwind ; <i1> [#uses=0]

ST_6: stg_271 [1/1] 1.30ns
bb:2  br label %bb11.i


 <State 7>: 2.52ns
ST_7: indvar1 [1/1] 0.00ns
bb11.i:0  %indvar1 = phi i1 [ %indvar_next1, %bb7.i ], [ false, %bb ] ; <i1> [#uses=2]

ST_7: empty_17 [1/1] 0.00ns
bb11.i:1  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1) nounwind ; <i32> [#uses=0]

ST_7: indvar_next1 [1/1] 1.37ns
bb11.i:2  %indvar_next1 = xor i1 %indvar1, true           ; <i1> [#uses=1]

ST_7: stg_275 [1/1] 0.00ns
bb11.i:3  br i1 %indvar1, label %ModuleRead_1.exit, label %bb5.i

ST_7: uiCommand_load [1/1] 0.00ns
ModuleRead_1.exit:0  %uiCommand_load = load i32* %uiCommand          ; <i32> [#uses=1]

ST_7: tmp_4 [1/1] 2.52ns
ModuleRead_1.exit:1  %tmp_4 = icmp eq i32 %uiCommand_load, 1         ; <i1> [#uses=1]

ST_7: stg_278 [1/1] 0.00ns
ModuleRead_1.exit:2  br i1 %tmp_4, label %bb1, label %bb2

ST_7: val_V_1_0 [1/1] 0.00ns
bb1:0  %val_V_1_0 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_0) nounwind ; <i1> [#uses=0]

ST_7: stg_280 [1/1] 1.30ns
bb1:1  br label %bb11.i45


 <State 8>: 0.00ns
ST_8: tmp_V [1/1] 0.00ns
bb5.i:0  %tmp_V = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_0) nounwind ; <i1> [#uses=1]

ST_8: stg_282 [1/1] 0.00ns
bb5.i:1  br i1 %tmp_V, label %bb.i65.i, label %bb7.i

ST_8: stg_283 [1/1] 0.00ns
bb.i65.i:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_8: stg_284 [1/1] 0.00ns
bb.i65.i:1  br label %bb5.i

ST_8: val_V [1/1] 0.00ns
bb7.i:0  %val_V = call i32 @_ssdm_op_WireRead.volatile.i32P(i32* %ReadDataPort_0) nounwind ; <i32> [#uses=1]

ST_8: stg_286 [1/1] 0.00ns
bb7.i:1  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 true) nounwind

ST_8: stg_287 [1/1] 0.00ns
bb7.i:5  store i32 %val_V, i32* %uiCommand


 <State 9>: 0.00ns
ST_9: stg_288 [1/1] 0.00ns
bb7.i:2  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_9: stg_289 [1/1] 0.00ns
bb7.i:3  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 false) nounwind


 <State 10>: 0.00ns
ST_10: stg_290 [1/1] 0.00ns
bb7.i:4  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_10: stg_291 [1/1] 0.00ns
bb7.i:6  br label %bb11.i


 <State 11>: 2.52ns
ST_11: indvar [1/1] 0.00ns
bb11.i45:0  %indvar = phi i1 [ %indvar_next, %bb7.i38 ], [ false, %bb1 ] ; <i1> [#uses=2]

ST_11: empty_18 [1/1] 0.00ns
bb11.i45:1  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1) nounwind ; <i32> [#uses=0]

ST_11: indvar_next [1/1] 1.37ns
bb11.i45:2  %indvar_next = xor i1 %indvar, true             ; <i1> [#uses=1]

ST_11: stg_295 [1/1] 0.00ns
bb11.i45:3  br i1 %indvar, label %bb2, label %bb5.i36

ST_11: uiCommand_load_1 [1/1] 0.00ns
bb2:0  %uiCommand_load_1 = load i32* %uiCommand        ; <i32> [#uses=1]

ST_11: tmp_8 [1/1] 2.52ns
bb2:1  %tmp_8 = icmp eq i32 %uiCommand_load_1, 2       ; <i1> [#uses=1]

ST_11: stg_298 [1/1] 0.00ns
bb2:2  br i1 %tmp_8, label %bb23.preheader, label %bb

ST_11: NBLOCKS_load [1/1] 0.00ns
bb23.preheader:0  %NBLOCKS_load = load i32* %NBLOCKS              ; <i32> [#uses=1]

ST_11: tmp1 [1/1] 0.00ns
bb23.preheader:1  %tmp1 = shl i32 %NBLOCKS_load, 1                ; <i32> [#uses=1]

ST_11: stg_301 [1/1] 1.57ns
bb23.preheader:2  br label %bb23


 <State 12>: 1.57ns
ST_12: tmp_V_2 [1/1] 0.00ns
bb5.i36:0  %tmp_V_2 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_0) nounwind ; <i1> [#uses=1]

ST_12: stg_303 [1/1] 0.00ns
bb5.i36:1  br i1 %tmp_V_2, label %bb.i65.i35, label %bb7.i38

ST_12: stg_304 [1/1] 0.00ns
bb.i65.i35:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_12: stg_305 [1/1] 0.00ns
bb.i65.i35:1  br label %bb5.i36

ST_12: val_V_1 [1/1] 0.00ns
bb7.i38:0  %val_V_1 = call i32 @_ssdm_op_WireRead.volatile.i32P(i32* %ReadDataPort_0) nounwind ; <i32> [#uses=1]

ST_12: stg_307 [1/1] 0.00ns
bb7.i38:1  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 true) nounwind

ST_12: stg_308 [1/1] 1.57ns
bb7.i38:5  store i32 %val_V_1, i32* %NBLOCKS


 <State 13>: 0.00ns
ST_13: stg_309 [1/1] 0.00ns
bb7.i38:2  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_13: stg_310 [1/1] 0.00ns
bb7.i38:3  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_0, i1 false) nounwind


 <State 14>: 0.00ns
ST_14: stg_311 [1/1] 0.00ns
bb7.i38:4  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_14: stg_312 [1/1] 0.00ns
bb7.i38:6  br label %bb11.i45


 <State 15>: 2.52ns
ST_15: block [1/1] 0.00ns
bb23:0  %block = phi i32 [ 0, %bb23.preheader ], [ %block_1, %bb8.i ] ; <i32> [#uses=2]

ST_15: exitcond1 [1/1] 2.52ns
bb23:1  %exitcond1 = icmp eq i32 %block, %tmp1          ; <i1> [#uses=1]

ST_15: block_1 [1/1] 2.49ns
bb23:2  %block_1 = add i32 %block, 1                    ; <i32> [#uses=1]

ST_15: stg_316 [1/1] 0.00ns
bb23:3  br i1 %exitcond1, label %bb, label %bb4

ST_15: val_V_4_0 [1/1] 0.00ns
bb4:0  %val_V_4_0 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_1) nounwind ; <i1> [#uses=0]

ST_15: stg_318 [1/1] 1.30ns
bb4:1  br label %bb9.i60


 <State 16>: 1.94ns
ST_16: i [1/1] 0.00ns
bb9.i60:0  %i = phi i6 [ 0, %bb4 ], [ %i_1, %bb7.i57 ]     ; <i6> [#uses=4]

ST_16: i_4_cast [1/1] 0.00ns
bb9.i60:1  %i_4_cast = zext i6 %i to i7                    ; <i7> [#uses=1]

ST_16: ptData3_0_rec_i [1/1] 0.00ns
bb9.i60:2  %ptData3_0_rec_i = shl i7 %i_4_cast, 1          ; <i7> [#uses=1]

ST_16: ptData3_0_rec_i_cast [1/1] 0.00ns
bb9.i60:3  %ptData3_0_rec_i_cast = zext i7 %ptData3_0_rec_i to i32 ; <i32> [#uses=1]

ST_16: ptData3_0_sum238241_i [1/1] 0.00ns
bb9.i60:4  %ptData3_0_sum238241_i = call i7 @_ssdm_op_PartSet.i7.i7.i6.i32.i32(i7 1, i6 %i, i32 1, i32 6) ; <i7> [#uses=1]

ST_16: ptData3_0_sum238241_i_cast [1/1] 0.00ns
bb9.i60:5  %ptData3_0_sum238241_i_cast = zext i7 %ptData3_0_sum238241_i to i32 ; <i32> [#uses=1]

ST_16: in_addr_8 [1/1] 0.00ns
bb9.i60:6  %in_addr_8 = getelementptr [64 x i16]* %in, i32 0, i32 %ptData3_0_rec_i_cast ; <i16*> [#uses=1]

ST_16: empty_19 [1/1] 0.00ns
bb9.i60:7  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; <i32> [#uses=0]

ST_16: exitcond2 [1/1] 1.94ns
bb9.i60:8  %exitcond2 = icmp eq i6 %i, -32                 ; <i1> [#uses=1]

ST_16: i_1 [1/1] 1.77ns
bb9.i60:9  %i_1 = add i6 %i, 1                             ; <i6> [#uses=1]

ST_16: stg_329 [1/1] 0.00ns
bb9.i60:10  br i1 %exitcond2, label %bb5.0, label %bb5.i56

ST_16: tmp_2 [1/1] 0.00ns
bb5.0:0  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str19) nounwind ; <i32> [#uses=1]

ST_16: stg_331 [1/1] 1.21ns
bb5.0:1  br label %bb7.0


 <State 17>: 2.39ns
ST_17: tmp_V_4 [1/1] 0.00ns
bb5.i56:0  %tmp_V_4 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %ReadEmptyPort_1) nounwind ; <i1> [#uses=1]

ST_17: stg_333 [1/1] 0.00ns
bb5.i56:1  br i1 %tmp_V_4, label %bb.i93.i, label %bb7.i57

ST_17: stg_334 [1/1] 0.00ns
bb.i93.i:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_17: stg_335 [1/1] 0.00ns
bb.i93.i:1  br label %bb5.i56

ST_17: val_V_2 [1/1] 0.00ns
bb7.i57:0  %val_V_2 = call i32 @_ssdm_op_WireRead.volatile.i32P(i32* %ReadDataPort_1) nounwind ; <i32> [#uses=2]

ST_17: tmp_3 [1/1] 0.00ns
bb7.i57:1  %tmp_3 = trunc i32 %val_V_2 to i16              ; <i16> [#uses=1]

ST_17: stg_338 [1/1] 2.39ns
bb7.i57:2  store i16 %tmp_3, i16* %in_addr_8, align 2

ST_17: in_addr_9 [1/1] 0.00ns
bb7.i57:3  %in_addr_9 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %ptData3_0_sum238241_i_cast ; <i16*> [#uses=1]

ST_17: p_Result_1 [1/1] 0.00ns
bb7.i57:4  %p_Result_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %val_V_2, i32 16, i32 31) ; <i16> [#uses=1]

ST_17: stg_341 [1/1] 2.39ns
bb7.i57:5  store i16 %p_Result_1, i16* %in_addr_9, align 2

ST_17: stg_342 [1/1] 0.00ns
bb7.i57:6  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_1, i1 true) nounwind


 <State 18>: 0.00ns
ST_18: stg_343 [1/1] 0.00ns
bb7.i57:7  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_18: stg_344 [1/1] 0.00ns
bb7.i57:8  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %ReadEnablePort_1, i1 false) nounwind


 <State 19>: 0.00ns
ST_19: stg_345 [1/1] 0.00ns
bb7.i57:9  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_19: stg_346 [1/1] 0.00ns
bb7.i57:10  br label %bb9.i60


 <State 20>: 2.39ns
ST_20: column_1 [1/1] 0.00ns
bb7.0:0  %column_1 = phi i4 [ 0, %bb5.0 ], [ %column_2, %bb6.0 ] ; <i4> [#uses=3]

ST_20: column_1_cast [1/1] 0.00ns
bb7.0:1  %column_1_cast = zext i4 %column_1 to i32       ; <i32> [#uses=2]

ST_20: empty_21 [1/1] 0.00ns
bb7.0:2  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_20: exitcond3 [1/1] 1.88ns
bb7.0:3  %exitcond3 = icmp eq i4 %column_1, -8           ; <i1> [#uses=1]

ST_20: column_2 [1/1] 0.85ns
bb7.0:4  %column_2 = add i4 %column_1, 1                 ; <i4> [#uses=1]

ST_20: stg_352 [1/1] 0.00ns
bb7.0:5  br i1 %exitcond3, label %bb8.0, label %bb6.0

ST_20: in_addr [1/1] 0.00ns
bb6.0:0  %in_addr = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %column_1_cast ; <i16*> [#uses=1]

ST_20: in_load [2/2] 2.39ns
bb6.0:1  %in_load = load i16* %in_addr, align 2          ; <i16> [#uses=1]

ST_20: Y_load_8 [2/2] 2.39ns
bb8.0:20  %Y_load_8 = load i32* %Y_addr_5, align 4        ; <i32> [#uses=1]

ST_20: Y_load_9 [2/2] 2.39ns
bb8.0:24  %Y_load_9 = load i32* %Y_addr_6, align 4        ; <i32> [#uses=1]


 <State 21>: 4.78ns
ST_21: in_load [1/2] 2.39ns
bb6.0:1  %in_load = load i16* %in_addr, align 2          ; <i16> [#uses=1]

ST_21: tmp_52_cast [1/1] 0.00ns
bb6.0:2  %tmp_52_cast = zext i16 %in_load to i19         ; <i19> [#uses=1]

ST_21: tmp_43 [1/1] 0.00ns
bb6.0:3  %tmp_43 = shl i19 %tmp_52_cast, 3               ; <i19> [#uses=1]

ST_21: tmp_53_cast [1/1] 0.00ns
bb6.0:4  %tmp_53_cast = sext i19 %tmp_43 to i32          ; <i32> [#uses=1]

ST_21: Y_addr_7 [1/1] 0.00ns
bb6.0:5  %Y_addr_7 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %column_1_cast ; <i32*> [#uses=1]

ST_21: stg_362 [1/1] 2.39ns
bb6.0:6  store i32 %tmp_53_cast, i32* %Y_addr_7, align 4

ST_21: stg_363 [1/1] 0.00ns
bb6.0:7  br label %bb7.0


 <State 22>: 2.39ns
ST_22: Y_load_8 [1/2] 2.39ns
bb8.0:20  %Y_load_8 = load i32* %Y_addr_5, align 4        ; <i32> [#uses=1]

ST_22: Y_load_9 [1/2] 2.39ns
bb8.0:24  %Y_load_9 = load i32* %Y_addr_6, align 4        ; <i32> [#uses=1]


 <State 23>: 6.36ns
ST_23: Y_load_4 [2/2] 2.39ns
bb8.0:4  %Y_load_4 = load i32* %Y_addr_1, align 4        ; <i32> [#uses=2]

ST_23: Y_load_10 [2/2] 2.39ns
bb8.0:5  %Y_load_10 = load i32* %Y_addr_2, align 4       ; <i32> [#uses=2]

ST_23: tmp_14 [3/3] 6.36ns
bb8.0:21  %tmp_14 = mul nsw i32 %Y_load_8, 23170          ; <i32> [#uses=1]

ST_23: tmp_16 [3/3] 6.36ns
bb8.0:25  %tmp_16 = mul nsw i32 %Y_load_9, 23170          ; <i32> [#uses=1]


 <State 24>: 6.36ns
ST_24: Y_load_4 [1/2] 2.39ns
bb8.0:4  %Y_load_4 = load i32* %Y_addr_1, align 4        ; <i32> [#uses=2]

ST_24: Y_load_10 [1/2] 2.39ns
bb8.0:5  %Y_load_10 = load i32* %Y_addr_2, align 4       ; <i32> [#uses=2]

ST_24: Y_load_5 [2/2] 2.39ns
bb8.0:16  %Y_load_5 = load i32* %Y_addr_3, align 4        ; <i32> [#uses=2]

ST_24: Y_load_6 [2/2] 2.39ns
bb8.0:17  %Y_load_6 = load i32* %Y_addr_4, align 4        ; <i32> [#uses=2]

ST_24: tmp_14 [2/3] 6.36ns
bb8.0:21  %tmp_14 = mul nsw i32 %Y_load_8, 23170          ; <i32> [#uses=1]

ST_24: tmp_16 [2/3] 6.36ns
bb8.0:25  %tmp_16 = mul nsw i32 %Y_load_9, 23170          ; <i32> [#uses=1]


 <State 25>: 6.36ns
ST_25: tmp_9 [3/3] 6.36ns
bb8.0:6  %tmp_9 = mul nsw i32 %Y_load_10, 8867           ; <i32> [#uses=1]

ST_25: tmp_5 [3/3] 6.36ns
bb8.0:7  %tmp_5 = mul nsw i32 %Y_load_4, 21407           ; <i32> [#uses=1]

ST_25: tmp_10 [3/3] 6.36ns
bb8.0:11  %tmp_10 = mul nsw i32 %Y_load_10, 21407         ; <i32> [#uses=1]

ST_25: tmp_11 [3/3] 6.36ns
bb8.0:12  %tmp_11 = mul nsw i32 %Y_load_4, 8867           ; <i32> [#uses=1]

ST_25: Y_load_5 [1/2] 2.39ns
bb8.0:16  %Y_load_5 = load i32* %Y_addr_3, align 4        ; <i32> [#uses=2]

ST_25: Y_load_6 [1/2] 2.39ns
bb8.0:17  %Y_load_6 = load i32* %Y_addr_4, align 4        ; <i32> [#uses=2]

ST_25: tmp_14 [1/3] 6.36ns
bb8.0:21  %tmp_14 = mul nsw i32 %Y_load_8, 23170          ; <i32> [#uses=1]

ST_25: tmp_15 [1/1] 0.00ns
bb8.0:22  %tmp_15 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_14, i32 14, i32 31) ; <i18> [#uses=1]

ST_25: tmp_16 [1/3] 6.36ns
bb8.0:25  %tmp_16 = mul nsw i32 %Y_load_9, 23170          ; <i32> [#uses=1]

ST_25: tmp_17 [1/1] 0.00ns
bb8.0:26  %tmp_17 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_16, i32 14, i32 31) ; <i18> [#uses=1]


 <State 26>: 6.36ns
ST_26: tmp_9 [2/3] 6.36ns
bb8.0:6  %tmp_9 = mul nsw i32 %Y_load_10, 8867           ; <i32> [#uses=1]

ST_26: tmp_5 [2/3] 6.36ns
bb8.0:7  %tmp_5 = mul nsw i32 %Y_load_4, 21407           ; <i32> [#uses=1]

ST_26: tmp_10 [2/3] 6.36ns
bb8.0:11  %tmp_10 = mul nsw i32 %Y_load_10, 21407         ; <i32> [#uses=1]

ST_26: tmp_11 [2/3] 6.36ns
bb8.0:12  %tmp_11 = mul nsw i32 %Y_load_4, 8867           ; <i32> [#uses=1]

ST_26: z1_4 [1/1] 2.49ns
bb8.0:18  %z1_4 = sub nsw i32 %Y_load_5, %Y_load_6        ; <i32> [#uses=2]

ST_26: z1_7 [1/1] 2.49ns
bb8.0:19  %z1_7 = add nsw i32 %Y_load_6, %Y_load_5        ; <i32> [#uses=2]

ST_26: z1_5 [1/1] 0.00ns
bb8.0:23  %z1_5 = sext i18 %tmp_15 to i32                 ; <i32> [#uses=2]

ST_26: z1_6 [1/1] 0.00ns
bb8.0:27  %z1_6 = sext i18 %tmp_17 to i32                 ; <i32> [#uses=2]

ST_26: y_assign_2 [1/1] 2.49ns
bb8.0:32  %y_assign_2 = sub nsw i32 %z1_4, %z1_6          ; <i32> [#uses=2]

ST_26: x_assign_1 [1/1] 2.49ns
bb8.0:33  %x_assign_1 = add nsw i32 %z1_4, %z1_6          ; <i32> [#uses=2]

ST_26: x_assign_2 [1/1] 2.49ns
bb8.0:34  %x_assign_2 = sub nsw i32 %z1_7, %z1_5          ; <i32> [#uses=2]

ST_26: y_assign_1 [1/1] 2.49ns
bb8.0:35  %y_assign_1 = add nsw i32 %z1_7, %z1_5          ; <i32> [#uses=2]


 <State 27>: 6.36ns
ST_27: tmp_9 [1/3] 6.36ns
bb8.0:6  %tmp_9 = mul nsw i32 %Y_load_10, 8867           ; <i32> [#uses=1]

ST_27: tmp_5 [1/3] 6.36ns
bb8.0:7  %tmp_5 = mul nsw i32 %Y_load_4, 21407           ; <i32> [#uses=1]

ST_27: tmp_10 [1/3] 6.36ns
bb8.0:11  %tmp_10 = mul nsw i32 %Y_load_10, 21407         ; <i32> [#uses=1]

ST_27: tmp_11 [1/3] 6.36ns
bb8.0:12  %tmp_11 = mul nsw i32 %Y_load_4, 8867           ; <i32> [#uses=1]

ST_27: tmp_18 [3/3] 6.36ns
bb8.0:36  %tmp_18 = mul nsw i32 %x_assign_1, 13623        ; <i32> [#uses=1]

ST_27: tmp_19 [3/3] 6.36ns
bb8.0:37  %tmp_19 = mul nsw i32 %y_assign_1, 9102         ; <i32> [#uses=1]

ST_27: tmp_22 [3/3] 6.36ns
bb8.0:41  %tmp_22 = mul nsw i32 %x_assign_1, 9102         ; <i32> [#uses=1]

ST_27: tmp_23 [3/3] 6.36ns
bb8.0:42  %tmp_23 = mul nsw i32 %y_assign_1, 13623        ; <i32> [#uses=1]

ST_27: tmp_26 [3/3] 6.36ns
bb8.0:46  %tmp_26 = mul nsw i32 %x_assign_2, 16069        ; <i32> [#uses=1]

ST_27: tmp_27 [3/3] 6.36ns
bb8.0:47  %tmp_27 = mul nsw i32 %y_assign_2, 3196         ; <i32> [#uses=1]

ST_27: tmp_30 [3/3] 6.36ns
bb8.0:51  %tmp_30 = mul nsw i32 %x_assign_2, 3196         ; <i32> [#uses=1]

ST_27: tmp_31 [3/3] 6.36ns
bb8.0:52  %tmp_31 = mul nsw i32 %y_assign_2, 16069        ; <i32> [#uses=1]


 <State 28>: 6.36ns
ST_28: Y_load_3 [2/2] 2.39ns
bb8.0:0  %Y_load_3 = load i32* %Y_addr_9, align 4        ; <i32> [#uses=2]

ST_28: Y_load [2/2] 2.39ns
bb8.0:1  %Y_load = load i32* %Y_addr, align 4            ; <i32> [#uses=2]

ST_28: tmp_6 [1/1] 2.49ns
bb8.0:8  %tmp_6 = sub nsw i32 %tmp_9, %tmp_5             ; <i32> [#uses=1]

ST_28: tmp_7 [1/1] 0.00ns
bb8.0:9  %tmp_7 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_6, i32 14, i32 31) ; <i18> [#uses=1]

ST_28: tmp_12 [1/1] 2.49ns
bb8.0:13  %tmp_12 = add nsw i32 %tmp_11, %tmp_10          ; <i32> [#uses=1]

ST_28: tmp_13 [1/1] 0.00ns
bb8.0:14  %tmp_13 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_12, i32 14, i32 31) ; <i18> [#uses=1]

ST_28: tmp_18 [2/3] 6.36ns
bb8.0:36  %tmp_18 = mul nsw i32 %x_assign_1, 13623        ; <i32> [#uses=1]

ST_28: tmp_19 [2/3] 6.36ns
bb8.0:37  %tmp_19 = mul nsw i32 %y_assign_1, 9102         ; <i32> [#uses=1]

ST_28: tmp_22 [2/3] 6.36ns
bb8.0:41  %tmp_22 = mul nsw i32 %x_assign_1, 9102         ; <i32> [#uses=1]

ST_28: tmp_23 [2/3] 6.36ns
bb8.0:42  %tmp_23 = mul nsw i32 %y_assign_1, 13623        ; <i32> [#uses=1]

ST_28: tmp_26 [2/3] 6.36ns
bb8.0:46  %tmp_26 = mul nsw i32 %x_assign_2, 16069        ; <i32> [#uses=1]

ST_28: tmp_27 [2/3] 6.36ns
bb8.0:47  %tmp_27 = mul nsw i32 %y_assign_2, 3196         ; <i32> [#uses=1]

ST_28: tmp_30 [2/3] 6.36ns
bb8.0:51  %tmp_30 = mul nsw i32 %x_assign_2, 3196         ; <i32> [#uses=1]

ST_28: tmp_31 [2/3] 6.36ns
bb8.0:52  %tmp_31 = mul nsw i32 %y_assign_2, 16069        ; <i32> [#uses=1]


 <State 29>: 6.36ns
ST_29: Y_load_3 [1/2] 2.39ns
bb8.0:0  %Y_load_3 = load i32* %Y_addr_9, align 4        ; <i32> [#uses=2]

ST_29: Y_load [1/2] 2.39ns
bb8.0:1  %Y_load = load i32* %Y_addr, align 4            ; <i32> [#uses=2]

ST_29: tmp_18 [1/3] 6.36ns
bb8.0:36  %tmp_18 = mul nsw i32 %x_assign_1, 13623        ; <i32> [#uses=1]

ST_29: tmp_19 [1/3] 6.36ns
bb8.0:37  %tmp_19 = mul nsw i32 %y_assign_1, 9102         ; <i32> [#uses=1]

ST_29: tmp_22 [1/3] 6.36ns
bb8.0:41  %tmp_22 = mul nsw i32 %x_assign_1, 9102         ; <i32> [#uses=1]

ST_29: tmp_23 [1/3] 6.36ns
bb8.0:42  %tmp_23 = mul nsw i32 %y_assign_1, 13623        ; <i32> [#uses=1]

ST_29: tmp_26 [1/3] 6.36ns
bb8.0:46  %tmp_26 = mul nsw i32 %x_assign_2, 16069        ; <i32> [#uses=1]

ST_29: tmp_27 [1/3] 6.36ns
bb8.0:47  %tmp_27 = mul nsw i32 %y_assign_2, 3196         ; <i32> [#uses=1]

ST_29: tmp_30 [1/3] 6.36ns
bb8.0:51  %tmp_30 = mul nsw i32 %x_assign_2, 3196         ; <i32> [#uses=1]

ST_29: tmp_31 [1/3] 6.36ns
bb8.0:52  %tmp_31 = mul nsw i32 %y_assign_2, 16069        ; <i32> [#uses=1]


 <State 30>: 4.98ns
ST_30: z1_1 [1/1] 2.49ns
bb8.0:2  %z1_1 = sub nsw i32 %Y_load_3, %Y_load          ; <i32> [#uses=2]

ST_30: z1_0 [1/1] 2.49ns
bb8.0:3  %z1_0 = add nsw i32 %Y_load, %Y_load_3          ; <i32> [#uses=2]

ST_30: z1_3 [1/1] 0.00ns
bb8.0:15  %z1_3 = sext i18 %tmp_13 to i32                 ; <i32> [#uses=2]

ST_30: z3_3 [1/1] 2.49ns
bb8.0:28  %z3_3 = sub nsw i32 %z1_0, %z1_3                ; <i32> [#uses=2]

ST_30: z3_0 [1/1] 2.49ns
bb8.0:29  %z3_0 = add nsw i32 %z1_0, %z1_3                ; <i32> [#uses=2]

ST_30: tmp_20 [1/1] 2.49ns
bb8.0:38  %tmp_20 = sub nsw i32 %tmp_18, %tmp_19          ; <i32> [#uses=1]

ST_30: tmp_21 [1/1] 0.00ns
bb8.0:39  %tmp_21 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_20, i32 14, i32 31) ; <i18> [#uses=1]

ST_30: tmp_24 [1/1] 2.49ns
bb8.0:43  %tmp_24 = add nsw i32 %tmp_23, %tmp_22          ; <i32> [#uses=1]

ST_30: tmp_25 [1/1] 0.00ns
bb8.0:44  %tmp_25 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_24, i32 14, i32 31) ; <i18> [#uses=1]

ST_30: tmp_28 [1/1] 2.49ns
bb8.0:48  %tmp_28 = sub nsw i32 %tmp_26, %tmp_27          ; <i32> [#uses=1]

ST_30: tmp_29 [1/1] 0.00ns
bb8.0:49  %tmp_29 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_28, i32 14, i32 31) ; <i18> [#uses=1]

ST_30: tmp_32 [1/1] 2.49ns
bb8.0:53  %tmp_32 = add nsw i32 %tmp_31, %tmp_30          ; <i32> [#uses=1]

ST_30: tmp_33 [1/1] 0.00ns
bb8.0:54  %tmp_33 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_32, i32 14, i32 31) ; <i18> [#uses=1]


 <State 31>: 4.88ns
ST_31: z1_2 [1/1] 0.00ns
bb8.0:10  %z1_2 = sext i18 %tmp_7 to i32                  ; <i32> [#uses=2]

ST_31: z3_2 [1/1] 2.49ns
bb8.0:30  %z3_2 = sub nsw i32 %z1_1, %z1_2                ; <i32> [#uses=2]

ST_31: z3_1 [1/1] 2.49ns
bb8.0:31  %z3_1 = add nsw i32 %z1_1, %z1_2                ; <i32> [#uses=2]

ST_31: z3_7 [1/1] 0.00ns
bb8.0:45  %z3_7 = sext i18 %tmp_25 to i32                 ; <i32> [#uses=2]

ST_31: tmp_34 [1/1] 2.49ns
bb8.0:56  %tmp_34 = sub nsw i32 %z3_0, %z3_7              ; <i32> [#uses=1]

ST_31: stg_452 [1/1] 2.39ns
bb8.0:57  store i32 %tmp_34, i32* %Y_addr_4, align 4

ST_31: tmp_35 [1/1] 2.49ns
bb8.0:58  %tmp_35 = add nsw i32 %z3_0, %z3_7              ; <i32> [#uses=1]

ST_31: stg_454 [1/1] 2.39ns
bb8.0:59  store i32 %tmp_35, i32* %Y_addr_9, align 4


 <State 32>: 4.88ns
ST_32: z3_6 [1/1] 0.00ns
bb8.0:55  %z3_6 = sext i18 %tmp_33 to i32                 ; <i32> [#uses=2]

ST_32: tmp_36 [1/1] 2.49ns
bb8.0:60  %tmp_36 = sub nsw i32 %z3_1, %z3_6              ; <i32> [#uses=1]

ST_32: stg_457 [1/1] 2.39ns
bb8.0:61  store i32 %tmp_36, i32* %Y_addr_1, align 4

ST_32: tmp_37 [1/1] 2.49ns
bb8.0:62  %tmp_37 = add nsw i32 %z3_1, %z3_6              ; <i32> [#uses=1]

ST_32: stg_459 [1/1] 2.39ns
bb8.0:63  store i32 %tmp_37, i32* %Y_addr_3, align 4


 <State 33>: 4.88ns
ST_33: z3_5 [1/1] 0.00ns
bb8.0:50  %z3_5 = sext i18 %tmp_29 to i32                 ; <i32> [#uses=2]

ST_33: tmp_39 [1/1] 2.49ns
bb8.0:64  %tmp_39 = sub nsw i32 %z3_2, %z3_5              ; <i32> [#uses=1]

ST_33: stg_462 [1/1] 2.39ns
bb8.0:65  store i32 %tmp_39, i32* %Y_addr_6, align 4

ST_33: tmp_40 [1/1] 2.49ns
bb8.0:66  %tmp_40 = add nsw i32 %z3_2, %z3_5              ; <i32> [#uses=1]

ST_33: stg_464 [1/1] 2.39ns
bb8.0:67  store i32 %tmp_40, i32* %Y_addr_2, align 4


 <State 34>: 4.88ns
ST_34: z3_4 [1/1] 0.00ns
bb8.0:40  %z3_4 = sext i18 %tmp_21 to i32                 ; <i32> [#uses=2]

ST_34: tmp_41 [1/1] 2.49ns
bb8.0:68  %tmp_41 = sub nsw i32 %z3_3, %z3_4              ; <i32> [#uses=1]

ST_34: stg_467 [1/1] 2.39ns
bb8.0:69  store i32 %tmp_41, i32* %Y_addr, align 4

ST_34: tmp_42 [1/1] 2.49ns
bb8.0:70  %tmp_42 = add nsw i32 %z3_3, %z3_4              ; <i32> [#uses=1]

ST_34: stg_469 [1/1] 2.39ns
bb8.0:71  store i32 %tmp_42, i32* %Y_addr_5, align 4

ST_34: empty_20 [1/1] 0.00ns
bb8.0:72  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str19, i32 %tmp_2) nounwind ; <i32> [#uses=0]

ST_34: tmp_38 [1/1] 0.00ns
bb8.0:73  %tmp_38 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str19) nounwind ; <i32> [#uses=1]

ST_34: stg_472 [1/1] 1.21ns
bb8.0:74  br label %bb7.1


 <State 35>: 3.76ns
ST_35: column_4 [1/1] 0.00ns
bb7.1:0  %column_4 = phi i4 [ 0, %bb8.0 ], [ %column_5, %bb6.1 ] ; <i4> [#uses=3]

ST_35: empty_23 [1/1] 0.00ns
bb7.1:1  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_35: exitcond4 [1/1] 1.88ns
bb7.1:2  %exitcond4 = icmp eq i4 %column_4, -8           ; <i1> [#uses=1]

ST_35: column_5 [1/1] 0.85ns
bb7.1:3  %column_5 = add i4 %column_4, 1                 ; <i4> [#uses=1]

ST_35: stg_477 [1/1] 0.00ns
bb7.1:4  br i1 %exitcond4, label %bb8.1, label %bb6.1

ST_35: tmp_51_1 [1/1] 1.37ns
bb6.1:0  %tmp_51_1 = xor i4 %column_4, -8                ; <i4> [#uses=1]

ST_35: tmp_51_1_cast [1/1] 0.00ns
bb6.1:1  %tmp_51_1_cast = zext i4 %tmp_51_1 to i32       ; <i32> [#uses=2]

ST_35: in_addr_1 [1/1] 0.00ns
bb6.1:2  %in_addr_1 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %tmp_51_1_cast ; <i16*> [#uses=1]

ST_35: in_load_1 [2/2] 2.39ns
bb6.1:3  %in_load_1 = load i16* %in_addr_1, align 2      ; <i16> [#uses=1]

ST_35: Y_load_14 [2/2] 2.39ns
bb8.1:20  %Y_load_14 = load i32* %Y_addr_15, align 4      ; <i32> [#uses=1]

ST_35: Y_load_15 [2/2] 2.39ns
bb8.1:24  %Y_load_15 = load i32* %Y_addr_16, align 4      ; <i32> [#uses=1]


 <State 36>: 4.78ns
ST_36: in_load_1 [1/2] 2.39ns
bb6.1:3  %in_load_1 = load i16* %in_addr_1, align 2      ; <i16> [#uses=1]

ST_36: tmp_52_1_cast [1/1] 0.00ns
bb6.1:4  %tmp_52_1_cast = zext i16 %in_load_1 to i19     ; <i19> [#uses=1]

ST_36: tmp_53_1 [1/1] 0.00ns
bb6.1:5  %tmp_53_1 = shl i19 %tmp_52_1_cast, 3           ; <i19> [#uses=1]

ST_36: tmp_53_1_cast [1/1] 0.00ns
bb6.1:6  %tmp_53_1_cast = sext i19 %tmp_53_1 to i32      ; <i32> [#uses=1]

ST_36: Y_addr_17 [1/1] 0.00ns
bb6.1:7  %Y_addr_17 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_51_1_cast ; <i32*> [#uses=1]

ST_36: stg_489 [1/1] 2.39ns
bb6.1:8  store i32 %tmp_53_1_cast, i32* %Y_addr_17, align 4

ST_36: stg_490 [1/1] 0.00ns
bb6.1:9  br label %bb7.1


 <State 37>: 2.39ns
ST_37: Y_load_14 [1/2] 2.39ns
bb8.1:20  %Y_load_14 = load i32* %Y_addr_15, align 4      ; <i32> [#uses=1]

ST_37: Y_load_15 [1/2] 2.39ns
bb8.1:24  %Y_load_15 = load i32* %Y_addr_16, align 4      ; <i32> [#uses=1]


 <State 38>: 6.36ns
ST_38: Y_load_16 [2/2] 2.39ns
bb8.1:4  %Y_load_16 = load i32* %Y_addr_11, align 4      ; <i32> [#uses=2]

ST_38: Y_load_17 [2/2] 2.39ns
bb8.1:5  %Y_load_17 = load i32* %Y_addr_12, align 4      ; <i32> [#uses=2]

ST_38: tmp_19_1 [3/3] 6.36ns
bb8.1:21  %tmp_19_1 = mul nsw i32 %Y_load_14, 23170       ; <i32> [#uses=1]

ST_38: tmp_21_1 [3/3] 6.36ns
bb8.1:25  %tmp_21_1 = mul nsw i32 %Y_load_15, 23170       ; <i32> [#uses=1]


 <State 39>: 6.36ns
ST_39: Y_load_16 [1/2] 2.39ns
bb8.1:4  %Y_load_16 = load i32* %Y_addr_11, align 4      ; <i32> [#uses=2]

ST_39: Y_load_17 [1/2] 2.39ns
bb8.1:5  %Y_load_17 = load i32* %Y_addr_12, align 4      ; <i32> [#uses=2]

ST_39: Y_load_12 [2/2] 2.39ns
bb8.1:16  %Y_load_12 = load i32* %Y_addr_13, align 4      ; <i32> [#uses=2]

ST_39: Y_load_13 [2/2] 2.39ns
bb8.1:17  %Y_load_13 = load i32* %Y_addr_14, align 4      ; <i32> [#uses=2]

ST_39: tmp_19_1 [2/3] 6.36ns
bb8.1:21  %tmp_19_1 = mul nsw i32 %Y_load_14, 23170       ; <i32> [#uses=1]

ST_39: tmp_21_1 [2/3] 6.36ns
bb8.1:25  %tmp_21_1 = mul nsw i32 %Y_load_15, 23170       ; <i32> [#uses=1]


 <State 40>: 6.36ns
ST_40: tmp_9_1 [3/3] 6.36ns
bb8.1:6  %tmp_9_1 = mul nsw i32 %Y_load_17, 8867         ; <i32> [#uses=1]

ST_40: tmp_10_1 [3/3] 6.36ns
bb8.1:7  %tmp_10_1 = mul nsw i32 %Y_load_16, 21407       ; <i32> [#uses=1]

ST_40: tmp_13_1 [3/3] 6.36ns
bb8.1:11  %tmp_13_1 = mul nsw i32 %Y_load_17, 21407       ; <i32> [#uses=1]

ST_40: tmp_14_1 [3/3] 6.36ns
bb8.1:12  %tmp_14_1 = mul nsw i32 %Y_load_16, 8867        ; <i32> [#uses=1]

ST_40: Y_load_12 [1/2] 2.39ns
bb8.1:16  %Y_load_12 = load i32* %Y_addr_13, align 4      ; <i32> [#uses=2]

ST_40: Y_load_13 [1/2] 2.39ns
bb8.1:17  %Y_load_13 = load i32* %Y_addr_14, align 4      ; <i32> [#uses=2]

ST_40: tmp_19_1 [1/3] 6.36ns
bb8.1:21  %tmp_19_1 = mul nsw i32 %Y_load_14, 23170       ; <i32> [#uses=1]

ST_40: tmp_46 [1/1] 0.00ns
bb8.1:22  %tmp_46 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_19_1, i32 14, i32 31) ; <i18> [#uses=1]

ST_40: tmp_21_1 [1/3] 6.36ns
bb8.1:25  %tmp_21_1 = mul nsw i32 %Y_load_15, 23170       ; <i32> [#uses=1]

ST_40: tmp_47 [1/1] 0.00ns
bb8.1:26  %tmp_47 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_21_1, i32 14, i32 31) ; <i18> [#uses=1]


 <State 41>: 6.36ns
ST_41: tmp_9_1 [2/3] 6.36ns
bb8.1:6  %tmp_9_1 = mul nsw i32 %Y_load_17, 8867         ; <i32> [#uses=1]

ST_41: tmp_10_1 [2/3] 6.36ns
bb8.1:7  %tmp_10_1 = mul nsw i32 %Y_load_16, 21407       ; <i32> [#uses=1]

ST_41: tmp_13_1 [2/3] 6.36ns
bb8.1:11  %tmp_13_1 = mul nsw i32 %Y_load_17, 21407       ; <i32> [#uses=1]

ST_41: tmp_14_1 [2/3] 6.36ns
bb8.1:12  %tmp_14_1 = mul nsw i32 %Y_load_16, 8867        ; <i32> [#uses=1]

ST_41: z1_4_1 [1/1] 2.49ns
bb8.1:18  %z1_4_1 = sub nsw i32 %Y_load_12, %Y_load_13    ; <i32> [#uses=2]

ST_41: z1_7_1 [1/1] 2.49ns
bb8.1:19  %z1_7_1 = add nsw i32 %Y_load_13, %Y_load_12    ; <i32> [#uses=2]

ST_41: z1_5_1 [1/1] 0.00ns
bb8.1:23  %z1_5_1 = sext i18 %tmp_46 to i32               ; <i32> [#uses=2]

ST_41: z1_6_1 [1/1] 0.00ns
bb8.1:27  %z1_6_1 = sext i18 %tmp_47 to i32               ; <i32> [#uses=2]

ST_41: y_assign_7 [1/1] 2.49ns
bb8.1:32  %y_assign_7 = sub nsw i32 %z1_4_1, %z1_6_1      ; <i32> [#uses=2]

ST_41: x_assign_6 [1/1] 2.49ns
bb8.1:33  %x_assign_6 = add nsw i32 %z1_4_1, %z1_6_1      ; <i32> [#uses=2]

ST_41: x_assign_7 [1/1] 2.49ns
bb8.1:34  %x_assign_7 = sub nsw i32 %z1_7_1, %z1_5_1      ; <i32> [#uses=2]

ST_41: y_assign_6 [1/1] 2.49ns
bb8.1:35  %y_assign_6 = add nsw i32 %z1_7_1, %z1_5_1      ; <i32> [#uses=2]


 <State 42>: 6.36ns
ST_42: tmp_9_1 [1/3] 6.36ns
bb8.1:6  %tmp_9_1 = mul nsw i32 %Y_load_17, 8867         ; <i32> [#uses=1]

ST_42: tmp_10_1 [1/3] 6.36ns
bb8.1:7  %tmp_10_1 = mul nsw i32 %Y_load_16, 21407       ; <i32> [#uses=1]

ST_42: tmp_13_1 [1/3] 6.36ns
bb8.1:11  %tmp_13_1 = mul nsw i32 %Y_load_17, 21407       ; <i32> [#uses=1]

ST_42: tmp_14_1 [1/3] 6.36ns
bb8.1:12  %tmp_14_1 = mul nsw i32 %Y_load_16, 8867        ; <i32> [#uses=1]

ST_42: tmp_27_1 [3/3] 6.36ns
bb8.1:36  %tmp_27_1 = mul nsw i32 %x_assign_6, 13623      ; <i32> [#uses=1]

ST_42: tmp_28_1 [3/3] 6.36ns
bb8.1:37  %tmp_28_1 = mul nsw i32 %y_assign_6, 9102       ; <i32> [#uses=1]

ST_42: tmp_31_1 [3/3] 6.36ns
bb8.1:41  %tmp_31_1 = mul nsw i32 %x_assign_6, 9102       ; <i32> [#uses=1]

ST_42: tmp_32_1 [3/3] 6.36ns
bb8.1:42  %tmp_32_1 = mul nsw i32 %y_assign_6, 13623      ; <i32> [#uses=1]

ST_42: tmp_35_1 [3/3] 6.36ns
bb8.1:46  %tmp_35_1 = mul nsw i32 %x_assign_7, 16069      ; <i32> [#uses=1]

ST_42: tmp_36_1 [3/3] 6.36ns
bb8.1:47  %tmp_36_1 = mul nsw i32 %y_assign_7, 3196       ; <i32> [#uses=1]

ST_42: tmp_39_1 [3/3] 6.36ns
bb8.1:51  %tmp_39_1 = mul nsw i32 %x_assign_7, 3196       ; <i32> [#uses=1]

ST_42: tmp_40_1 [3/3] 6.36ns
bb8.1:52  %tmp_40_1 = mul nsw i32 %y_assign_7, 16069      ; <i32> [#uses=1]


 <State 43>: 6.36ns
ST_43: Y_load_11 [2/2] 2.39ns
bb8.1:0  %Y_load_11 = load i32* %Y_addr_18, align 4      ; <i32> [#uses=2]

ST_43: Y_load_1 [2/2] 2.39ns
bb8.1:1  %Y_load_1 = load i32* %Y_addr_10, align 4       ; <i32> [#uses=2]

ST_43: tmp_11_1 [1/1] 2.49ns
bb8.1:8  %tmp_11_1 = sub nsw i32 %tmp_9_1, %tmp_10_1     ; <i32> [#uses=1]

ST_43: tmp_44 [1/1] 0.00ns
bb8.1:9  %tmp_44 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_11_1, i32 14, i32 31) ; <i18> [#uses=1]

ST_43: tmp_15_1 [1/1] 2.49ns
bb8.1:13  %tmp_15_1 = add nsw i32 %tmp_14_1, %tmp_13_1    ; <i32> [#uses=1]

ST_43: tmp_45 [1/1] 0.00ns
bb8.1:14  %tmp_45 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_15_1, i32 14, i32 31) ; <i18> [#uses=1]

ST_43: tmp_27_1 [2/3] 6.36ns
bb8.1:36  %tmp_27_1 = mul nsw i32 %x_assign_6, 13623      ; <i32> [#uses=1]

ST_43: tmp_28_1 [2/3] 6.36ns
bb8.1:37  %tmp_28_1 = mul nsw i32 %y_assign_6, 9102       ; <i32> [#uses=1]

ST_43: tmp_31_1 [2/3] 6.36ns
bb8.1:41  %tmp_31_1 = mul nsw i32 %x_assign_6, 9102       ; <i32> [#uses=1]

ST_43: tmp_32_1 [2/3] 6.36ns
bb8.1:42  %tmp_32_1 = mul nsw i32 %y_assign_6, 13623      ; <i32> [#uses=1]

ST_43: tmp_35_1 [2/3] 6.36ns
bb8.1:46  %tmp_35_1 = mul nsw i32 %x_assign_7, 16069      ; <i32> [#uses=1]

ST_43: tmp_36_1 [2/3] 6.36ns
bb8.1:47  %tmp_36_1 = mul nsw i32 %y_assign_7, 3196       ; <i32> [#uses=1]

ST_43: tmp_39_1 [2/3] 6.36ns
bb8.1:51  %tmp_39_1 = mul nsw i32 %x_assign_7, 3196       ; <i32> [#uses=1]

ST_43: tmp_40_1 [2/3] 6.36ns
bb8.1:52  %tmp_40_1 = mul nsw i32 %y_assign_7, 16069      ; <i32> [#uses=1]


 <State 44>: 6.36ns
ST_44: Y_load_11 [1/2] 2.39ns
bb8.1:0  %Y_load_11 = load i32* %Y_addr_18, align 4      ; <i32> [#uses=2]

ST_44: Y_load_1 [1/2] 2.39ns
bb8.1:1  %Y_load_1 = load i32* %Y_addr_10, align 4       ; <i32> [#uses=2]

ST_44: tmp_27_1 [1/3] 6.36ns
bb8.1:36  %tmp_27_1 = mul nsw i32 %x_assign_6, 13623      ; <i32> [#uses=1]

ST_44: tmp_28_1 [1/3] 6.36ns
bb8.1:37  %tmp_28_1 = mul nsw i32 %y_assign_6, 9102       ; <i32> [#uses=1]

ST_44: tmp_31_1 [1/3] 6.36ns
bb8.1:41  %tmp_31_1 = mul nsw i32 %x_assign_6, 9102       ; <i32> [#uses=1]

ST_44: tmp_32_1 [1/3] 6.36ns
bb8.1:42  %tmp_32_1 = mul nsw i32 %y_assign_6, 13623      ; <i32> [#uses=1]

ST_44: tmp_35_1 [1/3] 6.36ns
bb8.1:46  %tmp_35_1 = mul nsw i32 %x_assign_7, 16069      ; <i32> [#uses=1]

ST_44: tmp_36_1 [1/3] 6.36ns
bb8.1:47  %tmp_36_1 = mul nsw i32 %y_assign_7, 3196       ; <i32> [#uses=1]

ST_44: tmp_39_1 [1/3] 6.36ns
bb8.1:51  %tmp_39_1 = mul nsw i32 %x_assign_7, 3196       ; <i32> [#uses=1]

ST_44: tmp_40_1 [1/3] 6.36ns
bb8.1:52  %tmp_40_1 = mul nsw i32 %y_assign_7, 16069      ; <i32> [#uses=1]


 <State 45>: 4.98ns
ST_45: z1_1_1 [1/1] 2.49ns
bb8.1:2  %z1_1_1 = sub nsw i32 %Y_load_11, %Y_load_1     ; <i32> [#uses=2]

ST_45: z1_0_1 [1/1] 2.49ns
bb8.1:3  %z1_0_1 = add nsw i32 %Y_load_1, %Y_load_11     ; <i32> [#uses=2]

ST_45: z1_3_1 [1/1] 0.00ns
bb8.1:15  %z1_3_1 = sext i18 %tmp_45 to i32               ; <i32> [#uses=2]

ST_45: z3_3_1 [1/1] 2.49ns
bb8.1:28  %z3_3_1 = sub nsw i32 %z1_0_1, %z1_3_1          ; <i32> [#uses=2]

ST_45: z3_0_1 [1/1] 2.49ns
bb8.1:29  %z3_0_1 = add nsw i32 %z1_0_1, %z1_3_1          ; <i32> [#uses=2]

ST_45: tmp_29_1 [1/1] 2.49ns
bb8.1:38  %tmp_29_1 = sub nsw i32 %tmp_27_1, %tmp_28_1    ; <i32> [#uses=1]

ST_45: tmp_48 [1/1] 0.00ns
bb8.1:39  %tmp_48 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_29_1, i32 14, i32 31) ; <i18> [#uses=1]

ST_45: tmp_33_1 [1/1] 2.49ns
bb8.1:43  %tmp_33_1 = add nsw i32 %tmp_32_1, %tmp_31_1    ; <i32> [#uses=1]

ST_45: tmp_49 [1/1] 0.00ns
bb8.1:44  %tmp_49 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_33_1, i32 14, i32 31) ; <i18> [#uses=1]

ST_45: tmp_37_1 [1/1] 2.49ns
bb8.1:48  %tmp_37_1 = sub nsw i32 %tmp_35_1, %tmp_36_1    ; <i32> [#uses=1]

ST_45: tmp_50 [1/1] 0.00ns
bb8.1:49  %tmp_50 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_37_1, i32 14, i32 31) ; <i18> [#uses=1]

ST_45: tmp_41_1 [1/1] 2.49ns
bb8.1:53  %tmp_41_1 = add nsw i32 %tmp_40_1, %tmp_39_1    ; <i32> [#uses=1]

ST_45: tmp_51 [1/1] 0.00ns
bb8.1:54  %tmp_51 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_41_1, i32 14, i32 31) ; <i18> [#uses=1]


 <State 46>: 4.88ns
ST_46: z1_2_1 [1/1] 0.00ns
bb8.1:10  %z1_2_1 = sext i18 %tmp_44 to i32               ; <i32> [#uses=2]

ST_46: z3_2_1 [1/1] 2.49ns
bb8.1:30  %z3_2_1 = sub nsw i32 %z1_1_1, %z1_2_1          ; <i32> [#uses=2]

ST_46: z3_1_1 [1/1] 2.49ns
bb8.1:31  %z3_1_1 = add nsw i32 %z1_1_1, %z1_2_1          ; <i32> [#uses=2]

ST_46: z3_7_1 [1/1] 0.00ns
bb8.1:45  %z3_7_1 = sext i18 %tmp_49 to i32               ; <i32> [#uses=2]

ST_46: tmp_43_1 [1/1] 2.49ns
bb8.1:56  %tmp_43_1 = sub nsw i32 %z3_0_1, %z3_7_1        ; <i32> [#uses=1]

ST_46: stg_579 [1/1] 2.39ns
bb8.1:57  store i32 %tmp_43_1, i32* %Y_addr_14, align 4

ST_46: tmp_44_1 [1/1] 2.49ns
bb8.1:58  %tmp_44_1 = add nsw i32 %z3_0_1, %z3_7_1        ; <i32> [#uses=1]

ST_46: stg_581 [1/1] 2.39ns
bb8.1:59  store i32 %tmp_44_1, i32* %Y_addr_18, align 4


 <State 47>: 4.88ns
ST_47: z3_6_1 [1/1] 0.00ns
bb8.1:55  %z3_6_1 = sext i18 %tmp_51 to i32               ; <i32> [#uses=2]

ST_47: tmp_45_1 [1/1] 2.49ns
bb8.1:60  %tmp_45_1 = sub nsw i32 %z3_1_1, %z3_6_1        ; <i32> [#uses=1]

ST_47: stg_584 [1/1] 2.39ns
bb8.1:61  store i32 %tmp_45_1, i32* %Y_addr_11, align 4

ST_47: tmp_46_1 [1/1] 2.49ns
bb8.1:62  %tmp_46_1 = add nsw i32 %z3_1_1, %z3_6_1        ; <i32> [#uses=1]

ST_47: stg_586 [1/1] 2.39ns
bb8.1:63  store i32 %tmp_46_1, i32* %Y_addr_13, align 4


 <State 48>: 4.88ns
ST_48: z3_5_1 [1/1] 0.00ns
bb8.1:50  %z3_5_1 = sext i18 %tmp_50 to i32               ; <i32> [#uses=2]

ST_48: tmp_47_1 [1/1] 2.49ns
bb8.1:64  %tmp_47_1 = sub nsw i32 %z3_2_1, %z3_5_1        ; <i32> [#uses=1]

ST_48: stg_589 [1/1] 2.39ns
bb8.1:65  store i32 %tmp_47_1, i32* %Y_addr_16, align 4

ST_48: tmp_48_1 [1/1] 2.49ns
bb8.1:66  %tmp_48_1 = add nsw i32 %z3_2_1, %z3_5_1        ; <i32> [#uses=1]

ST_48: stg_591 [1/1] 2.39ns
bb8.1:67  store i32 %tmp_48_1, i32* %Y_addr_12, align 4


 <State 49>: 4.88ns
ST_49: z3_4_1 [1/1] 0.00ns
bb8.1:40  %z3_4_1 = sext i18 %tmp_48 to i32               ; <i32> [#uses=2]

ST_49: tmp_49_1 [1/1] 2.49ns
bb8.1:68  %tmp_49_1 = sub nsw i32 %z3_3_1, %z3_4_1        ; <i32> [#uses=1]

ST_49: stg_594 [1/1] 2.39ns
bb8.1:69  store i32 %tmp_49_1, i32* %Y_addr_10, align 4

ST_49: tmp_50_1 [1/1] 2.49ns
bb8.1:70  %tmp_50_1 = add nsw i32 %z3_3_1, %z3_4_1        ; <i32> [#uses=1]

ST_49: stg_596 [1/1] 2.39ns
bb8.1:71  store i32 %tmp_50_1, i32* %Y_addr_15, align 4

ST_49: empty_22 [1/1] 0.00ns
bb8.1:72  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str19, i32 %tmp_38) nounwind ; <i32> [#uses=0]

ST_49: tmp_52 [1/1] 0.00ns
bb8.1:73  %tmp_52 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str19) nounwind ; <i32> [#uses=1]

ST_49: stg_599 [1/1] 1.21ns
bb8.1:74  br label %bb7.2


 <State 50>: 2.39ns
ST_50: column_6 [1/1] 0.00ns
bb7.2:0  %column_6 = phi i4 [ 0, %bb8.1 ], [ %column_7, %bb6.2 ] ; <i4> [#uses=3]

ST_50: column_6_cast [1/1] 0.00ns
bb7.2:1  %column_6_cast = zext i4 %column_6 to i5        ; <i5> [#uses=1]

ST_50: empty_25 [1/1] 0.00ns
bb7.2:2  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_50: exitcond5 [1/1] 1.88ns
bb7.2:3  %exitcond5 = icmp eq i4 %column_6, -8           ; <i1> [#uses=1]

ST_50: column_7 [1/1] 0.85ns
bb7.2:4  %column_7 = add i4 %column_6, 1                 ; <i4> [#uses=1]

ST_50: stg_605 [1/1] 0.00ns
bb7.2:5  br i1 %exitcond5, label %bb8.2, label %bb6.2

ST_50: tmp_51_s [1/1] 0.00ns
bb6.2:0  %tmp_51_s = or i5 %column_6_cast, -16           ; <i5> [#uses=1]

ST_50: tmp_51_2_cast [1/1] 0.00ns
bb6.2:1  %tmp_51_2_cast = zext i5 %tmp_51_s to i32       ; <i32> [#uses=2]

ST_50: in_addr_2 [1/1] 0.00ns
bb6.2:2  %in_addr_2 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %tmp_51_2_cast ; <i16*> [#uses=1]

ST_50: in_load_2 [2/2] 2.39ns
bb6.2:3  %in_load_2 = load i16* %in_addr_2, align 2      ; <i16> [#uses=1]

ST_50: Y_load_20 [2/2] 2.39ns
bb8.2:20  %Y_load_20 = load i32* %Y_addr_24, align 4      ; <i32> [#uses=1]

ST_50: Y_load_21 [2/2] 2.39ns
bb8.2:24  %Y_load_21 = load i32* %Y_addr_25, align 4      ; <i32> [#uses=1]


 <State 51>: 4.78ns
ST_51: in_load_2 [1/2] 2.39ns
bb6.2:3  %in_load_2 = load i16* %in_addr_2, align 2      ; <i16> [#uses=1]

ST_51: tmp_52_2_cast [1/1] 0.00ns
bb6.2:4  %tmp_52_2_cast = zext i16 %in_load_2 to i19     ; <i19> [#uses=1]

ST_51: tmp_53_2 [1/1] 0.00ns
bb6.2:5  %tmp_53_2 = shl i19 %tmp_52_2_cast, 3           ; <i19> [#uses=1]

ST_51: tmp_53_2_cast [1/1] 0.00ns
bb6.2:6  %tmp_53_2_cast = sext i19 %tmp_53_2 to i32      ; <i32> [#uses=1]

ST_51: Y_addr_26 [1/1] 0.00ns
bb6.2:7  %Y_addr_26 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_51_2_cast ; <i32*> [#uses=1]

ST_51: stg_617 [1/1] 2.39ns
bb6.2:8  store i32 %tmp_53_2_cast, i32* %Y_addr_26, align 4

ST_51: stg_618 [1/1] 0.00ns
bb6.2:9  br label %bb7.2


 <State 52>: 2.39ns
ST_52: Y_load_20 [1/2] 2.39ns
bb8.2:20  %Y_load_20 = load i32* %Y_addr_24, align 4      ; <i32> [#uses=1]

ST_52: Y_load_21 [1/2] 2.39ns
bb8.2:24  %Y_load_21 = load i32* %Y_addr_25, align 4      ; <i32> [#uses=1]


 <State 53>: 6.36ns
ST_53: Y_load_24 [2/2] 2.39ns
bb8.2:4  %Y_load_24 = load i32* %Y_addr_20, align 4      ; <i32> [#uses=2]

ST_53: Y_load_30 [2/2] 2.39ns
bb8.2:5  %Y_load_30 = load i32* %Y_addr_21, align 4      ; <i32> [#uses=2]

ST_53: tmp_19_2 [3/3] 6.36ns
bb8.2:21  %tmp_19_2 = mul nsw i32 %Y_load_20, 23170       ; <i32> [#uses=1]

ST_53: tmp_21_2 [3/3] 6.36ns
bb8.2:25  %tmp_21_2 = mul nsw i32 %Y_load_21, 23170       ; <i32> [#uses=1]


 <State 54>: 6.36ns
ST_54: Y_load_24 [1/2] 2.39ns
bb8.2:4  %Y_load_24 = load i32* %Y_addr_20, align 4      ; <i32> [#uses=2]

ST_54: Y_load_30 [1/2] 2.39ns
bb8.2:5  %Y_load_30 = load i32* %Y_addr_21, align 4      ; <i32> [#uses=2]

ST_54: Y_load_18 [2/2] 2.39ns
bb8.2:16  %Y_load_18 = load i32* %Y_addr_22, align 4      ; <i32> [#uses=2]

ST_54: Y_load_19 [2/2] 2.39ns
bb8.2:17  %Y_load_19 = load i32* %Y_addr_23, align 4      ; <i32> [#uses=2]

ST_54: tmp_19_2 [2/3] 6.36ns
bb8.2:21  %tmp_19_2 = mul nsw i32 %Y_load_20, 23170       ; <i32> [#uses=1]

ST_54: tmp_21_2 [2/3] 6.36ns
bb8.2:25  %tmp_21_2 = mul nsw i32 %Y_load_21, 23170       ; <i32> [#uses=1]


 <State 55>: 6.36ns
ST_55: tmp_9_2 [3/3] 6.36ns
bb8.2:6  %tmp_9_2 = mul nsw i32 %Y_load_30, 8867         ; <i32> [#uses=1]

ST_55: tmp_10_2 [3/3] 6.36ns
bb8.2:7  %tmp_10_2 = mul nsw i32 %Y_load_24, 21407       ; <i32> [#uses=1]

ST_55: tmp_13_2 [3/3] 6.36ns
bb8.2:11  %tmp_13_2 = mul nsw i32 %Y_load_30, 21407       ; <i32> [#uses=1]

ST_55: tmp_14_2 [3/3] 6.36ns
bb8.2:12  %tmp_14_2 = mul nsw i32 %Y_load_24, 8867        ; <i32> [#uses=1]

ST_55: Y_load_18 [1/2] 2.39ns
bb8.2:16  %Y_load_18 = load i32* %Y_addr_22, align 4      ; <i32> [#uses=2]

ST_55: Y_load_19 [1/2] 2.39ns
bb8.2:17  %Y_load_19 = load i32* %Y_addr_23, align 4      ; <i32> [#uses=2]

ST_55: tmp_19_2 [1/3] 6.36ns
bb8.2:21  %tmp_19_2 = mul nsw i32 %Y_load_20, 23170       ; <i32> [#uses=1]

ST_55: tmp_60 [1/1] 0.00ns
bb8.2:22  %tmp_60 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_19_2, i32 14, i32 31) ; <i18> [#uses=1]

ST_55: tmp_21_2 [1/3] 6.36ns
bb8.2:25  %tmp_21_2 = mul nsw i32 %Y_load_21, 23170       ; <i32> [#uses=1]

ST_55: tmp_61 [1/1] 0.00ns
bb8.2:26  %tmp_61 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_21_2, i32 14, i32 31) ; <i18> [#uses=1]


 <State 56>: 6.36ns
ST_56: tmp_9_2 [2/3] 6.36ns
bb8.2:6  %tmp_9_2 = mul nsw i32 %Y_load_30, 8867         ; <i32> [#uses=1]

ST_56: tmp_10_2 [2/3] 6.36ns
bb8.2:7  %tmp_10_2 = mul nsw i32 %Y_load_24, 21407       ; <i32> [#uses=1]

ST_56: tmp_13_2 [2/3] 6.36ns
bb8.2:11  %tmp_13_2 = mul nsw i32 %Y_load_30, 21407       ; <i32> [#uses=1]

ST_56: tmp_14_2 [2/3] 6.36ns
bb8.2:12  %tmp_14_2 = mul nsw i32 %Y_load_24, 8867        ; <i32> [#uses=1]

ST_56: z1_4_2 [1/1] 2.49ns
bb8.2:18  %z1_4_2 = sub nsw i32 %Y_load_18, %Y_load_19    ; <i32> [#uses=2]

ST_56: z1_7_2 [1/1] 2.49ns
bb8.2:19  %z1_7_2 = add nsw i32 %Y_load_19, %Y_load_18    ; <i32> [#uses=2]

ST_56: z1_5_2 [1/1] 0.00ns
bb8.2:23  %z1_5_2 = sext i18 %tmp_60 to i32               ; <i32> [#uses=2]

ST_56: z1_6_2 [1/1] 0.00ns
bb8.2:27  %z1_6_2 = sext i18 %tmp_61 to i32               ; <i32> [#uses=2]

ST_56: y_assign_s [1/1] 2.49ns
bb8.2:32  %y_assign_s = sub nsw i32 %z1_4_2, %z1_6_2      ; <i32> [#uses=2]

ST_56: x_assign_s [1/1] 2.49ns
bb8.2:33  %x_assign_s = add nsw i32 %z1_4_2, %z1_6_2      ; <i32> [#uses=2]

ST_56: x_assign_9 [1/1] 2.49ns
bb8.2:34  %x_assign_9 = sub nsw i32 %z1_7_2, %z1_5_2      ; <i32> [#uses=2]

ST_56: y_assign_9 [1/1] 2.49ns
bb8.2:35  %y_assign_9 = add nsw i32 %z1_7_2, %z1_5_2      ; <i32> [#uses=2]


 <State 57>: 6.36ns
ST_57: tmp_9_2 [1/3] 6.36ns
bb8.2:6  %tmp_9_2 = mul nsw i32 %Y_load_30, 8867         ; <i32> [#uses=1]

ST_57: tmp_10_2 [1/3] 6.36ns
bb8.2:7  %tmp_10_2 = mul nsw i32 %Y_load_24, 21407       ; <i32> [#uses=1]

ST_57: tmp_13_2 [1/3] 6.36ns
bb8.2:11  %tmp_13_2 = mul nsw i32 %Y_load_30, 21407       ; <i32> [#uses=1]

ST_57: tmp_14_2 [1/3] 6.36ns
bb8.2:12  %tmp_14_2 = mul nsw i32 %Y_load_24, 8867        ; <i32> [#uses=1]

ST_57: tmp_27_2 [3/3] 6.36ns
bb8.2:36  %tmp_27_2 = mul nsw i32 %x_assign_s, 13623      ; <i32> [#uses=1]

ST_57: tmp_28_2 [3/3] 6.36ns
bb8.2:37  %tmp_28_2 = mul nsw i32 %y_assign_9, 9102       ; <i32> [#uses=1]

ST_57: tmp_31_2 [3/3] 6.36ns
bb8.2:41  %tmp_31_2 = mul nsw i32 %x_assign_s, 9102       ; <i32> [#uses=1]

ST_57: tmp_32_2 [3/3] 6.36ns
bb8.2:42  %tmp_32_2 = mul nsw i32 %y_assign_9, 13623      ; <i32> [#uses=1]

ST_57: tmp_35_2 [3/3] 6.36ns
bb8.2:46  %tmp_35_2 = mul nsw i32 %x_assign_9, 16069      ; <i32> [#uses=1]

ST_57: tmp_36_2 [3/3] 6.36ns
bb8.2:47  %tmp_36_2 = mul nsw i32 %y_assign_s, 3196       ; <i32> [#uses=1]

ST_57: tmp_39_2 [3/3] 6.36ns
bb8.2:51  %tmp_39_2 = mul nsw i32 %x_assign_9, 3196       ; <i32> [#uses=1]

ST_57: tmp_40_2 [3/3] 6.36ns
bb8.2:52  %tmp_40_2 = mul nsw i32 %y_assign_s, 16069      ; <i32> [#uses=1]


 <State 58>: 6.36ns
ST_58: Y_load_23 [2/2] 2.39ns
bb8.2:0  %Y_load_23 = load i32* %Y_addr_27, align 4      ; <i32> [#uses=2]

ST_58: Y_load_2 [2/2] 2.39ns
bb8.2:1  %Y_load_2 = load i32* %Y_addr_19, align 4       ; <i32> [#uses=2]

ST_58: tmp_11_2 [1/1] 2.49ns
bb8.2:8  %tmp_11_2 = sub nsw i32 %tmp_9_2, %tmp_10_2     ; <i32> [#uses=1]

ST_58: tmp_53 [1/1] 0.00ns
bb8.2:9  %tmp_53 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_11_2, i32 14, i32 31) ; <i18> [#uses=1]

ST_58: tmp_15_2 [1/1] 2.49ns
bb8.2:13  %tmp_15_2 = add nsw i32 %tmp_14_2, %tmp_13_2    ; <i32> [#uses=1]

ST_58: tmp_56 [1/1] 0.00ns
bb8.2:14  %tmp_56 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_15_2, i32 14, i32 31) ; <i18> [#uses=1]

ST_58: tmp_27_2 [2/3] 6.36ns
bb8.2:36  %tmp_27_2 = mul nsw i32 %x_assign_s, 13623      ; <i32> [#uses=1]

ST_58: tmp_28_2 [2/3] 6.36ns
bb8.2:37  %tmp_28_2 = mul nsw i32 %y_assign_9, 9102       ; <i32> [#uses=1]

ST_58: tmp_31_2 [2/3] 6.36ns
bb8.2:41  %tmp_31_2 = mul nsw i32 %x_assign_s, 9102       ; <i32> [#uses=1]

ST_58: tmp_32_2 [2/3] 6.36ns
bb8.2:42  %tmp_32_2 = mul nsw i32 %y_assign_9, 13623      ; <i32> [#uses=1]

ST_58: tmp_35_2 [2/3] 6.36ns
bb8.2:46  %tmp_35_2 = mul nsw i32 %x_assign_9, 16069      ; <i32> [#uses=1]

ST_58: tmp_36_2 [2/3] 6.36ns
bb8.2:47  %tmp_36_2 = mul nsw i32 %y_assign_s, 3196       ; <i32> [#uses=1]

ST_58: tmp_39_2 [2/3] 6.36ns
bb8.2:51  %tmp_39_2 = mul nsw i32 %x_assign_9, 3196       ; <i32> [#uses=1]

ST_58: tmp_40_2 [2/3] 6.36ns
bb8.2:52  %tmp_40_2 = mul nsw i32 %y_assign_s, 16069      ; <i32> [#uses=1]


 <State 59>: 6.36ns
ST_59: Y_load_23 [1/2] 2.39ns
bb8.2:0  %Y_load_23 = load i32* %Y_addr_27, align 4      ; <i32> [#uses=2]

ST_59: Y_load_2 [1/2] 2.39ns
bb8.2:1  %Y_load_2 = load i32* %Y_addr_19, align 4       ; <i32> [#uses=2]

ST_59: tmp_27_2 [1/3] 6.36ns
bb8.2:36  %tmp_27_2 = mul nsw i32 %x_assign_s, 13623      ; <i32> [#uses=1]

ST_59: tmp_28_2 [1/3] 6.36ns
bb8.2:37  %tmp_28_2 = mul nsw i32 %y_assign_9, 9102       ; <i32> [#uses=1]

ST_59: tmp_31_2 [1/3] 6.36ns
bb8.2:41  %tmp_31_2 = mul nsw i32 %x_assign_s, 9102       ; <i32> [#uses=1]

ST_59: tmp_32_2 [1/3] 6.36ns
bb8.2:42  %tmp_32_2 = mul nsw i32 %y_assign_9, 13623      ; <i32> [#uses=1]

ST_59: tmp_35_2 [1/3] 6.36ns
bb8.2:46  %tmp_35_2 = mul nsw i32 %x_assign_9, 16069      ; <i32> [#uses=1]

ST_59: tmp_36_2 [1/3] 6.36ns
bb8.2:47  %tmp_36_2 = mul nsw i32 %y_assign_s, 3196       ; <i32> [#uses=1]

ST_59: tmp_39_2 [1/3] 6.36ns
bb8.2:51  %tmp_39_2 = mul nsw i32 %x_assign_9, 3196       ; <i32> [#uses=1]

ST_59: tmp_40_2 [1/3] 6.36ns
bb8.2:52  %tmp_40_2 = mul nsw i32 %y_assign_s, 16069      ; <i32> [#uses=1]


 <State 60>: 4.98ns
ST_60: z1_1_2 [1/1] 2.49ns
bb8.2:2  %z1_1_2 = sub nsw i32 %Y_load_23, %Y_load_2     ; <i32> [#uses=2]

ST_60: z1_0_2 [1/1] 2.49ns
bb8.2:3  %z1_0_2 = add nsw i32 %Y_load_2, %Y_load_23     ; <i32> [#uses=2]

ST_60: z1_3_2 [1/1] 0.00ns
bb8.2:15  %z1_3_2 = sext i18 %tmp_56 to i32               ; <i32> [#uses=2]

ST_60: z3_3_2 [1/1] 2.49ns
bb8.2:28  %z3_3_2 = sub nsw i32 %z1_0_2, %z1_3_2          ; <i32> [#uses=2]

ST_60: z3_0_2 [1/1] 2.49ns
bb8.2:29  %z3_0_2 = add nsw i32 %z1_0_2, %z1_3_2          ; <i32> [#uses=2]

ST_60: tmp_29_2 [1/1] 2.49ns
bb8.2:38  %tmp_29_2 = sub nsw i32 %tmp_27_2, %tmp_28_2    ; <i32> [#uses=1]

ST_60: tmp_62 [1/1] 0.00ns
bb8.2:39  %tmp_62 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_29_2, i32 14, i32 31) ; <i18> [#uses=1]

ST_60: tmp_33_2 [1/1] 2.49ns
bb8.2:43  %tmp_33_2 = add nsw i32 %tmp_32_2, %tmp_31_2    ; <i32> [#uses=1]

ST_60: tmp_64 [1/1] 0.00ns
bb8.2:44  %tmp_64 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_33_2, i32 14, i32 31) ; <i18> [#uses=1]

ST_60: tmp_37_2 [1/1] 2.49ns
bb8.2:48  %tmp_37_2 = sub nsw i32 %tmp_35_2, %tmp_36_2    ; <i32> [#uses=1]

ST_60: tmp_66 [1/1] 0.00ns
bb8.2:49  %tmp_66 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_37_2, i32 14, i32 31) ; <i18> [#uses=1]

ST_60: tmp_41_2 [1/1] 2.49ns
bb8.2:53  %tmp_41_2 = add nsw i32 %tmp_40_2, %tmp_39_2    ; <i32> [#uses=1]

ST_60: tmp_67 [1/1] 0.00ns
bb8.2:54  %tmp_67 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_41_2, i32 14, i32 31) ; <i18> [#uses=1]


 <State 61>: 4.88ns
ST_61: z1_2_2 [1/1] 0.00ns
bb8.2:10  %z1_2_2 = sext i18 %tmp_53 to i32               ; <i32> [#uses=2]

ST_61: z3_2_2 [1/1] 2.49ns
bb8.2:30  %z3_2_2 = sub nsw i32 %z1_1_2, %z1_2_2          ; <i32> [#uses=2]

ST_61: z3_1_2 [1/1] 2.49ns
bb8.2:31  %z3_1_2 = add nsw i32 %z1_1_2, %z1_2_2          ; <i32> [#uses=2]

ST_61: z3_7_2 [1/1] 0.00ns
bb8.2:45  %z3_7_2 = sext i18 %tmp_64 to i32               ; <i32> [#uses=2]

ST_61: tmp_43_2 [1/1] 2.49ns
bb8.2:56  %tmp_43_2 = sub nsw i32 %z3_0_2, %z3_7_2        ; <i32> [#uses=1]

ST_61: stg_707 [1/1] 2.39ns
bb8.2:57  store i32 %tmp_43_2, i32* %Y_addr_23, align 4

ST_61: tmp_44_2 [1/1] 2.49ns
bb8.2:58  %tmp_44_2 = add nsw i32 %z3_0_2, %z3_7_2        ; <i32> [#uses=1]

ST_61: stg_709 [1/1] 2.39ns
bb8.2:59  store i32 %tmp_44_2, i32* %Y_addr_27, align 4


 <State 62>: 4.88ns
ST_62: z3_6_2 [1/1] 0.00ns
bb8.2:55  %z3_6_2 = sext i18 %tmp_67 to i32               ; <i32> [#uses=2]

ST_62: tmp_45_2 [1/1] 2.49ns
bb8.2:60  %tmp_45_2 = sub nsw i32 %z3_1_2, %z3_6_2        ; <i32> [#uses=1]

ST_62: stg_712 [1/1] 2.39ns
bb8.2:61  store i32 %tmp_45_2, i32* %Y_addr_20, align 4

ST_62: tmp_46_2 [1/1] 2.49ns
bb8.2:62  %tmp_46_2 = add nsw i32 %z3_1_2, %z3_6_2        ; <i32> [#uses=1]

ST_62: stg_714 [1/1] 2.39ns
bb8.2:63  store i32 %tmp_46_2, i32* %Y_addr_22, align 4


 <State 63>: 4.88ns
ST_63: z3_5_2 [1/1] 0.00ns
bb8.2:50  %z3_5_2 = sext i18 %tmp_66 to i32               ; <i32> [#uses=2]

ST_63: tmp_47_2 [1/1] 2.49ns
bb8.2:64  %tmp_47_2 = sub nsw i32 %z3_2_2, %z3_5_2        ; <i32> [#uses=1]

ST_63: stg_717 [1/1] 2.39ns
bb8.2:65  store i32 %tmp_47_2, i32* %Y_addr_25, align 4

ST_63: tmp_48_2 [1/1] 2.49ns
bb8.2:66  %tmp_48_2 = add nsw i32 %z3_2_2, %z3_5_2        ; <i32> [#uses=1]

ST_63: stg_719 [1/1] 2.39ns
bb8.2:67  store i32 %tmp_48_2, i32* %Y_addr_21, align 4


 <State 64>: 4.88ns
ST_64: z3_4_2 [1/1] 0.00ns
bb8.2:40  %z3_4_2 = sext i18 %tmp_62 to i32               ; <i32> [#uses=2]

ST_64: tmp_49_2 [1/1] 2.49ns
bb8.2:68  %tmp_49_2 = sub nsw i32 %z3_3_2, %z3_4_2        ; <i32> [#uses=1]

ST_64: stg_722 [1/1] 2.39ns
bb8.2:69  store i32 %tmp_49_2, i32* %Y_addr_19, align 4

ST_64: tmp_50_2 [1/1] 2.49ns
bb8.2:70  %tmp_50_2 = add nsw i32 %z3_3_2, %z3_4_2        ; <i32> [#uses=1]

ST_64: stg_724 [1/1] 2.39ns
bb8.2:71  store i32 %tmp_50_2, i32* %Y_addr_24, align 4

ST_64: empty_24 [1/1] 0.00ns
bb8.2:72  %empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str19, i32 %tmp_52) nounwind ; <i32> [#uses=0]

ST_64: tmp_68 [1/1] 0.00ns
bb8.2:73  %tmp_68 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str19) nounwind ; <i32> [#uses=1]

ST_64: stg_727 [1/1] 1.21ns
bb8.2:74  br label %bb7.3


 <State 65>: 3.76ns
ST_65: column_8 [1/1] 0.00ns
bb7.3:0  %column_8 = phi i4 [ 0, %bb8.2 ], [ %column_9, %bb6.3 ] ; <i4> [#uses=3]

ST_65: empty_27 [1/1] 0.00ns
bb7.3:1  %empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_65: exitcond6 [1/1] 1.88ns
bb7.3:2  %exitcond6 = icmp eq i4 %column_8, -8           ; <i1> [#uses=1]

ST_65: column_9 [1/1] 0.85ns
bb7.3:3  %column_9 = add i4 %column_8, 1                 ; <i4> [#uses=1]

ST_65: stg_732 [1/1] 0.00ns
bb7.3:4  br i1 %exitcond6, label %bb8.3, label %bb6.3

ST_65: tmp_51_3 [1/1] 1.37ns
bb6.3:0  %tmp_51_3 = xor i4 %column_8, -8                ; <i4> [#uses=1]

ST_65: tmp_51_3_cast1 [1/1] 0.00ns
bb6.3:1  %tmp_51_3_cast1 = sext i4 %tmp_51_3 to i5       ; <i5> [#uses=1]

ST_65: tmp_51_3_cast [1/1] 0.00ns
bb6.3:2  %tmp_51_3_cast = zext i5 %tmp_51_3_cast1 to i32 ; <i32> [#uses=2]

ST_65: in_addr_3 [1/1] 0.00ns
bb6.3:3  %in_addr_3 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %tmp_51_3_cast ; <i16*> [#uses=1]

ST_65: in_load_3 [2/2] 2.39ns
bb6.3:4  %in_load_3 = load i16* %in_addr_3, align 2      ; <i16> [#uses=1]

ST_65: Y_load_27 [2/2] 2.39ns
bb8.3:20  %Y_load_27 = load i32* %Y_addr_33, align 4      ; <i32> [#uses=1]

ST_65: Y_load_28 [2/2] 2.39ns
bb8.3:24  %Y_load_28 = load i32* %Y_addr_34, align 4      ; <i32> [#uses=1]


 <State 66>: 4.78ns
ST_66: in_load_3 [1/2] 2.39ns
bb6.3:4  %in_load_3 = load i16* %in_addr_3, align 2      ; <i16> [#uses=1]

ST_66: tmp_52_3_cast [1/1] 0.00ns
bb6.3:5  %tmp_52_3_cast = zext i16 %in_load_3 to i19     ; <i19> [#uses=1]

ST_66: tmp_53_3 [1/1] 0.00ns
bb6.3:6  %tmp_53_3 = shl i19 %tmp_52_3_cast, 3           ; <i19> [#uses=1]

ST_66: tmp_53_3_cast [1/1] 0.00ns
bb6.3:7  %tmp_53_3_cast = sext i19 %tmp_53_3 to i32      ; <i32> [#uses=1]

ST_66: Y_addr_35 [1/1] 0.00ns
bb6.3:8  %Y_addr_35 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_51_3_cast ; <i32*> [#uses=1]

ST_66: stg_745 [1/1] 2.39ns
bb6.3:9  store i32 %tmp_53_3_cast, i32* %Y_addr_35, align 4

ST_66: stg_746 [1/1] 0.00ns
bb6.3:10  br label %bb7.3


 <State 67>: 2.39ns
ST_67: Y_load_27 [1/2] 2.39ns
bb8.3:20  %Y_load_27 = load i32* %Y_addr_33, align 4      ; <i32> [#uses=1]

ST_67: Y_load_28 [1/2] 2.39ns
bb8.3:24  %Y_load_28 = load i32* %Y_addr_34, align 4      ; <i32> [#uses=1]


 <State 68>: 6.36ns
ST_68: Y_load_37 [2/2] 2.39ns
bb8.3:4  %Y_load_37 = load i32* %Y_addr_29, align 4      ; <i32> [#uses=2]

ST_68: Y_load_38 [2/2] 2.39ns
bb8.3:5  %Y_load_38 = load i32* %Y_addr_30, align 4      ; <i32> [#uses=2]

ST_68: tmp_19_3 [3/3] 6.36ns
bb8.3:21  %tmp_19_3 = mul nsw i32 %Y_load_27, 23170       ; <i32> [#uses=1]

ST_68: tmp_21_3 [3/3] 6.36ns
bb8.3:25  %tmp_21_3 = mul nsw i32 %Y_load_28, 23170       ; <i32> [#uses=1]


 <State 69>: 6.36ns
ST_69: Y_load_37 [1/2] 2.39ns
bb8.3:4  %Y_load_37 = load i32* %Y_addr_29, align 4      ; <i32> [#uses=2]

ST_69: Y_load_38 [1/2] 2.39ns
bb8.3:5  %Y_load_38 = load i32* %Y_addr_30, align 4      ; <i32> [#uses=2]

ST_69: Y_load_25 [2/2] 2.39ns
bb8.3:16  %Y_load_25 = load i32* %Y_addr_31, align 4      ; <i32> [#uses=2]

ST_69: Y_load_26 [2/2] 2.39ns
bb8.3:17  %Y_load_26 = load i32* %Y_addr_32, align 4      ; <i32> [#uses=2]

ST_69: tmp_19_3 [2/3] 6.36ns
bb8.3:21  %tmp_19_3 = mul nsw i32 %Y_load_27, 23170       ; <i32> [#uses=1]

ST_69: tmp_21_3 [2/3] 6.36ns
bb8.3:25  %tmp_21_3 = mul nsw i32 %Y_load_28, 23170       ; <i32> [#uses=1]


 <State 70>: 6.36ns
ST_70: tmp_9_3 [3/3] 6.36ns
bb8.3:6  %tmp_9_3 = mul nsw i32 %Y_load_38, 8867         ; <i32> [#uses=1]

ST_70: tmp_10_3 [3/3] 6.36ns
bb8.3:7  %tmp_10_3 = mul nsw i32 %Y_load_37, 21407       ; <i32> [#uses=1]

ST_70: tmp_13_3 [3/3] 6.36ns
bb8.3:11  %tmp_13_3 = mul nsw i32 %Y_load_38, 21407       ; <i32> [#uses=1]

ST_70: tmp_14_3 [3/3] 6.36ns
bb8.3:12  %tmp_14_3 = mul nsw i32 %Y_load_37, 8867        ; <i32> [#uses=1]

ST_70: Y_load_25 [1/2] 2.39ns
bb8.3:16  %Y_load_25 = load i32* %Y_addr_31, align 4      ; <i32> [#uses=2]

ST_70: Y_load_26 [1/2] 2.39ns
bb8.3:17  %Y_load_26 = load i32* %Y_addr_32, align 4      ; <i32> [#uses=2]

ST_70: tmp_19_3 [1/3] 6.36ns
bb8.3:21  %tmp_19_3 = mul nsw i32 %Y_load_27, 23170       ; <i32> [#uses=1]

ST_70: tmp_74 [1/1] 0.00ns
bb8.3:22  %tmp_74 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_19_3, i32 14, i32 31) ; <i18> [#uses=1]

ST_70: tmp_21_3 [1/3] 6.36ns
bb8.3:25  %tmp_21_3 = mul nsw i32 %Y_load_28, 23170       ; <i32> [#uses=1]

ST_70: tmp_78 [1/1] 0.00ns
bb8.3:26  %tmp_78 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_21_3, i32 14, i32 31) ; <i18> [#uses=1]


 <State 71>: 6.36ns
ST_71: tmp_9_3 [2/3] 6.36ns
bb8.3:6  %tmp_9_3 = mul nsw i32 %Y_load_38, 8867         ; <i32> [#uses=1]

ST_71: tmp_10_3 [2/3] 6.36ns
bb8.3:7  %tmp_10_3 = mul nsw i32 %Y_load_37, 21407       ; <i32> [#uses=1]

ST_71: tmp_13_3 [2/3] 6.36ns
bb8.3:11  %tmp_13_3 = mul nsw i32 %Y_load_38, 21407       ; <i32> [#uses=1]

ST_71: tmp_14_3 [2/3] 6.36ns
bb8.3:12  %tmp_14_3 = mul nsw i32 %Y_load_37, 8867        ; <i32> [#uses=1]

ST_71: z1_4_3 [1/1] 2.49ns
bb8.3:18  %z1_4_3 = sub nsw i32 %Y_load_25, %Y_load_26    ; <i32> [#uses=2]

ST_71: z1_7_3 [1/1] 2.49ns
bb8.3:19  %z1_7_3 = add nsw i32 %Y_load_26, %Y_load_25    ; <i32> [#uses=2]

ST_71: z1_5_3 [1/1] 0.00ns
bb8.3:23  %z1_5_3 = sext i18 %tmp_74 to i32               ; <i32> [#uses=2]

ST_71: z1_6_3 [1/1] 0.00ns
bb8.3:27  %z1_6_3 = sext i18 %tmp_78 to i32               ; <i32> [#uses=2]

ST_71: y_assign_3 [1/1] 2.49ns
bb8.3:32  %y_assign_3 = sub nsw i32 %z1_4_3, %z1_6_3      ; <i32> [#uses=2]

ST_71: x_assign_3 [1/1] 2.49ns
bb8.3:33  %x_assign_3 = add nsw i32 %z1_4_3, %z1_6_3      ; <i32> [#uses=2]

ST_71: x_assign_8 [1/1] 2.49ns
bb8.3:34  %x_assign_8 = sub nsw i32 %z1_7_3, %z1_5_3      ; <i32> [#uses=2]

ST_71: y_assign_8 [1/1] 2.49ns
bb8.3:35  %y_assign_8 = add nsw i32 %z1_7_3, %z1_5_3      ; <i32> [#uses=2]


 <State 72>: 6.36ns
ST_72: tmp_9_3 [1/3] 6.36ns
bb8.3:6  %tmp_9_3 = mul nsw i32 %Y_load_38, 8867         ; <i32> [#uses=1]

ST_72: tmp_10_3 [1/3] 6.36ns
bb8.3:7  %tmp_10_3 = mul nsw i32 %Y_load_37, 21407       ; <i32> [#uses=1]

ST_72: tmp_13_3 [1/3] 6.36ns
bb8.3:11  %tmp_13_3 = mul nsw i32 %Y_load_38, 21407       ; <i32> [#uses=1]

ST_72: tmp_14_3 [1/3] 6.36ns
bb8.3:12  %tmp_14_3 = mul nsw i32 %Y_load_37, 8867        ; <i32> [#uses=1]

ST_72: tmp_27_3 [3/3] 6.36ns
bb8.3:36  %tmp_27_3 = mul nsw i32 %x_assign_3, 13623      ; <i32> [#uses=1]

ST_72: tmp_28_3 [3/3] 6.36ns
bb8.3:37  %tmp_28_3 = mul nsw i32 %y_assign_8, 9102       ; <i32> [#uses=1]

ST_72: tmp_31_3 [3/3] 6.36ns
bb8.3:41  %tmp_31_3 = mul nsw i32 %x_assign_3, 9102       ; <i32> [#uses=1]

ST_72: tmp_32_3 [3/3] 6.36ns
bb8.3:42  %tmp_32_3 = mul nsw i32 %y_assign_8, 13623      ; <i32> [#uses=1]

ST_72: tmp_35_3 [3/3] 6.36ns
bb8.3:46  %tmp_35_3 = mul nsw i32 %x_assign_8, 16069      ; <i32> [#uses=1]

ST_72: tmp_36_3 [3/3] 6.36ns
bb8.3:47  %tmp_36_3 = mul nsw i32 %y_assign_3, 3196       ; <i32> [#uses=1]

ST_72: tmp_39_3 [3/3] 6.36ns
bb8.3:51  %tmp_39_3 = mul nsw i32 %x_assign_8, 3196       ; <i32> [#uses=1]

ST_72: tmp_40_3 [3/3] 6.36ns
bb8.3:52  %tmp_40_3 = mul nsw i32 %y_assign_3, 16069      ; <i32> [#uses=1]


 <State 73>: 6.36ns
ST_73: Y_load_31 [2/2] 2.39ns
bb8.3:0  %Y_load_31 = load i32* %Y_addr_36, align 4      ; <i32> [#uses=2]

ST_73: Y_load_22 [2/2] 2.39ns
bb8.3:1  %Y_load_22 = load i32* %Y_addr_28, align 4      ; <i32> [#uses=2]

ST_73: tmp_11_3 [1/1] 2.49ns
bb8.3:8  %tmp_11_3 = sub nsw i32 %tmp_9_3, %tmp_10_3     ; <i32> [#uses=1]

ST_73: tmp_69 [1/1] 0.00ns
bb8.3:9  %tmp_69 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_11_3, i32 14, i32 31) ; <i18> [#uses=1]

ST_73: tmp_15_3 [1/1] 2.49ns
bb8.3:13  %tmp_15_3 = add nsw i32 %tmp_14_3, %tmp_13_3    ; <i32> [#uses=1]

ST_73: tmp_70 [1/1] 0.00ns
bb8.3:14  %tmp_70 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_15_3, i32 14, i32 31) ; <i18> [#uses=1]

ST_73: tmp_27_3 [2/3] 6.36ns
bb8.3:36  %tmp_27_3 = mul nsw i32 %x_assign_3, 13623      ; <i32> [#uses=1]

ST_73: tmp_28_3 [2/3] 6.36ns
bb8.3:37  %tmp_28_3 = mul nsw i32 %y_assign_8, 9102       ; <i32> [#uses=1]

ST_73: tmp_31_3 [2/3] 6.36ns
bb8.3:41  %tmp_31_3 = mul nsw i32 %x_assign_3, 9102       ; <i32> [#uses=1]

ST_73: tmp_32_3 [2/3] 6.36ns
bb8.3:42  %tmp_32_3 = mul nsw i32 %y_assign_8, 13623      ; <i32> [#uses=1]

ST_73: tmp_35_3 [2/3] 6.36ns
bb8.3:46  %tmp_35_3 = mul nsw i32 %x_assign_8, 16069      ; <i32> [#uses=1]

ST_73: tmp_36_3 [2/3] 6.36ns
bb8.3:47  %tmp_36_3 = mul nsw i32 %y_assign_3, 3196       ; <i32> [#uses=1]

ST_73: tmp_39_3 [2/3] 6.36ns
bb8.3:51  %tmp_39_3 = mul nsw i32 %x_assign_8, 3196       ; <i32> [#uses=1]

ST_73: tmp_40_3 [2/3] 6.36ns
bb8.3:52  %tmp_40_3 = mul nsw i32 %y_assign_3, 16069      ; <i32> [#uses=1]


 <State 74>: 6.36ns
ST_74: Y_load_31 [1/2] 2.39ns
bb8.3:0  %Y_load_31 = load i32* %Y_addr_36, align 4      ; <i32> [#uses=2]

ST_74: Y_load_22 [1/2] 2.39ns
bb8.3:1  %Y_load_22 = load i32* %Y_addr_28, align 4      ; <i32> [#uses=2]

ST_74: tmp_27_3 [1/3] 6.36ns
bb8.3:36  %tmp_27_3 = mul nsw i32 %x_assign_3, 13623      ; <i32> [#uses=1]

ST_74: tmp_28_3 [1/3] 6.36ns
bb8.3:37  %tmp_28_3 = mul nsw i32 %y_assign_8, 9102       ; <i32> [#uses=1]

ST_74: tmp_31_3 [1/3] 6.36ns
bb8.3:41  %tmp_31_3 = mul nsw i32 %x_assign_3, 9102       ; <i32> [#uses=1]

ST_74: tmp_32_3 [1/3] 6.36ns
bb8.3:42  %tmp_32_3 = mul nsw i32 %y_assign_8, 13623      ; <i32> [#uses=1]

ST_74: tmp_35_3 [1/3] 6.36ns
bb8.3:46  %tmp_35_3 = mul nsw i32 %x_assign_8, 16069      ; <i32> [#uses=1]

ST_74: tmp_36_3 [1/3] 6.36ns
bb8.3:47  %tmp_36_3 = mul nsw i32 %y_assign_3, 3196       ; <i32> [#uses=1]

ST_74: tmp_39_3 [1/3] 6.36ns
bb8.3:51  %tmp_39_3 = mul nsw i32 %x_assign_8, 3196       ; <i32> [#uses=1]

ST_74: tmp_40_3 [1/3] 6.36ns
bb8.3:52  %tmp_40_3 = mul nsw i32 %y_assign_3, 16069      ; <i32> [#uses=1]


 <State 75>: 4.98ns
ST_75: z1_1_3 [1/1] 2.49ns
bb8.3:2  %z1_1_3 = sub nsw i32 %Y_load_31, %Y_load_22    ; <i32> [#uses=2]

ST_75: z1_0_3 [1/1] 2.49ns
bb8.3:3  %z1_0_3 = add nsw i32 %Y_load_22, %Y_load_31    ; <i32> [#uses=2]

ST_75: z1_3_3 [1/1] 0.00ns
bb8.3:15  %z1_3_3 = sext i18 %tmp_70 to i32               ; <i32> [#uses=2]

ST_75: z3_3_3 [1/1] 2.49ns
bb8.3:28  %z3_3_3 = sub nsw i32 %z1_0_3, %z1_3_3          ; <i32> [#uses=2]

ST_75: z3_0_3 [1/1] 2.49ns
bb8.3:29  %z3_0_3 = add nsw i32 %z1_0_3, %z1_3_3          ; <i32> [#uses=2]

ST_75: tmp_29_3 [1/1] 2.49ns
bb8.3:38  %tmp_29_3 = sub nsw i32 %tmp_27_3, %tmp_28_3    ; <i32> [#uses=1]

ST_75: tmp_82 [1/1] 0.00ns
bb8.3:39  %tmp_82 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_29_3, i32 14, i32 31) ; <i18> [#uses=1]

ST_75: tmp_33_3 [1/1] 2.49ns
bb8.3:43  %tmp_33_3 = add nsw i32 %tmp_32_3, %tmp_31_3    ; <i32> [#uses=1]

ST_75: tmp_86 [1/1] 0.00ns
bb8.3:44  %tmp_86 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_33_3, i32 14, i32 31) ; <i18> [#uses=1]

ST_75: tmp_37_3 [1/1] 2.49ns
bb8.3:48  %tmp_37_3 = sub nsw i32 %tmp_35_3, %tmp_36_3    ; <i32> [#uses=1]

ST_75: tmp_97 [1/1] 0.00ns
bb8.3:49  %tmp_97 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_37_3, i32 14, i32 31) ; <i18> [#uses=1]

ST_75: tmp_41_3 [1/1] 2.49ns
bb8.3:53  %tmp_41_3 = add nsw i32 %tmp_40_3, %tmp_39_3    ; <i32> [#uses=1]

ST_75: tmp_99 [1/1] 0.00ns
bb8.3:54  %tmp_99 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_41_3, i32 14, i32 31) ; <i18> [#uses=1]


 <State 76>: 4.88ns
ST_76: z1_2_3 [1/1] 0.00ns
bb8.3:10  %z1_2_3 = sext i18 %tmp_69 to i32               ; <i32> [#uses=2]

ST_76: z3_2_3 [1/1] 2.49ns
bb8.3:30  %z3_2_3 = sub nsw i32 %z1_1_3, %z1_2_3          ; <i32> [#uses=2]

ST_76: z3_1_3 [1/1] 2.49ns
bb8.3:31  %z3_1_3 = add nsw i32 %z1_1_3, %z1_2_3          ; <i32> [#uses=2]

ST_76: z3_7_3 [1/1] 0.00ns
bb8.3:45  %z3_7_3 = sext i18 %tmp_86 to i32               ; <i32> [#uses=2]

ST_76: tmp_43_3 [1/1] 2.49ns
bb8.3:56  %tmp_43_3 = sub nsw i32 %z3_0_3, %z3_7_3        ; <i32> [#uses=1]

ST_76: stg_835 [1/1] 2.39ns
bb8.3:57  store i32 %tmp_43_3, i32* %Y_addr_32, align 4

ST_76: tmp_44_3 [1/1] 2.49ns
bb8.3:58  %tmp_44_3 = add nsw i32 %z3_0_3, %z3_7_3        ; <i32> [#uses=1]

ST_76: stg_837 [1/1] 2.39ns
bb8.3:59  store i32 %tmp_44_3, i32* %Y_addr_36, align 4


 <State 77>: 4.88ns
ST_77: z3_6_3 [1/1] 0.00ns
bb8.3:55  %z3_6_3 = sext i18 %tmp_99 to i32               ; <i32> [#uses=2]

ST_77: tmp_45_3 [1/1] 2.49ns
bb8.3:60  %tmp_45_3 = sub nsw i32 %z3_1_3, %z3_6_3        ; <i32> [#uses=1]

ST_77: stg_840 [1/1] 2.39ns
bb8.3:61  store i32 %tmp_45_3, i32* %Y_addr_29, align 4

ST_77: tmp_46_3 [1/1] 2.49ns
bb8.3:62  %tmp_46_3 = add nsw i32 %z3_1_3, %z3_6_3        ; <i32> [#uses=1]

ST_77: stg_842 [1/1] 2.39ns
bb8.3:63  store i32 %tmp_46_3, i32* %Y_addr_31, align 4


 <State 78>: 4.88ns
ST_78: z3_5_3 [1/1] 0.00ns
bb8.3:50  %z3_5_3 = sext i18 %tmp_97 to i32               ; <i32> [#uses=2]

ST_78: tmp_47_3 [1/1] 2.49ns
bb8.3:64  %tmp_47_3 = sub nsw i32 %z3_2_3, %z3_5_3        ; <i32> [#uses=1]

ST_78: stg_845 [1/1] 2.39ns
bb8.3:65  store i32 %tmp_47_3, i32* %Y_addr_34, align 4

ST_78: tmp_48_3 [1/1] 2.49ns
bb8.3:66  %tmp_48_3 = add nsw i32 %z3_2_3, %z3_5_3        ; <i32> [#uses=1]

ST_78: stg_847 [1/1] 2.39ns
bb8.3:67  store i32 %tmp_48_3, i32* %Y_addr_30, align 4


 <State 79>: 4.88ns
ST_79: z3_4_3 [1/1] 0.00ns
bb8.3:40  %z3_4_3 = sext i18 %tmp_82 to i32               ; <i32> [#uses=2]

ST_79: tmp_49_3 [1/1] 2.49ns
bb8.3:68  %tmp_49_3 = sub nsw i32 %z3_3_3, %z3_4_3        ; <i32> [#uses=1]

ST_79: stg_850 [1/1] 2.39ns
bb8.3:69  store i32 %tmp_49_3, i32* %Y_addr_28, align 4

ST_79: tmp_50_3 [1/1] 2.49ns
bb8.3:70  %tmp_50_3 = add nsw i32 %z3_3_3, %z3_4_3        ; <i32> [#uses=1]

ST_79: stg_852 [1/1] 2.39ns
bb8.3:71  store i32 %tmp_50_3, i32* %Y_addr_33, align 4

ST_79: empty_26 [1/1] 0.00ns
bb8.3:72  %empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str19, i32 %tmp_68) nounwind ; <i32> [#uses=0]

ST_79: tmp_101 [1/1] 0.00ns
bb8.3:73  %tmp_101 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str19) nounwind ; <i32> [#uses=1]

ST_79: stg_855 [1/1] 1.21ns
bb8.3:74  br label %bb7.4


 <State 80>: 2.39ns
ST_80: column_10 [1/1] 0.00ns
bb7.4:0  %column_10 = phi i4 [ 0, %bb8.3 ], [ %column_11, %bb6.4 ] ; <i4> [#uses=3]

ST_80: column_10_cast [1/1] 0.00ns
bb7.4:1  %column_10_cast = zext i4 %column_10 to i6      ; <i6> [#uses=1]

ST_80: empty_29 [1/1] 0.00ns
bb7.4:2  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_80: exitcond7 [1/1] 1.88ns
bb7.4:3  %exitcond7 = icmp eq i4 %column_10, -8          ; <i1> [#uses=1]

ST_80: column_11 [1/1] 0.85ns
bb7.4:4  %column_11 = add i4 %column_10, 1               ; <i4> [#uses=1]

ST_80: stg_861 [1/1] 0.00ns
bb7.4:5  br i1 %exitcond7, label %bb8.4, label %bb6.4

ST_80: tmp_51_2 [1/1] 0.00ns
bb6.4:0  %tmp_51_2 = or i6 %column_10_cast, -32          ; <i6> [#uses=1]

ST_80: tmp_51_4_cast [1/1] 0.00ns
bb6.4:1  %tmp_51_4_cast = zext i6 %tmp_51_2 to i32       ; <i32> [#uses=2]

ST_80: in_addr_4 [1/1] 0.00ns
bb6.4:2  %in_addr_4 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %tmp_51_4_cast ; <i16*> [#uses=1]

ST_80: in_load_4 [2/2] 2.39ns
bb6.4:3  %in_load_4 = load i16* %in_addr_4, align 2      ; <i16> [#uses=1]

ST_80: Y_load_34 [2/2] 2.39ns
bb8.4:20  %Y_load_34 = load i32* %Y_addr_42, align 4      ; <i32> [#uses=1]

ST_80: Y_load_35 [2/2] 2.39ns
bb8.4:24  %Y_load_35 = load i32* %Y_addr_43, align 4      ; <i32> [#uses=1]


 <State 81>: 4.78ns
ST_81: in_load_4 [1/2] 2.39ns
bb6.4:3  %in_load_4 = load i16* %in_addr_4, align 2      ; <i16> [#uses=1]

ST_81: tmp_52_4_cast [1/1] 0.00ns
bb6.4:4  %tmp_52_4_cast = zext i16 %in_load_4 to i19     ; <i19> [#uses=1]

ST_81: tmp_53_4 [1/1] 0.00ns
bb6.4:5  %tmp_53_4 = shl i19 %tmp_52_4_cast, 3           ; <i19> [#uses=1]

ST_81: tmp_53_4_cast [1/1] 0.00ns
bb6.4:6  %tmp_53_4_cast = sext i19 %tmp_53_4 to i32      ; <i32> [#uses=1]

ST_81: Y_addr_44 [1/1] 0.00ns
bb6.4:7  %Y_addr_44 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_51_4_cast ; <i32*> [#uses=1]

ST_81: stg_873 [1/1] 2.39ns
bb6.4:8  store i32 %tmp_53_4_cast, i32* %Y_addr_44, align 4

ST_81: stg_874 [1/1] 0.00ns
bb6.4:9  br label %bb7.4


 <State 82>: 2.39ns
ST_82: Y_load_34 [1/2] 2.39ns
bb8.4:20  %Y_load_34 = load i32* %Y_addr_42, align 4      ; <i32> [#uses=1]

ST_82: Y_load_35 [1/2] 2.39ns
bb8.4:24  %Y_load_35 = load i32* %Y_addr_43, align 4      ; <i32> [#uses=1]


 <State 83>: 6.36ns
ST_83: Y_load_45 [2/2] 2.39ns
bb8.4:4  %Y_load_45 = load i32* %Y_addr_38, align 4      ; <i32> [#uses=2]

ST_83: Y_load_51 [2/2] 2.39ns
bb8.4:5  %Y_load_51 = load i32* %Y_addr_39, align 4      ; <i32> [#uses=2]

ST_83: tmp_19_4 [3/3] 6.36ns
bb8.4:21  %tmp_19_4 = mul nsw i32 %Y_load_34, 23170       ; <i32> [#uses=1]

ST_83: tmp_21_4 [3/3] 6.36ns
bb8.4:25  %tmp_21_4 = mul nsw i32 %Y_load_35, 23170       ; <i32> [#uses=1]


 <State 84>: 6.36ns
ST_84: Y_load_45 [1/2] 2.39ns
bb8.4:4  %Y_load_45 = load i32* %Y_addr_38, align 4      ; <i32> [#uses=2]

ST_84: Y_load_51 [1/2] 2.39ns
bb8.4:5  %Y_load_51 = load i32* %Y_addr_39, align 4      ; <i32> [#uses=2]

ST_84: Y_load_32 [2/2] 2.39ns
bb8.4:16  %Y_load_32 = load i32* %Y_addr_40, align 4      ; <i32> [#uses=2]

ST_84: Y_load_33 [2/2] 2.39ns
bb8.4:17  %Y_load_33 = load i32* %Y_addr_41, align 4      ; <i32> [#uses=2]

ST_84: tmp_19_4 [2/3] 6.36ns
bb8.4:21  %tmp_19_4 = mul nsw i32 %Y_load_34, 23170       ; <i32> [#uses=1]

ST_84: tmp_21_4 [2/3] 6.36ns
bb8.4:25  %tmp_21_4 = mul nsw i32 %Y_load_35, 23170       ; <i32> [#uses=1]


 <State 85>: 6.36ns
ST_85: tmp_9_4 [3/3] 6.36ns
bb8.4:6  %tmp_9_4 = mul nsw i32 %Y_load_51, 8867         ; <i32> [#uses=1]

ST_85: tmp_10_4 [3/3] 6.36ns
bb8.4:7  %tmp_10_4 = mul nsw i32 %Y_load_45, 21407       ; <i32> [#uses=1]

ST_85: tmp_13_4 [3/3] 6.36ns
bb8.4:11  %tmp_13_4 = mul nsw i32 %Y_load_51, 21407       ; <i32> [#uses=1]

ST_85: tmp_14_4 [3/3] 6.36ns
bb8.4:12  %tmp_14_4 = mul nsw i32 %Y_load_45, 8867        ; <i32> [#uses=1]

ST_85: Y_load_32 [1/2] 2.39ns
bb8.4:16  %Y_load_32 = load i32* %Y_addr_40, align 4      ; <i32> [#uses=2]

ST_85: Y_load_33 [1/2] 2.39ns
bb8.4:17  %Y_load_33 = load i32* %Y_addr_41, align 4      ; <i32> [#uses=2]

ST_85: tmp_19_4 [1/3] 6.36ns
bb8.4:21  %tmp_19_4 = mul nsw i32 %Y_load_34, 23170       ; <i32> [#uses=1]

ST_85: tmp_107 [1/1] 0.00ns
bb8.4:22  %tmp_107 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_19_4, i32 14, i32 31) ; <i18> [#uses=1]

ST_85: tmp_21_4 [1/3] 6.36ns
bb8.4:25  %tmp_21_4 = mul nsw i32 %Y_load_35, 23170       ; <i32> [#uses=1]

ST_85: tmp_108 [1/1] 0.00ns
bb8.4:26  %tmp_108 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_21_4, i32 14, i32 31) ; <i18> [#uses=1]


 <State 86>: 6.36ns
ST_86: tmp_9_4 [2/3] 6.36ns
bb8.4:6  %tmp_9_4 = mul nsw i32 %Y_load_51, 8867         ; <i32> [#uses=1]

ST_86: tmp_10_4 [2/3] 6.36ns
bb8.4:7  %tmp_10_4 = mul nsw i32 %Y_load_45, 21407       ; <i32> [#uses=1]

ST_86: tmp_13_4 [2/3] 6.36ns
bb8.4:11  %tmp_13_4 = mul nsw i32 %Y_load_51, 21407       ; <i32> [#uses=1]

ST_86: tmp_14_4 [2/3] 6.36ns
bb8.4:12  %tmp_14_4 = mul nsw i32 %Y_load_45, 8867        ; <i32> [#uses=1]

ST_86: z1_4_4 [1/1] 2.49ns
bb8.4:18  %z1_4_4 = sub nsw i32 %Y_load_32, %Y_load_33    ; <i32> [#uses=2]

ST_86: z1_7_4 [1/1] 2.49ns
bb8.4:19  %z1_7_4 = add nsw i32 %Y_load_33, %Y_load_32    ; <i32> [#uses=2]

ST_86: z1_5_4 [1/1] 0.00ns
bb8.4:23  %z1_5_4 = sext i18 %tmp_107 to i32              ; <i32> [#uses=2]

ST_86: z1_6_4 [1/1] 0.00ns
bb8.4:27  %z1_6_4 = sext i18 %tmp_108 to i32              ; <i32> [#uses=2]

ST_86: y_assign_10 [1/1] 2.49ns
bb8.4:32  %y_assign_10 = sub nsw i32 %z1_4_4, %z1_6_4     ; <i32> [#uses=2]

ST_86: x_assign_10 [1/1] 2.49ns
bb8.4:33  %x_assign_10 = add nsw i32 %z1_4_4, %z1_6_4     ; <i32> [#uses=2]

ST_86: x_assign_11 [1/1] 2.49ns
bb8.4:34  %x_assign_11 = sub nsw i32 %z1_7_4, %z1_5_4     ; <i32> [#uses=2]

ST_86: y_assign_11 [1/1] 2.49ns
bb8.4:35  %y_assign_11 = add nsw i32 %z1_7_4, %z1_5_4     ; <i32> [#uses=2]


 <State 87>: 6.36ns
ST_87: tmp_9_4 [1/3] 6.36ns
bb8.4:6  %tmp_9_4 = mul nsw i32 %Y_load_51, 8867         ; <i32> [#uses=1]

ST_87: tmp_10_4 [1/3] 6.36ns
bb8.4:7  %tmp_10_4 = mul nsw i32 %Y_load_45, 21407       ; <i32> [#uses=1]

ST_87: tmp_13_4 [1/3] 6.36ns
bb8.4:11  %tmp_13_4 = mul nsw i32 %Y_load_51, 21407       ; <i32> [#uses=1]

ST_87: tmp_14_4 [1/3] 6.36ns
bb8.4:12  %tmp_14_4 = mul nsw i32 %Y_load_45, 8867        ; <i32> [#uses=1]

ST_87: tmp_27_4 [3/3] 6.36ns
bb8.4:36  %tmp_27_4 = mul nsw i32 %x_assign_10, 13623     ; <i32> [#uses=1]

ST_87: tmp_28_4 [3/3] 6.36ns
bb8.4:37  %tmp_28_4 = mul nsw i32 %y_assign_11, 9102      ; <i32> [#uses=1]

ST_87: tmp_31_4 [3/3] 6.36ns
bb8.4:41  %tmp_31_4 = mul nsw i32 %x_assign_10, 9102      ; <i32> [#uses=1]

ST_87: tmp_32_4 [3/3] 6.36ns
bb8.4:42  %tmp_32_4 = mul nsw i32 %y_assign_11, 13623     ; <i32> [#uses=1]

ST_87: tmp_35_4 [3/3] 6.36ns
bb8.4:46  %tmp_35_4 = mul nsw i32 %x_assign_11, 16069     ; <i32> [#uses=1]

ST_87: tmp_36_4 [3/3] 6.36ns
bb8.4:47  %tmp_36_4 = mul nsw i32 %y_assign_10, 3196      ; <i32> [#uses=1]

ST_87: tmp_39_4 [3/3] 6.36ns
bb8.4:51  %tmp_39_4 = mul nsw i32 %x_assign_11, 3196      ; <i32> [#uses=1]

ST_87: tmp_40_4 [3/3] 6.36ns
bb8.4:52  %tmp_40_4 = mul nsw i32 %y_assign_10, 16069     ; <i32> [#uses=1]


 <State 88>: 6.36ns
ST_88: Y_load_44 [2/2] 2.39ns
bb8.4:0  %Y_load_44 = load i32* %Y_addr_45, align 4      ; <i32> [#uses=2]

ST_88: Y_load_29 [2/2] 2.39ns
bb8.4:1  %Y_load_29 = load i32* %Y_addr_37, align 4      ; <i32> [#uses=2]

ST_88: tmp_11_4 [1/1] 2.49ns
bb8.4:8  %tmp_11_4 = sub nsw i32 %tmp_9_4, %tmp_10_4     ; <i32> [#uses=1]

ST_88: tmp_105 [1/1] 0.00ns
bb8.4:9  %tmp_105 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_11_4, i32 14, i32 31) ; <i18> [#uses=1]

ST_88: tmp_15_4 [1/1] 2.49ns
bb8.4:13  %tmp_15_4 = add nsw i32 %tmp_14_4, %tmp_13_4    ; <i32> [#uses=1]

ST_88: tmp_106 [1/1] 0.00ns
bb8.4:14  %tmp_106 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_15_4, i32 14, i32 31) ; <i18> [#uses=1]

ST_88: tmp_27_4 [2/3] 6.36ns
bb8.4:36  %tmp_27_4 = mul nsw i32 %x_assign_10, 13623     ; <i32> [#uses=1]

ST_88: tmp_28_4 [2/3] 6.36ns
bb8.4:37  %tmp_28_4 = mul nsw i32 %y_assign_11, 9102      ; <i32> [#uses=1]

ST_88: tmp_31_4 [2/3] 6.36ns
bb8.4:41  %tmp_31_4 = mul nsw i32 %x_assign_10, 9102      ; <i32> [#uses=1]

ST_88: tmp_32_4 [2/3] 6.36ns
bb8.4:42  %tmp_32_4 = mul nsw i32 %y_assign_11, 13623     ; <i32> [#uses=1]

ST_88: tmp_35_4 [2/3] 6.36ns
bb8.4:46  %tmp_35_4 = mul nsw i32 %x_assign_11, 16069     ; <i32> [#uses=1]

ST_88: tmp_36_4 [2/3] 6.36ns
bb8.4:47  %tmp_36_4 = mul nsw i32 %y_assign_10, 3196      ; <i32> [#uses=1]

ST_88: tmp_39_4 [2/3] 6.36ns
bb8.4:51  %tmp_39_4 = mul nsw i32 %x_assign_11, 3196      ; <i32> [#uses=1]

ST_88: tmp_40_4 [2/3] 6.36ns
bb8.4:52  %tmp_40_4 = mul nsw i32 %y_assign_10, 16069     ; <i32> [#uses=1]


 <State 89>: 6.36ns
ST_89: Y_load_44 [1/2] 2.39ns
bb8.4:0  %Y_load_44 = load i32* %Y_addr_45, align 4      ; <i32> [#uses=2]

ST_89: Y_load_29 [1/2] 2.39ns
bb8.4:1  %Y_load_29 = load i32* %Y_addr_37, align 4      ; <i32> [#uses=2]

ST_89: tmp_27_4 [1/3] 6.36ns
bb8.4:36  %tmp_27_4 = mul nsw i32 %x_assign_10, 13623     ; <i32> [#uses=1]

ST_89: tmp_28_4 [1/3] 6.36ns
bb8.4:37  %tmp_28_4 = mul nsw i32 %y_assign_11, 9102      ; <i32> [#uses=1]

ST_89: tmp_31_4 [1/3] 6.36ns
bb8.4:41  %tmp_31_4 = mul nsw i32 %x_assign_10, 9102      ; <i32> [#uses=1]

ST_89: tmp_32_4 [1/3] 6.36ns
bb8.4:42  %tmp_32_4 = mul nsw i32 %y_assign_11, 13623     ; <i32> [#uses=1]

ST_89: tmp_35_4 [1/3] 6.36ns
bb8.4:46  %tmp_35_4 = mul nsw i32 %x_assign_11, 16069     ; <i32> [#uses=1]

ST_89: tmp_36_4 [1/3] 6.36ns
bb8.4:47  %tmp_36_4 = mul nsw i32 %y_assign_10, 3196      ; <i32> [#uses=1]

ST_89: tmp_39_4 [1/3] 6.36ns
bb8.4:51  %tmp_39_4 = mul nsw i32 %x_assign_11, 3196      ; <i32> [#uses=1]

ST_89: tmp_40_4 [1/3] 6.36ns
bb8.4:52  %tmp_40_4 = mul nsw i32 %y_assign_10, 16069     ; <i32> [#uses=1]


 <State 90>: 4.98ns
ST_90: z1_1_4 [1/1] 2.49ns
bb8.4:2  %z1_1_4 = sub nsw i32 %Y_load_44, %Y_load_29    ; <i32> [#uses=2]

ST_90: z1_0_4 [1/1] 2.49ns
bb8.4:3  %z1_0_4 = add nsw i32 %Y_load_29, %Y_load_44    ; <i32> [#uses=2]

ST_90: z1_3_4 [1/1] 0.00ns
bb8.4:15  %z1_3_4 = sext i18 %tmp_106 to i32              ; <i32> [#uses=2]

ST_90: z3_3_4 [1/1] 2.49ns
bb8.4:28  %z3_3_4 = sub nsw i32 %z1_0_4, %z1_3_4          ; <i32> [#uses=2]

ST_90: z3_0_4 [1/1] 2.49ns
bb8.4:29  %z3_0_4 = add nsw i32 %z1_0_4, %z1_3_4          ; <i32> [#uses=2]

ST_90: tmp_29_4 [1/1] 2.49ns
bb8.4:38  %tmp_29_4 = sub nsw i32 %tmp_27_4, %tmp_28_4    ; <i32> [#uses=1]

ST_90: tmp_109 [1/1] 0.00ns
bb8.4:39  %tmp_109 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_29_4, i32 14, i32 31) ; <i18> [#uses=1]

ST_90: tmp_33_4 [1/1] 2.49ns
bb8.4:43  %tmp_33_4 = add nsw i32 %tmp_32_4, %tmp_31_4    ; <i32> [#uses=1]

ST_90: tmp_110 [1/1] 0.00ns
bb8.4:44  %tmp_110 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_33_4, i32 14, i32 31) ; <i18> [#uses=1]

ST_90: tmp_37_4 [1/1] 2.49ns
bb8.4:48  %tmp_37_4 = sub nsw i32 %tmp_35_4, %tmp_36_4    ; <i32> [#uses=1]

ST_90: tmp_111 [1/1] 0.00ns
bb8.4:49  %tmp_111 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_37_4, i32 14, i32 31) ; <i18> [#uses=1]

ST_90: tmp_41_4 [1/1] 2.49ns
bb8.4:53  %tmp_41_4 = add nsw i32 %tmp_40_4, %tmp_39_4    ; <i32> [#uses=1]

ST_90: tmp_112 [1/1] 0.00ns
bb8.4:54  %tmp_112 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_41_4, i32 14, i32 31) ; <i18> [#uses=1]


 <State 91>: 4.88ns
ST_91: z1_2_4 [1/1] 0.00ns
bb8.4:10  %z1_2_4 = sext i18 %tmp_105 to i32              ; <i32> [#uses=2]

ST_91: z3_2_4 [1/1] 2.49ns
bb8.4:30  %z3_2_4 = sub nsw i32 %z1_1_4, %z1_2_4          ; <i32> [#uses=2]

ST_91: z3_1_4 [1/1] 2.49ns
bb8.4:31  %z3_1_4 = add nsw i32 %z1_1_4, %z1_2_4          ; <i32> [#uses=2]

ST_91: z3_7_4 [1/1] 0.00ns
bb8.4:45  %z3_7_4 = sext i18 %tmp_110 to i32              ; <i32> [#uses=2]

ST_91: tmp_43_4 [1/1] 2.49ns
bb8.4:56  %tmp_43_4 = sub nsw i32 %z3_0_4, %z3_7_4        ; <i32> [#uses=1]

ST_91: stg_963 [1/1] 2.39ns
bb8.4:57  store i32 %tmp_43_4, i32* %Y_addr_41, align 4

ST_91: tmp_44_4 [1/1] 2.49ns
bb8.4:58  %tmp_44_4 = add nsw i32 %z3_0_4, %z3_7_4        ; <i32> [#uses=1]

ST_91: stg_965 [1/1] 2.39ns
bb8.4:59  store i32 %tmp_44_4, i32* %Y_addr_45, align 4


 <State 92>: 4.88ns
ST_92: z3_6_4 [1/1] 0.00ns
bb8.4:55  %z3_6_4 = sext i18 %tmp_112 to i32              ; <i32> [#uses=2]

ST_92: tmp_45_4 [1/1] 2.49ns
bb8.4:60  %tmp_45_4 = sub nsw i32 %z3_1_4, %z3_6_4        ; <i32> [#uses=1]

ST_92: stg_968 [1/1] 2.39ns
bb8.4:61  store i32 %tmp_45_4, i32* %Y_addr_38, align 4

ST_92: tmp_46_4 [1/1] 2.49ns
bb8.4:62  %tmp_46_4 = add nsw i32 %z3_1_4, %z3_6_4        ; <i32> [#uses=1]

ST_92: stg_970 [1/1] 2.39ns
bb8.4:63  store i32 %tmp_46_4, i32* %Y_addr_40, align 4


 <State 93>: 4.88ns
ST_93: z3_5_4 [1/1] 0.00ns
bb8.4:50  %z3_5_4 = sext i18 %tmp_111 to i32              ; <i32> [#uses=2]

ST_93: tmp_47_4 [1/1] 2.49ns
bb8.4:64  %tmp_47_4 = sub nsw i32 %z3_2_4, %z3_5_4        ; <i32> [#uses=1]

ST_93: stg_973 [1/1] 2.39ns
bb8.4:65  store i32 %tmp_47_4, i32* %Y_addr_43, align 4

ST_93: tmp_48_4 [1/1] 2.49ns
bb8.4:66  %tmp_48_4 = add nsw i32 %z3_2_4, %z3_5_4        ; <i32> [#uses=1]

ST_93: stg_975 [1/1] 2.39ns
bb8.4:67  store i32 %tmp_48_4, i32* %Y_addr_39, align 4


 <State 94>: 4.88ns
ST_94: z3_4_4 [1/1] 0.00ns
bb8.4:40  %z3_4_4 = sext i18 %tmp_109 to i32              ; <i32> [#uses=2]

ST_94: tmp_49_4 [1/1] 2.49ns
bb8.4:68  %tmp_49_4 = sub nsw i32 %z3_3_4, %z3_4_4        ; <i32> [#uses=1]

ST_94: stg_978 [1/1] 2.39ns
bb8.4:69  store i32 %tmp_49_4, i32* %Y_addr_37, align 4

ST_94: tmp_50_4 [1/1] 2.49ns
bb8.4:70  %tmp_50_4 = add nsw i32 %z3_3_4, %z3_4_4        ; <i32> [#uses=1]

ST_94: stg_980 [1/1] 2.39ns
bb8.4:71  store i32 %tmp_50_4, i32* %Y_addr_42, align 4

ST_94: empty_28 [1/1] 0.00ns
bb8.4:72  %empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str19, i32 %tmp_101) nounwind ; <i32> [#uses=0]

ST_94: tmp_113 [1/1] 0.00ns
bb8.4:73  %tmp_113 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str19) nounwind ; <i32> [#uses=1]

ST_94: stg_983 [1/1] 1.21ns
bb8.4:74  br label %bb7.5


 <State 95>: 4.16ns
ST_95: column_12 [1/1] 0.00ns
bb7.5:0  %column_12 = phi i4 [ 0, %bb8.4 ], [ %column_13, %bb6.5 ] ; <i4> [#uses=3]

ST_95: column_12_cast [1/1] 0.00ns
bb7.5:1  %column_12_cast = zext i4 %column_12 to i6      ; <i6> [#uses=1]

ST_95: empty_31 [1/1] 0.00ns
bb7.5:2  %empty_31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_95: exitcond8 [1/1] 1.88ns
bb7.5:3  %exitcond8 = icmp eq i4 %column_12, -8          ; <i1> [#uses=1]

ST_95: column_13 [1/1] 0.85ns
bb7.5:4  %column_13 = add i4 %column_12, 1               ; <i4> [#uses=1]

ST_95: stg_989 [1/1] 0.00ns
bb7.5:5  br i1 %exitcond8, label %bb8.5, label %bb6.5

ST_95: tmp_51_5 [1/1] 1.77ns
bb6.5:0  %tmp_51_5 = add i6 %column_12_cast, -24         ; <i6> [#uses=1]

ST_95: tmp_51_5_cast [1/1] 0.00ns
bb6.5:1  %tmp_51_5_cast = zext i6 %tmp_51_5 to i32       ; <i32> [#uses=2]

ST_95: in_addr_5 [1/1] 0.00ns
bb6.5:2  %in_addr_5 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %tmp_51_5_cast ; <i16*> [#uses=1]

ST_95: in_load_5 [2/2] 2.39ns
bb6.5:3  %in_load_5 = load i16* %in_addr_5, align 2      ; <i16> [#uses=1]

ST_95: Y_load_41 [2/2] 2.39ns
bb8.5:20  %Y_load_41 = load i32* %Y_addr_51, align 4      ; <i32> [#uses=1]

ST_95: Y_load_42 [2/2] 2.39ns
bb8.5:24  %Y_load_42 = load i32* %Y_addr_52, align 4      ; <i32> [#uses=1]


 <State 96>: 4.78ns
ST_96: in_load_5 [1/2] 2.39ns
bb6.5:3  %in_load_5 = load i16* %in_addr_5, align 2      ; <i16> [#uses=1]

ST_96: tmp_52_5_cast [1/1] 0.00ns
bb6.5:4  %tmp_52_5_cast = zext i16 %in_load_5 to i19     ; <i19> [#uses=1]

ST_96: tmp_53_5 [1/1] 0.00ns
bb6.5:5  %tmp_53_5 = shl i19 %tmp_52_5_cast, 3           ; <i19> [#uses=1]

ST_96: tmp_53_5_cast [1/1] 0.00ns
bb6.5:6  %tmp_53_5_cast = sext i19 %tmp_53_5 to i32      ; <i32> [#uses=1]

ST_96: Y_addr_53 [1/1] 0.00ns
bb6.5:7  %Y_addr_53 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_51_5_cast ; <i32*> [#uses=1]

ST_96: stg_1001 [1/1] 2.39ns
bb6.5:8  store i32 %tmp_53_5_cast, i32* %Y_addr_53, align 4

ST_96: stg_1002 [1/1] 0.00ns
bb6.5:9  br label %bb7.5


 <State 97>: 2.39ns
ST_97: Y_load_41 [1/2] 2.39ns
bb8.5:20  %Y_load_41 = load i32* %Y_addr_51, align 4      ; <i32> [#uses=1]

ST_97: Y_load_42 [1/2] 2.39ns
bb8.5:24  %Y_load_42 = load i32* %Y_addr_52, align 4      ; <i32> [#uses=1]


 <State 98>: 6.36ns
ST_98: Y_load_57 [2/2] 2.39ns
bb8.5:4  %Y_load_57 = load i32* %Y_addr_47, align 4      ; <i32> [#uses=2]

ST_98: Y_load_58 [2/2] 2.39ns
bb8.5:5  %Y_load_58 = load i32* %Y_addr_48, align 4      ; <i32> [#uses=2]

ST_98: tmp_19_5 [3/3] 6.36ns
bb8.5:21  %tmp_19_5 = mul nsw i32 %Y_load_41, 23170       ; <i32> [#uses=1]

ST_98: tmp_21_5 [3/3] 6.36ns
bb8.5:25  %tmp_21_5 = mul nsw i32 %Y_load_42, 23170       ; <i32> [#uses=1]


 <State 99>: 6.36ns
ST_99: Y_load_57 [1/2] 2.39ns
bb8.5:4  %Y_load_57 = load i32* %Y_addr_47, align 4      ; <i32> [#uses=2]

ST_99: Y_load_58 [1/2] 2.39ns
bb8.5:5  %Y_load_58 = load i32* %Y_addr_48, align 4      ; <i32> [#uses=2]

ST_99: Y_load_39 [2/2] 2.39ns
bb8.5:16  %Y_load_39 = load i32* %Y_addr_49, align 4      ; <i32> [#uses=2]

ST_99: Y_load_40 [2/2] 2.39ns
bb8.5:17  %Y_load_40 = load i32* %Y_addr_50, align 4      ; <i32> [#uses=2]

ST_99: tmp_19_5 [2/3] 6.36ns
bb8.5:21  %tmp_19_5 = mul nsw i32 %Y_load_41, 23170       ; <i32> [#uses=1]

ST_99: tmp_21_5 [2/3] 6.36ns
bb8.5:25  %tmp_21_5 = mul nsw i32 %Y_load_42, 23170       ; <i32> [#uses=1]


 <State 100>: 6.36ns
ST_100: tmp_9_5 [3/3] 6.36ns
bb8.5:6  %tmp_9_5 = mul nsw i32 %Y_load_58, 8867         ; <i32> [#uses=1]

ST_100: tmp_10_5 [3/3] 6.36ns
bb8.5:7  %tmp_10_5 = mul nsw i32 %Y_load_57, 21407       ; <i32> [#uses=1]

ST_100: tmp_13_5 [3/3] 6.36ns
bb8.5:11  %tmp_13_5 = mul nsw i32 %Y_load_58, 21407       ; <i32> [#uses=1]

ST_100: tmp_14_5 [3/3] 6.36ns
bb8.5:12  %tmp_14_5 = mul nsw i32 %Y_load_57, 8867        ; <i32> [#uses=1]

ST_100: Y_load_39 [1/2] 2.39ns
bb8.5:16  %Y_load_39 = load i32* %Y_addr_49, align 4      ; <i32> [#uses=2]

ST_100: Y_load_40 [1/2] 2.39ns
bb8.5:17  %Y_load_40 = load i32* %Y_addr_50, align 4      ; <i32> [#uses=2]

ST_100: tmp_19_5 [1/3] 6.36ns
bb8.5:21  %tmp_19_5 = mul nsw i32 %Y_load_41, 23170       ; <i32> [#uses=1]

ST_100: tmp_116 [1/1] 0.00ns
bb8.5:22  %tmp_116 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_19_5, i32 14, i32 31) ; <i18> [#uses=1]

ST_100: tmp_21_5 [1/3] 6.36ns
bb8.5:25  %tmp_21_5 = mul nsw i32 %Y_load_42, 23170       ; <i32> [#uses=1]

ST_100: tmp_117 [1/1] 0.00ns
bb8.5:26  %tmp_117 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_21_5, i32 14, i32 31) ; <i18> [#uses=1]


 <State 101>: 6.36ns
ST_101: tmp_9_5 [2/3] 6.36ns
bb8.5:6  %tmp_9_5 = mul nsw i32 %Y_load_58, 8867         ; <i32> [#uses=1]

ST_101: tmp_10_5 [2/3] 6.36ns
bb8.5:7  %tmp_10_5 = mul nsw i32 %Y_load_57, 21407       ; <i32> [#uses=1]

ST_101: tmp_13_5 [2/3] 6.36ns
bb8.5:11  %tmp_13_5 = mul nsw i32 %Y_load_58, 21407       ; <i32> [#uses=1]

ST_101: tmp_14_5 [2/3] 6.36ns
bb8.5:12  %tmp_14_5 = mul nsw i32 %Y_load_57, 8867        ; <i32> [#uses=1]

ST_101: z1_4_5 [1/1] 2.49ns
bb8.5:18  %z1_4_5 = sub nsw i32 %Y_load_39, %Y_load_40    ; <i32> [#uses=2]

ST_101: z1_7_5 [1/1] 2.49ns
bb8.5:19  %z1_7_5 = add nsw i32 %Y_load_40, %Y_load_39    ; <i32> [#uses=2]

ST_101: z1_5_5 [1/1] 0.00ns
bb8.5:23  %z1_5_5 = sext i18 %tmp_116 to i32              ; <i32> [#uses=2]

ST_101: z1_6_5 [1/1] 0.00ns
bb8.5:27  %z1_6_5 = sext i18 %tmp_117 to i32              ; <i32> [#uses=2]

ST_101: y_assign_12 [1/1] 2.49ns
bb8.5:32  %y_assign_12 = sub nsw i32 %z1_4_5, %z1_6_5     ; <i32> [#uses=2]

ST_101: x_assign_12 [1/1] 2.49ns
bb8.5:33  %x_assign_12 = add nsw i32 %z1_4_5, %z1_6_5     ; <i32> [#uses=2]

ST_101: x_assign_13 [1/1] 2.49ns
bb8.5:34  %x_assign_13 = sub nsw i32 %z1_7_5, %z1_5_5     ; <i32> [#uses=2]

ST_101: y_assign_13 [1/1] 2.49ns
bb8.5:35  %y_assign_13 = add nsw i32 %z1_7_5, %z1_5_5     ; <i32> [#uses=2]


 <State 102>: 6.36ns
ST_102: tmp_9_5 [1/3] 6.36ns
bb8.5:6  %tmp_9_5 = mul nsw i32 %Y_load_58, 8867         ; <i32> [#uses=1]

ST_102: tmp_10_5 [1/3] 6.36ns
bb8.5:7  %tmp_10_5 = mul nsw i32 %Y_load_57, 21407       ; <i32> [#uses=1]

ST_102: tmp_13_5 [1/3] 6.36ns
bb8.5:11  %tmp_13_5 = mul nsw i32 %Y_load_58, 21407       ; <i32> [#uses=1]

ST_102: tmp_14_5 [1/3] 6.36ns
bb8.5:12  %tmp_14_5 = mul nsw i32 %Y_load_57, 8867        ; <i32> [#uses=1]

ST_102: tmp_27_5 [3/3] 6.36ns
bb8.5:36  %tmp_27_5 = mul nsw i32 %x_assign_12, 13623     ; <i32> [#uses=1]

ST_102: tmp_28_5 [3/3] 6.36ns
bb8.5:37  %tmp_28_5 = mul nsw i32 %y_assign_13, 9102      ; <i32> [#uses=1]

ST_102: tmp_31_5 [3/3] 6.36ns
bb8.5:41  %tmp_31_5 = mul nsw i32 %x_assign_12, 9102      ; <i32> [#uses=1]

ST_102: tmp_32_5 [3/3] 6.36ns
bb8.5:42  %tmp_32_5 = mul nsw i32 %y_assign_13, 13623     ; <i32> [#uses=1]

ST_102: tmp_35_5 [3/3] 6.36ns
bb8.5:46  %tmp_35_5 = mul nsw i32 %x_assign_13, 16069     ; <i32> [#uses=1]

ST_102: tmp_36_5 [3/3] 6.36ns
bb8.5:47  %tmp_36_5 = mul nsw i32 %y_assign_12, 3196      ; <i32> [#uses=1]

ST_102: tmp_39_5 [3/3] 6.36ns
bb8.5:51  %tmp_39_5 = mul nsw i32 %x_assign_13, 3196      ; <i32> [#uses=1]

ST_102: tmp_40_5 [3/3] 6.36ns
bb8.5:52  %tmp_40_5 = mul nsw i32 %y_assign_12, 16069     ; <i32> [#uses=1]


 <State 103>: 6.36ns
ST_103: Y_load_52 [2/2] 2.39ns
bb8.5:0  %Y_load_52 = load i32* %Y_addr_54, align 4      ; <i32> [#uses=2]

ST_103: Y_load_36 [2/2] 2.39ns
bb8.5:1  %Y_load_36 = load i32* %Y_addr_46, align 4      ; <i32> [#uses=2]

ST_103: tmp_11_5 [1/1] 2.49ns
bb8.5:8  %tmp_11_5 = sub nsw i32 %tmp_9_5, %tmp_10_5     ; <i32> [#uses=1]

ST_103: tmp_114 [1/1] 0.00ns
bb8.5:9  %tmp_114 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_11_5, i32 14, i32 31) ; <i18> [#uses=1]

ST_103: tmp_15_5 [1/1] 2.49ns
bb8.5:13  %tmp_15_5 = add nsw i32 %tmp_14_5, %tmp_13_5    ; <i32> [#uses=1]

ST_103: tmp_115 [1/1] 0.00ns
bb8.5:14  %tmp_115 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_15_5, i32 14, i32 31) ; <i18> [#uses=1]

ST_103: tmp_27_5 [2/3] 6.36ns
bb8.5:36  %tmp_27_5 = mul nsw i32 %x_assign_12, 13623     ; <i32> [#uses=1]

ST_103: tmp_28_5 [2/3] 6.36ns
bb8.5:37  %tmp_28_5 = mul nsw i32 %y_assign_13, 9102      ; <i32> [#uses=1]

ST_103: tmp_31_5 [2/3] 6.36ns
bb8.5:41  %tmp_31_5 = mul nsw i32 %x_assign_12, 9102      ; <i32> [#uses=1]

ST_103: tmp_32_5 [2/3] 6.36ns
bb8.5:42  %tmp_32_5 = mul nsw i32 %y_assign_13, 13623     ; <i32> [#uses=1]

ST_103: tmp_35_5 [2/3] 6.36ns
bb8.5:46  %tmp_35_5 = mul nsw i32 %x_assign_13, 16069     ; <i32> [#uses=1]

ST_103: tmp_36_5 [2/3] 6.36ns
bb8.5:47  %tmp_36_5 = mul nsw i32 %y_assign_12, 3196      ; <i32> [#uses=1]

ST_103: tmp_39_5 [2/3] 6.36ns
bb8.5:51  %tmp_39_5 = mul nsw i32 %x_assign_13, 3196      ; <i32> [#uses=1]

ST_103: tmp_40_5 [2/3] 6.36ns
bb8.5:52  %tmp_40_5 = mul nsw i32 %y_assign_12, 16069     ; <i32> [#uses=1]


 <State 104>: 6.36ns
ST_104: Y_load_52 [1/2] 2.39ns
bb8.5:0  %Y_load_52 = load i32* %Y_addr_54, align 4      ; <i32> [#uses=2]

ST_104: Y_load_36 [1/2] 2.39ns
bb8.5:1  %Y_load_36 = load i32* %Y_addr_46, align 4      ; <i32> [#uses=2]

ST_104: tmp_27_5 [1/3] 6.36ns
bb8.5:36  %tmp_27_5 = mul nsw i32 %x_assign_12, 13623     ; <i32> [#uses=1]

ST_104: tmp_28_5 [1/3] 6.36ns
bb8.5:37  %tmp_28_5 = mul nsw i32 %y_assign_13, 9102      ; <i32> [#uses=1]

ST_104: tmp_31_5 [1/3] 6.36ns
bb8.5:41  %tmp_31_5 = mul nsw i32 %x_assign_12, 9102      ; <i32> [#uses=1]

ST_104: tmp_32_5 [1/3] 6.36ns
bb8.5:42  %tmp_32_5 = mul nsw i32 %y_assign_13, 13623     ; <i32> [#uses=1]

ST_104: tmp_35_5 [1/3] 6.36ns
bb8.5:46  %tmp_35_5 = mul nsw i32 %x_assign_13, 16069     ; <i32> [#uses=1]

ST_104: tmp_36_5 [1/3] 6.36ns
bb8.5:47  %tmp_36_5 = mul nsw i32 %y_assign_12, 3196      ; <i32> [#uses=1]

ST_104: tmp_39_5 [1/3] 6.36ns
bb8.5:51  %tmp_39_5 = mul nsw i32 %x_assign_13, 3196      ; <i32> [#uses=1]

ST_104: tmp_40_5 [1/3] 6.36ns
bb8.5:52  %tmp_40_5 = mul nsw i32 %y_assign_12, 16069     ; <i32> [#uses=1]


 <State 105>: 4.98ns
ST_105: z1_1_5 [1/1] 2.49ns
bb8.5:2  %z1_1_5 = sub nsw i32 %Y_load_52, %Y_load_36    ; <i32> [#uses=2]

ST_105: z1_0_5 [1/1] 2.49ns
bb8.5:3  %z1_0_5 = add nsw i32 %Y_load_36, %Y_load_52    ; <i32> [#uses=2]

ST_105: z1_3_5 [1/1] 0.00ns
bb8.5:15  %z1_3_5 = sext i18 %tmp_115 to i32              ; <i32> [#uses=2]

ST_105: z3_3_5 [1/1] 2.49ns
bb8.5:28  %z3_3_5 = sub nsw i32 %z1_0_5, %z1_3_5          ; <i32> [#uses=2]

ST_105: z3_0_5 [1/1] 2.49ns
bb8.5:29  %z3_0_5 = add nsw i32 %z1_0_5, %z1_3_5          ; <i32> [#uses=2]

ST_105: tmp_29_5 [1/1] 2.49ns
bb8.5:38  %tmp_29_5 = sub nsw i32 %tmp_27_5, %tmp_28_5    ; <i32> [#uses=1]

ST_105: tmp_118 [1/1] 0.00ns
bb8.5:39  %tmp_118 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_29_5, i32 14, i32 31) ; <i18> [#uses=1]

ST_105: tmp_33_5 [1/1] 2.49ns
bb8.5:43  %tmp_33_5 = add nsw i32 %tmp_32_5, %tmp_31_5    ; <i32> [#uses=1]

ST_105: tmp_119 [1/1] 0.00ns
bb8.5:44  %tmp_119 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_33_5, i32 14, i32 31) ; <i18> [#uses=1]

ST_105: tmp_37_5 [1/1] 2.49ns
bb8.5:48  %tmp_37_5 = sub nsw i32 %tmp_35_5, %tmp_36_5    ; <i32> [#uses=1]

ST_105: tmp_120 [1/1] 0.00ns
bb8.5:49  %tmp_120 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_37_5, i32 14, i32 31) ; <i18> [#uses=1]

ST_105: tmp_41_5 [1/1] 2.49ns
bb8.5:53  %tmp_41_5 = add nsw i32 %tmp_40_5, %tmp_39_5    ; <i32> [#uses=1]

ST_105: tmp_121 [1/1] 0.00ns
bb8.5:54  %tmp_121 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_41_5, i32 14, i32 31) ; <i18> [#uses=1]


 <State 106>: 4.88ns
ST_106: z1_2_5 [1/1] 0.00ns
bb8.5:10  %z1_2_5 = sext i18 %tmp_114 to i32              ; <i32> [#uses=2]

ST_106: z3_2_5 [1/1] 2.49ns
bb8.5:30  %z3_2_5 = sub nsw i32 %z1_1_5, %z1_2_5          ; <i32> [#uses=2]

ST_106: z3_1_5 [1/1] 2.49ns
bb8.5:31  %z3_1_5 = add nsw i32 %z1_1_5, %z1_2_5          ; <i32> [#uses=2]

ST_106: z3_7_5 [1/1] 0.00ns
bb8.5:45  %z3_7_5 = sext i18 %tmp_119 to i32              ; <i32> [#uses=2]

ST_106: tmp_43_5 [1/1] 2.49ns
bb8.5:56  %tmp_43_5 = sub nsw i32 %z3_0_5, %z3_7_5        ; <i32> [#uses=1]

ST_106: stg_1091 [1/1] 2.39ns
bb8.5:57  store i32 %tmp_43_5, i32* %Y_addr_50, align 4

ST_106: tmp_44_5 [1/1] 2.49ns
bb8.5:58  %tmp_44_5 = add nsw i32 %z3_0_5, %z3_7_5        ; <i32> [#uses=1]

ST_106: stg_1093 [1/1] 2.39ns
bb8.5:59  store i32 %tmp_44_5, i32* %Y_addr_54, align 4


 <State 107>: 4.88ns
ST_107: z3_6_5 [1/1] 0.00ns
bb8.5:55  %z3_6_5 = sext i18 %tmp_121 to i32              ; <i32> [#uses=2]

ST_107: tmp_45_5 [1/1] 2.49ns
bb8.5:60  %tmp_45_5 = sub nsw i32 %z3_1_5, %z3_6_5        ; <i32> [#uses=1]

ST_107: stg_1096 [1/1] 2.39ns
bb8.5:61  store i32 %tmp_45_5, i32* %Y_addr_47, align 4

ST_107: tmp_46_5 [1/1] 2.49ns
bb8.5:62  %tmp_46_5 = add nsw i32 %z3_1_5, %z3_6_5        ; <i32> [#uses=1]

ST_107: stg_1098 [1/1] 2.39ns
bb8.5:63  store i32 %tmp_46_5, i32* %Y_addr_49, align 4


 <State 108>: 4.88ns
ST_108: z3_5_5 [1/1] 0.00ns
bb8.5:50  %z3_5_5 = sext i18 %tmp_120 to i32              ; <i32> [#uses=2]

ST_108: tmp_47_5 [1/1] 2.49ns
bb8.5:64  %tmp_47_5 = sub nsw i32 %z3_2_5, %z3_5_5        ; <i32> [#uses=1]

ST_108: stg_1101 [1/1] 2.39ns
bb8.5:65  store i32 %tmp_47_5, i32* %Y_addr_52, align 4

ST_108: tmp_48_5 [1/1] 2.49ns
bb8.5:66  %tmp_48_5 = add nsw i32 %z3_2_5, %z3_5_5        ; <i32> [#uses=1]

ST_108: stg_1103 [1/1] 2.39ns
bb8.5:67  store i32 %tmp_48_5, i32* %Y_addr_48, align 4


 <State 109>: 4.88ns
ST_109: z3_4_5 [1/1] 0.00ns
bb8.5:40  %z3_4_5 = sext i18 %tmp_118 to i32              ; <i32> [#uses=2]

ST_109: tmp_49_5 [1/1] 2.49ns
bb8.5:68  %tmp_49_5 = sub nsw i32 %z3_3_5, %z3_4_5        ; <i32> [#uses=1]

ST_109: stg_1106 [1/1] 2.39ns
bb8.5:69  store i32 %tmp_49_5, i32* %Y_addr_46, align 4

ST_109: tmp_50_5 [1/1] 2.49ns
bb8.5:70  %tmp_50_5 = add nsw i32 %z3_3_5, %z3_4_5        ; <i32> [#uses=1]

ST_109: stg_1108 [1/1] 2.39ns
bb8.5:71  store i32 %tmp_50_5, i32* %Y_addr_51, align 4

ST_109: empty_30 [1/1] 0.00ns
bb8.5:72  %empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str19, i32 %tmp_113) nounwind ; <i32> [#uses=0]

ST_109: tmp_122 [1/1] 0.00ns
bb8.5:73  %tmp_122 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str19) nounwind ; <i32> [#uses=1]

ST_109: stg_1111 [1/1] 1.21ns
bb8.5:74  br label %bb7.6


 <State 110>: 2.39ns
ST_110: column_14 [1/1] 0.00ns
bb7.6:0  %column_14 = phi i4 [ 0, %bb8.5 ], [ %column_15, %bb6.6 ] ; <i4> [#uses=3]

ST_110: column_14_cast [1/1] 0.00ns
bb7.6:1  %column_14_cast = zext i4 %column_14 to i6      ; <i6> [#uses=1]

ST_110: empty_33 [1/1] 0.00ns
bb7.6:2  %empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_110: exitcond9 [1/1] 1.88ns
bb7.6:3  %exitcond9 = icmp eq i4 %column_14, -8          ; <i1> [#uses=1]

ST_110: column_15 [1/1] 0.85ns
bb7.6:4  %column_15 = add i4 %column_14, 1               ; <i4> [#uses=1]

ST_110: stg_1117 [1/1] 0.00ns
bb7.6:5  br i1 %exitcond9, label %bb8.6, label %bb6.6

ST_110: tmp_51_4 [1/1] 0.00ns
bb6.6:0  %tmp_51_4 = or i6 %column_14_cast, -16          ; <i6> [#uses=1]

ST_110: tmp_51_6_cast [1/1] 0.00ns
bb6.6:1  %tmp_51_6_cast = zext i6 %tmp_51_4 to i32       ; <i32> [#uses=2]

ST_110: in_addr_6 [1/1] 0.00ns
bb6.6:2  %in_addr_6 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %tmp_51_6_cast ; <i16*> [#uses=1]

ST_110: in_load_6 [2/2] 2.39ns
bb6.6:3  %in_load_6 = load i16* %in_addr_6, align 2      ; <i16> [#uses=1]

ST_110: Y_load_48 [2/2] 2.39ns
bb8.6:20  %Y_load_48 = load i32* %Y_addr_60, align 4      ; <i32> [#uses=1]

ST_110: Y_load_49 [2/2] 2.39ns
bb8.6:24  %Y_load_49 = load i32* %Y_addr_61, align 4      ; <i32> [#uses=1]


 <State 111>: 4.78ns
ST_111: in_load_6 [1/2] 2.39ns
bb6.6:3  %in_load_6 = load i16* %in_addr_6, align 2      ; <i16> [#uses=1]

ST_111: tmp_52_6_cast [1/1] 0.00ns
bb6.6:4  %tmp_52_6_cast = zext i16 %in_load_6 to i19     ; <i19> [#uses=1]

ST_111: tmp_53_6 [1/1] 0.00ns
bb6.6:5  %tmp_53_6 = shl i19 %tmp_52_6_cast, 3           ; <i19> [#uses=1]

ST_111: tmp_53_6_cast [1/1] 0.00ns
bb6.6:6  %tmp_53_6_cast = sext i19 %tmp_53_6 to i32      ; <i32> [#uses=1]

ST_111: Y_addr_62 [1/1] 0.00ns
bb6.6:7  %Y_addr_62 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_51_6_cast ; <i32*> [#uses=1]

ST_111: stg_1129 [1/1] 2.39ns
bb6.6:8  store i32 %tmp_53_6_cast, i32* %Y_addr_62, align 4

ST_111: stg_1130 [1/1] 0.00ns
bb6.6:9  br label %bb7.6


 <State 112>: 2.39ns
ST_112: Y_load_48 [1/2] 2.39ns
bb8.6:20  %Y_load_48 = load i32* %Y_addr_60, align 4      ; <i32> [#uses=1]

ST_112: Y_load_49 [1/2] 2.39ns
bb8.6:24  %Y_load_49 = load i32* %Y_addr_61, align 4      ; <i32> [#uses=1]


 <State 113>: 6.36ns
ST_113: Y_load_60 [2/2] 2.39ns
bb8.6:4  %Y_load_60 = load i32* %Y_addr_56, align 4      ; <i32> [#uses=2]

ST_113: Y_load_61 [2/2] 2.39ns
bb8.6:5  %Y_load_61 = load i32* %Y_addr_57, align 4      ; <i32> [#uses=2]

ST_113: tmp_19_6 [3/3] 6.36ns
bb8.6:21  %tmp_19_6 = mul nsw i32 %Y_load_48, 23170       ; <i32> [#uses=1]

ST_113: tmp_21_6 [3/3] 6.36ns
bb8.6:25  %tmp_21_6 = mul nsw i32 %Y_load_49, 23170       ; <i32> [#uses=1]


 <State 114>: 6.36ns
ST_114: Y_load_60 [1/2] 2.39ns
bb8.6:4  %Y_load_60 = load i32* %Y_addr_56, align 4      ; <i32> [#uses=2]

ST_114: Y_load_61 [1/2] 2.39ns
bb8.6:5  %Y_load_61 = load i32* %Y_addr_57, align 4      ; <i32> [#uses=2]

ST_114: Y_load_46 [2/2] 2.39ns
bb8.6:16  %Y_load_46 = load i32* %Y_addr_58, align 4      ; <i32> [#uses=2]

ST_114: Y_load_47 [2/2] 2.39ns
bb8.6:17  %Y_load_47 = load i32* %Y_addr_59, align 4      ; <i32> [#uses=2]

ST_114: tmp_19_6 [2/3] 6.36ns
bb8.6:21  %tmp_19_6 = mul nsw i32 %Y_load_48, 23170       ; <i32> [#uses=1]

ST_114: tmp_21_6 [2/3] 6.36ns
bb8.6:25  %tmp_21_6 = mul nsw i32 %Y_load_49, 23170       ; <i32> [#uses=1]


 <State 115>: 6.36ns
ST_115: tmp_9_6 [3/3] 6.36ns
bb8.6:6  %tmp_9_6 = mul nsw i32 %Y_load_61, 8867         ; <i32> [#uses=1]

ST_115: tmp_10_6 [3/3] 6.36ns
bb8.6:7  %tmp_10_6 = mul nsw i32 %Y_load_60, 21407       ; <i32> [#uses=1]

ST_115: tmp_13_6 [3/3] 6.36ns
bb8.6:11  %tmp_13_6 = mul nsw i32 %Y_load_61, 21407       ; <i32> [#uses=1]

ST_115: tmp_14_6 [3/3] 6.36ns
bb8.6:12  %tmp_14_6 = mul nsw i32 %Y_load_60, 8867        ; <i32> [#uses=1]

ST_115: Y_load_46 [1/2] 2.39ns
bb8.6:16  %Y_load_46 = load i32* %Y_addr_58, align 4      ; <i32> [#uses=2]

ST_115: Y_load_47 [1/2] 2.39ns
bb8.6:17  %Y_load_47 = load i32* %Y_addr_59, align 4      ; <i32> [#uses=2]

ST_115: tmp_19_6 [1/3] 6.36ns
bb8.6:21  %tmp_19_6 = mul nsw i32 %Y_load_48, 23170       ; <i32> [#uses=1]

ST_115: tmp_125 [1/1] 0.00ns
bb8.6:22  %tmp_125 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_19_6, i32 14, i32 31) ; <i18> [#uses=1]

ST_115: tmp_21_6 [1/3] 6.36ns
bb8.6:25  %tmp_21_6 = mul nsw i32 %Y_load_49, 23170       ; <i32> [#uses=1]

ST_115: tmp_126 [1/1] 0.00ns
bb8.6:26  %tmp_126 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_21_6, i32 14, i32 31) ; <i18> [#uses=1]


 <State 116>: 6.36ns
ST_116: tmp_9_6 [2/3] 6.36ns
bb8.6:6  %tmp_9_6 = mul nsw i32 %Y_load_61, 8867         ; <i32> [#uses=1]

ST_116: tmp_10_6 [2/3] 6.36ns
bb8.6:7  %tmp_10_6 = mul nsw i32 %Y_load_60, 21407       ; <i32> [#uses=1]

ST_116: tmp_13_6 [2/3] 6.36ns
bb8.6:11  %tmp_13_6 = mul nsw i32 %Y_load_61, 21407       ; <i32> [#uses=1]

ST_116: tmp_14_6 [2/3] 6.36ns
bb8.6:12  %tmp_14_6 = mul nsw i32 %Y_load_60, 8867        ; <i32> [#uses=1]

ST_116: z1_4_6 [1/1] 2.49ns
bb8.6:18  %z1_4_6 = sub nsw i32 %Y_load_46, %Y_load_47    ; <i32> [#uses=2]

ST_116: z1_7_6 [1/1] 2.49ns
bb8.6:19  %z1_7_6 = add nsw i32 %Y_load_47, %Y_load_46    ; <i32> [#uses=2]

ST_116: z1_5_6 [1/1] 0.00ns
bb8.6:23  %z1_5_6 = sext i18 %tmp_125 to i32              ; <i32> [#uses=2]

ST_116: z1_6_6 [1/1] 0.00ns
bb8.6:27  %z1_6_6 = sext i18 %tmp_126 to i32              ; <i32> [#uses=2]

ST_116: y_assign_14 [1/1] 2.49ns
bb8.6:32  %y_assign_14 = sub nsw i32 %z1_4_6, %z1_6_6     ; <i32> [#uses=2]

ST_116: x_assign_14 [1/1] 2.49ns
bb8.6:33  %x_assign_14 = add nsw i32 %z1_4_6, %z1_6_6     ; <i32> [#uses=2]

ST_116: x_assign_15 [1/1] 2.49ns
bb8.6:34  %x_assign_15 = sub nsw i32 %z1_7_6, %z1_5_6     ; <i32> [#uses=2]

ST_116: y_assign_15 [1/1] 2.49ns
bb8.6:35  %y_assign_15 = add nsw i32 %z1_7_6, %z1_5_6     ; <i32> [#uses=2]


 <State 117>: 6.36ns
ST_117: tmp_9_6 [1/3] 6.36ns
bb8.6:6  %tmp_9_6 = mul nsw i32 %Y_load_61, 8867         ; <i32> [#uses=1]

ST_117: tmp_10_6 [1/3] 6.36ns
bb8.6:7  %tmp_10_6 = mul nsw i32 %Y_load_60, 21407       ; <i32> [#uses=1]

ST_117: tmp_13_6 [1/3] 6.36ns
bb8.6:11  %tmp_13_6 = mul nsw i32 %Y_load_61, 21407       ; <i32> [#uses=1]

ST_117: tmp_14_6 [1/3] 6.36ns
bb8.6:12  %tmp_14_6 = mul nsw i32 %Y_load_60, 8867        ; <i32> [#uses=1]

ST_117: tmp_27_6 [3/3] 6.36ns
bb8.6:36  %tmp_27_6 = mul nsw i32 %x_assign_14, 13623     ; <i32> [#uses=1]

ST_117: tmp_28_6 [3/3] 6.36ns
bb8.6:37  %tmp_28_6 = mul nsw i32 %y_assign_15, 9102      ; <i32> [#uses=1]

ST_117: tmp_31_6 [3/3] 6.36ns
bb8.6:41  %tmp_31_6 = mul nsw i32 %x_assign_14, 9102      ; <i32> [#uses=1]

ST_117: tmp_32_6 [3/3] 6.36ns
bb8.6:42  %tmp_32_6 = mul nsw i32 %y_assign_15, 13623     ; <i32> [#uses=1]

ST_117: tmp_35_6 [3/3] 6.36ns
bb8.6:46  %tmp_35_6 = mul nsw i32 %x_assign_15, 16069     ; <i32> [#uses=1]

ST_117: tmp_36_6 [3/3] 6.36ns
bb8.6:47  %tmp_36_6 = mul nsw i32 %y_assign_14, 3196      ; <i32> [#uses=1]

ST_117: tmp_39_6 [3/3] 6.36ns
bb8.6:51  %tmp_39_6 = mul nsw i32 %x_assign_15, 3196      ; <i32> [#uses=1]

ST_117: tmp_40_6 [3/3] 6.36ns
bb8.6:52  %tmp_40_6 = mul nsw i32 %y_assign_14, 16069     ; <i32> [#uses=1]


 <State 118>: 6.36ns
ST_118: Y_load_59 [2/2] 2.39ns
bb8.6:0  %Y_load_59 = load i32* %Y_addr_63, align 4      ; <i32> [#uses=2]

ST_118: Y_load_43 [2/2] 2.39ns
bb8.6:1  %Y_load_43 = load i32* %Y_addr_55, align 4      ; <i32> [#uses=2]

ST_118: tmp_11_6 [1/1] 2.49ns
bb8.6:8  %tmp_11_6 = sub nsw i32 %tmp_9_6, %tmp_10_6     ; <i32> [#uses=1]

ST_118: tmp_123 [1/1] 0.00ns
bb8.6:9  %tmp_123 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_11_6, i32 14, i32 31) ; <i18> [#uses=1]

ST_118: tmp_15_6 [1/1] 2.49ns
bb8.6:13  %tmp_15_6 = add nsw i32 %tmp_14_6, %tmp_13_6    ; <i32> [#uses=1]

ST_118: tmp_124 [1/1] 0.00ns
bb8.6:14  %tmp_124 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_15_6, i32 14, i32 31) ; <i18> [#uses=1]

ST_118: tmp_27_6 [2/3] 6.36ns
bb8.6:36  %tmp_27_6 = mul nsw i32 %x_assign_14, 13623     ; <i32> [#uses=1]

ST_118: tmp_28_6 [2/3] 6.36ns
bb8.6:37  %tmp_28_6 = mul nsw i32 %y_assign_15, 9102      ; <i32> [#uses=1]

ST_118: tmp_31_6 [2/3] 6.36ns
bb8.6:41  %tmp_31_6 = mul nsw i32 %x_assign_14, 9102      ; <i32> [#uses=1]

ST_118: tmp_32_6 [2/3] 6.36ns
bb8.6:42  %tmp_32_6 = mul nsw i32 %y_assign_15, 13623     ; <i32> [#uses=1]

ST_118: tmp_35_6 [2/3] 6.36ns
bb8.6:46  %tmp_35_6 = mul nsw i32 %x_assign_15, 16069     ; <i32> [#uses=1]

ST_118: tmp_36_6 [2/3] 6.36ns
bb8.6:47  %tmp_36_6 = mul nsw i32 %y_assign_14, 3196      ; <i32> [#uses=1]

ST_118: tmp_39_6 [2/3] 6.36ns
bb8.6:51  %tmp_39_6 = mul nsw i32 %x_assign_15, 3196      ; <i32> [#uses=1]

ST_118: tmp_40_6 [2/3] 6.36ns
bb8.6:52  %tmp_40_6 = mul nsw i32 %y_assign_14, 16069     ; <i32> [#uses=1]


 <State 119>: 6.36ns
ST_119: Y_load_59 [1/2] 2.39ns
bb8.6:0  %Y_load_59 = load i32* %Y_addr_63, align 4      ; <i32> [#uses=2]

ST_119: Y_load_43 [1/2] 2.39ns
bb8.6:1  %Y_load_43 = load i32* %Y_addr_55, align 4      ; <i32> [#uses=2]

ST_119: tmp_27_6 [1/3] 6.36ns
bb8.6:36  %tmp_27_6 = mul nsw i32 %x_assign_14, 13623     ; <i32> [#uses=1]

ST_119: tmp_28_6 [1/3] 6.36ns
bb8.6:37  %tmp_28_6 = mul nsw i32 %y_assign_15, 9102      ; <i32> [#uses=1]

ST_119: tmp_31_6 [1/3] 6.36ns
bb8.6:41  %tmp_31_6 = mul nsw i32 %x_assign_14, 9102      ; <i32> [#uses=1]

ST_119: tmp_32_6 [1/3] 6.36ns
bb8.6:42  %tmp_32_6 = mul nsw i32 %y_assign_15, 13623     ; <i32> [#uses=1]

ST_119: tmp_35_6 [1/3] 6.36ns
bb8.6:46  %tmp_35_6 = mul nsw i32 %x_assign_15, 16069     ; <i32> [#uses=1]

ST_119: tmp_36_6 [1/3] 6.36ns
bb8.6:47  %tmp_36_6 = mul nsw i32 %y_assign_14, 3196      ; <i32> [#uses=1]

ST_119: tmp_39_6 [1/3] 6.36ns
bb8.6:51  %tmp_39_6 = mul nsw i32 %x_assign_15, 3196      ; <i32> [#uses=1]

ST_119: tmp_40_6 [1/3] 6.36ns
bb8.6:52  %tmp_40_6 = mul nsw i32 %y_assign_14, 16069     ; <i32> [#uses=1]


 <State 120>: 4.98ns
ST_120: z1_1_6 [1/1] 2.49ns
bb8.6:2  %z1_1_6 = sub nsw i32 %Y_load_59, %Y_load_43    ; <i32> [#uses=2]

ST_120: z1_0_6 [1/1] 2.49ns
bb8.6:3  %z1_0_6 = add nsw i32 %Y_load_43, %Y_load_59    ; <i32> [#uses=2]

ST_120: z1_3_6 [1/1] 0.00ns
bb8.6:15  %z1_3_6 = sext i18 %tmp_124 to i32              ; <i32> [#uses=2]

ST_120: z3_3_6 [1/1] 2.49ns
bb8.6:28  %z3_3_6 = sub nsw i32 %z1_0_6, %z1_3_6          ; <i32> [#uses=2]

ST_120: z3_0_6 [1/1] 2.49ns
bb8.6:29  %z3_0_6 = add nsw i32 %z1_0_6, %z1_3_6          ; <i32> [#uses=2]

ST_120: tmp_29_6 [1/1] 2.49ns
bb8.6:38  %tmp_29_6 = sub nsw i32 %tmp_27_6, %tmp_28_6    ; <i32> [#uses=1]

ST_120: tmp_127 [1/1] 0.00ns
bb8.6:39  %tmp_127 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_29_6, i32 14, i32 31) ; <i18> [#uses=1]

ST_120: tmp_33_6 [1/1] 2.49ns
bb8.6:43  %tmp_33_6 = add nsw i32 %tmp_32_6, %tmp_31_6    ; <i32> [#uses=1]

ST_120: tmp_128 [1/1] 0.00ns
bb8.6:44  %tmp_128 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_33_6, i32 14, i32 31) ; <i18> [#uses=1]

ST_120: tmp_37_6 [1/1] 2.49ns
bb8.6:48  %tmp_37_6 = sub nsw i32 %tmp_35_6, %tmp_36_6    ; <i32> [#uses=1]

ST_120: tmp_129 [1/1] 0.00ns
bb8.6:49  %tmp_129 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_37_6, i32 14, i32 31) ; <i18> [#uses=1]

ST_120: tmp_41_6 [1/1] 2.49ns
bb8.6:53  %tmp_41_6 = add nsw i32 %tmp_40_6, %tmp_39_6    ; <i32> [#uses=1]

ST_120: tmp_130 [1/1] 0.00ns
bb8.6:54  %tmp_130 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_41_6, i32 14, i32 31) ; <i18> [#uses=1]


 <State 121>: 4.88ns
ST_121: z1_2_6 [1/1] 0.00ns
bb8.6:10  %z1_2_6 = sext i18 %tmp_123 to i32              ; <i32> [#uses=2]

ST_121: z3_2_6 [1/1] 2.49ns
bb8.6:30  %z3_2_6 = sub nsw i32 %z1_1_6, %z1_2_6          ; <i32> [#uses=2]

ST_121: z3_1_6 [1/1] 2.49ns
bb8.6:31  %z3_1_6 = add nsw i32 %z1_1_6, %z1_2_6          ; <i32> [#uses=2]

ST_121: z3_7_6 [1/1] 0.00ns
bb8.6:45  %z3_7_6 = sext i18 %tmp_128 to i32              ; <i32> [#uses=2]

ST_121: tmp_43_6 [1/1] 2.49ns
bb8.6:56  %tmp_43_6 = sub nsw i32 %z3_0_6, %z3_7_6        ; <i32> [#uses=1]

ST_121: stg_1219 [1/1] 2.39ns
bb8.6:57  store i32 %tmp_43_6, i32* %Y_addr_59, align 4

ST_121: tmp_44_6 [1/1] 2.49ns
bb8.6:58  %tmp_44_6 = add nsw i32 %z3_0_6, %z3_7_6        ; <i32> [#uses=1]

ST_121: stg_1221 [1/1] 2.39ns
bb8.6:59  store i32 %tmp_44_6, i32* %Y_addr_63, align 4


 <State 122>: 4.88ns
ST_122: z3_6_6 [1/1] 0.00ns
bb8.6:55  %z3_6_6 = sext i18 %tmp_130 to i32              ; <i32> [#uses=2]

ST_122: tmp_45_6 [1/1] 2.49ns
bb8.6:60  %tmp_45_6 = sub nsw i32 %z3_1_6, %z3_6_6        ; <i32> [#uses=1]

ST_122: stg_1224 [1/1] 2.39ns
bb8.6:61  store i32 %tmp_45_6, i32* %Y_addr_56, align 4

ST_122: tmp_46_6 [1/1] 2.49ns
bb8.6:62  %tmp_46_6 = add nsw i32 %z3_1_6, %z3_6_6        ; <i32> [#uses=1]

ST_122: stg_1226 [1/1] 2.39ns
bb8.6:63  store i32 %tmp_46_6, i32* %Y_addr_58, align 4


 <State 123>: 4.88ns
ST_123: z3_5_6 [1/1] 0.00ns
bb8.6:50  %z3_5_6 = sext i18 %tmp_129 to i32              ; <i32> [#uses=2]

ST_123: tmp_47_6 [1/1] 2.49ns
bb8.6:64  %tmp_47_6 = sub nsw i32 %z3_2_6, %z3_5_6        ; <i32> [#uses=1]

ST_123: stg_1229 [1/1] 2.39ns
bb8.6:65  store i32 %tmp_47_6, i32* %Y_addr_61, align 4

ST_123: tmp_48_6 [1/1] 2.49ns
bb8.6:66  %tmp_48_6 = add nsw i32 %z3_2_6, %z3_5_6        ; <i32> [#uses=1]

ST_123: stg_1231 [1/1] 2.39ns
bb8.6:67  store i32 %tmp_48_6, i32* %Y_addr_57, align 4


 <State 124>: 4.88ns
ST_124: z3_4_6 [1/1] 0.00ns
bb8.6:40  %z3_4_6 = sext i18 %tmp_127 to i32              ; <i32> [#uses=2]

ST_124: tmp_49_6 [1/1] 2.49ns
bb8.6:68  %tmp_49_6 = sub nsw i32 %z3_3_6, %z3_4_6        ; <i32> [#uses=1]

ST_124: stg_1234 [1/1] 2.39ns
bb8.6:69  store i32 %tmp_49_6, i32* %Y_addr_55, align 4

ST_124: tmp_50_6 [1/1] 2.49ns
bb8.6:70  %tmp_50_6 = add nsw i32 %z3_3_6, %z3_4_6        ; <i32> [#uses=1]

ST_124: stg_1236 [1/1] 2.39ns
bb8.6:71  store i32 %tmp_50_6, i32* %Y_addr_60, align 4

ST_124: empty_32 [1/1] 0.00ns
bb8.6:72  %empty_32 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str19, i32 %tmp_122) nounwind ; <i32> [#uses=0]

ST_124: tmp_131 [1/1] 0.00ns
bb8.6:73  %tmp_131 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str19) nounwind ; <i32> [#uses=1]

ST_124: stg_1239 [1/1] 1.21ns
bb8.6:74  br label %bb7.7


 <State 125>: 3.76ns
ST_125: column_16 [1/1] 0.00ns
bb7.7:0  %column_16 = phi i4 [ 0, %bb8.6 ], [ %column_17, %bb6.7 ] ; <i4> [#uses=3]

ST_125: empty_35 [1/1] 0.00ns
bb7.7:1  %empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_125: exitcond10 [1/1] 1.88ns
bb7.7:2  %exitcond10 = icmp eq i4 %column_16, -8         ; <i1> [#uses=1]

ST_125: column_17 [1/1] 0.85ns
bb7.7:3  %column_17 = add i4 %column_16, 1               ; <i4> [#uses=1]

ST_125: stg_1244 [1/1] 0.00ns
bb7.7:4  br i1 %exitcond10, label %bb8.7, label %bb6.7

ST_125: tmp_51_7 [1/1] 1.37ns
bb6.7:0  %tmp_51_7 = xor i4 %column_16, -8               ; <i4> [#uses=1]

ST_125: tmp_51_7_cast1 [1/1] 0.00ns
bb6.7:1  %tmp_51_7_cast1 = sext i4 %tmp_51_7 to i6       ; <i6> [#uses=1]

ST_125: tmp_51_7_cast [1/1] 0.00ns
bb6.7:2  %tmp_51_7_cast = zext i6 %tmp_51_7_cast1 to i32 ; <i32> [#uses=2]

ST_125: in_addr_7 [1/1] 0.00ns
bb6.7:3  %in_addr_7 = getelementptr inbounds [64 x i16]* %in, i32 0, i32 %tmp_51_7_cast ; <i16*> [#uses=1]

ST_125: in_load_7 [2/2] 2.39ns
bb6.7:4  %in_load_7 = load i16* %in_addr_7, align 2      ; <i16> [#uses=1]

ST_125: Y_load_55 [2/2] 2.39ns
bb8.7:20  %Y_load_55 = load i32* %Y_addr_69, align 4      ; <i32> [#uses=1]

ST_125: Y_load_56 [2/2] 2.39ns
bb8.7:24  %Y_load_56 = load i32* %Y_addr_70, align 4      ; <i32> [#uses=1]


 <State 126>: 4.78ns
ST_126: in_load_7 [1/2] 2.39ns
bb6.7:4  %in_load_7 = load i16* %in_addr_7, align 2      ; <i16> [#uses=1]

ST_126: tmp_52_7_cast [1/1] 0.00ns
bb6.7:5  %tmp_52_7_cast = zext i16 %in_load_7 to i19     ; <i19> [#uses=1]

ST_126: tmp_53_7 [1/1] 0.00ns
bb6.7:6  %tmp_53_7 = shl i19 %tmp_52_7_cast, 3           ; <i19> [#uses=1]

ST_126: tmp_53_7_cast [1/1] 0.00ns
bb6.7:7  %tmp_53_7_cast = sext i19 %tmp_53_7 to i32      ; <i32> [#uses=1]

ST_126: Y_addr_71 [1/1] 0.00ns
bb6.7:8  %Y_addr_71 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_51_7_cast ; <i32*> [#uses=1]

ST_126: stg_1257 [1/1] 2.39ns
bb6.7:9  store i32 %tmp_53_7_cast, i32* %Y_addr_71, align 4

ST_126: stg_1258 [1/1] 0.00ns
bb6.7:10  br label %bb7.7


 <State 127>: 2.39ns
ST_127: Y_load_55 [1/2] 2.39ns
bb8.7:20  %Y_load_55 = load i32* %Y_addr_69, align 4      ; <i32> [#uses=1]

ST_127: Y_load_56 [1/2] 2.39ns
bb8.7:24  %Y_load_56 = load i32* %Y_addr_70, align 4      ; <i32> [#uses=1]


 <State 128>: 6.36ns
ST_128: Y_load_63 [2/2] 2.39ns
bb8.7:4  %Y_load_63 = load i32* %Y_addr_65, align 4      ; <i32> [#uses=2]

ST_128: Y_load_64 [2/2] 2.39ns
bb8.7:5  %Y_load_64 = load i32* %Y_addr_66, align 4      ; <i32> [#uses=2]

ST_128: tmp_19_7 [3/3] 6.36ns
bb8.7:21  %tmp_19_7 = mul nsw i32 %Y_load_55, 23170       ; <i32> [#uses=1]

ST_128: tmp_21_7 [3/3] 6.36ns
bb8.7:25  %tmp_21_7 = mul nsw i32 %Y_load_56, 23170       ; <i32> [#uses=1]


 <State 129>: 6.36ns
ST_129: Y_load_63 [1/2] 2.39ns
bb8.7:4  %Y_load_63 = load i32* %Y_addr_65, align 4      ; <i32> [#uses=2]

ST_129: Y_load_64 [1/2] 2.39ns
bb8.7:5  %Y_load_64 = load i32* %Y_addr_66, align 4      ; <i32> [#uses=2]

ST_129: Y_load_53 [2/2] 2.39ns
bb8.7:16  %Y_load_53 = load i32* %Y_addr_67, align 4      ; <i32> [#uses=2]

ST_129: Y_load_54 [2/2] 2.39ns
bb8.7:17  %Y_load_54 = load i32* %Y_addr_68, align 4      ; <i32> [#uses=2]

ST_129: tmp_19_7 [2/3] 6.36ns
bb8.7:21  %tmp_19_7 = mul nsw i32 %Y_load_55, 23170       ; <i32> [#uses=1]

ST_129: tmp_21_7 [2/3] 6.36ns
bb8.7:25  %tmp_21_7 = mul nsw i32 %Y_load_56, 23170       ; <i32> [#uses=1]


 <State 130>: 6.36ns
ST_130: tmp_9_7 [3/3] 6.36ns
bb8.7:6  %tmp_9_7 = mul nsw i32 %Y_load_64, 8867         ; <i32> [#uses=1]

ST_130: tmp_10_7 [3/3] 6.36ns
bb8.7:7  %tmp_10_7 = mul nsw i32 %Y_load_63, 21407       ; <i32> [#uses=1]

ST_130: tmp_13_7 [3/3] 6.36ns
bb8.7:11  %tmp_13_7 = mul nsw i32 %Y_load_64, 21407       ; <i32> [#uses=1]

ST_130: tmp_14_7 [3/3] 6.36ns
bb8.7:12  %tmp_14_7 = mul nsw i32 %Y_load_63, 8867        ; <i32> [#uses=1]

ST_130: Y_load_53 [1/2] 2.39ns
bb8.7:16  %Y_load_53 = load i32* %Y_addr_67, align 4      ; <i32> [#uses=2]

ST_130: Y_load_54 [1/2] 2.39ns
bb8.7:17  %Y_load_54 = load i32* %Y_addr_68, align 4      ; <i32> [#uses=2]

ST_130: tmp_19_7 [1/3] 6.36ns
bb8.7:21  %tmp_19_7 = mul nsw i32 %Y_load_55, 23170       ; <i32> [#uses=1]

ST_130: tmp_134 [1/1] 0.00ns
bb8.7:22  %tmp_134 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_19_7, i32 14, i32 31) ; <i18> [#uses=1]

ST_130: tmp_21_7 [1/3] 6.36ns
bb8.7:25  %tmp_21_7 = mul nsw i32 %Y_load_56, 23170       ; <i32> [#uses=1]

ST_130: tmp_135 [1/1] 0.00ns
bb8.7:26  %tmp_135 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_21_7, i32 14, i32 31) ; <i18> [#uses=1]


 <State 131>: 6.36ns
ST_131: tmp_9_7 [2/3] 6.36ns
bb8.7:6  %tmp_9_7 = mul nsw i32 %Y_load_64, 8867         ; <i32> [#uses=1]

ST_131: tmp_10_7 [2/3] 6.36ns
bb8.7:7  %tmp_10_7 = mul nsw i32 %Y_load_63, 21407       ; <i32> [#uses=1]

ST_131: tmp_13_7 [2/3] 6.36ns
bb8.7:11  %tmp_13_7 = mul nsw i32 %Y_load_64, 21407       ; <i32> [#uses=1]

ST_131: tmp_14_7 [2/3] 6.36ns
bb8.7:12  %tmp_14_7 = mul nsw i32 %Y_load_63, 8867        ; <i32> [#uses=1]

ST_131: z1_4_7 [1/1] 2.49ns
bb8.7:18  %z1_4_7 = sub nsw i32 %Y_load_53, %Y_load_54    ; <i32> [#uses=2]

ST_131: z1_7_7 [1/1] 2.49ns
bb8.7:19  %z1_7_7 = add nsw i32 %Y_load_54, %Y_load_53    ; <i32> [#uses=2]

ST_131: z1_5_7 [1/1] 0.00ns
bb8.7:23  %z1_5_7 = sext i18 %tmp_134 to i32              ; <i32> [#uses=2]

ST_131: z1_6_7 [1/1] 0.00ns
bb8.7:27  %z1_6_7 = sext i18 %tmp_135 to i32              ; <i32> [#uses=2]

ST_131: y_assign_16 [1/1] 2.49ns
bb8.7:32  %y_assign_16 = sub nsw i32 %z1_4_7, %z1_6_7     ; <i32> [#uses=2]

ST_131: x_assign_16 [1/1] 2.49ns
bb8.7:33  %x_assign_16 = add nsw i32 %z1_4_7, %z1_6_7     ; <i32> [#uses=2]

ST_131: x_assign_17 [1/1] 2.49ns
bb8.7:34  %x_assign_17 = sub nsw i32 %z1_7_7, %z1_5_7     ; <i32> [#uses=2]

ST_131: y_assign_17 [1/1] 2.49ns
bb8.7:35  %y_assign_17 = add nsw i32 %z1_7_7, %z1_5_7     ; <i32> [#uses=2]


 <State 132>: 6.36ns
ST_132: tmp_9_7 [1/3] 6.36ns
bb8.7:6  %tmp_9_7 = mul nsw i32 %Y_load_64, 8867         ; <i32> [#uses=1]

ST_132: tmp_10_7 [1/3] 6.36ns
bb8.7:7  %tmp_10_7 = mul nsw i32 %Y_load_63, 21407       ; <i32> [#uses=1]

ST_132: tmp_13_7 [1/3] 6.36ns
bb8.7:11  %tmp_13_7 = mul nsw i32 %Y_load_64, 21407       ; <i32> [#uses=1]

ST_132: tmp_14_7 [1/3] 6.36ns
bb8.7:12  %tmp_14_7 = mul nsw i32 %Y_load_63, 8867        ; <i32> [#uses=1]

ST_132: tmp_27_7 [3/3] 6.36ns
bb8.7:36  %tmp_27_7 = mul nsw i32 %x_assign_16, 13623     ; <i32> [#uses=1]

ST_132: tmp_28_7 [3/3] 6.36ns
bb8.7:37  %tmp_28_7 = mul nsw i32 %y_assign_17, 9102      ; <i32> [#uses=1]

ST_132: tmp_31_7 [3/3] 6.36ns
bb8.7:41  %tmp_31_7 = mul nsw i32 %x_assign_16, 9102      ; <i32> [#uses=1]

ST_132: tmp_32_7 [3/3] 6.36ns
bb8.7:42  %tmp_32_7 = mul nsw i32 %y_assign_17, 13623     ; <i32> [#uses=1]

ST_132: tmp_35_7 [3/3] 6.36ns
bb8.7:46  %tmp_35_7 = mul nsw i32 %x_assign_17, 16069     ; <i32> [#uses=1]

ST_132: tmp_36_7 [3/3] 6.36ns
bb8.7:47  %tmp_36_7 = mul nsw i32 %y_assign_16, 3196      ; <i32> [#uses=1]

ST_132: tmp_39_7 [3/3] 6.36ns
bb8.7:51  %tmp_39_7 = mul nsw i32 %x_assign_17, 3196      ; <i32> [#uses=1]

ST_132: tmp_40_7 [3/3] 6.36ns
bb8.7:52  %tmp_40_7 = mul nsw i32 %y_assign_16, 16069     ; <i32> [#uses=1]


 <State 133>: 6.36ns
ST_133: Y_load_62 [2/2] 2.39ns
bb8.7:0  %Y_load_62 = load i32* %Y_addr_72, align 4      ; <i32> [#uses=2]

ST_133: Y_load_50 [2/2] 2.39ns
bb8.7:1  %Y_load_50 = load i32* %Y_addr_64, align 4      ; <i32> [#uses=2]

ST_133: tmp_11_7 [1/1] 2.49ns
bb8.7:8  %tmp_11_7 = sub nsw i32 %tmp_9_7, %tmp_10_7     ; <i32> [#uses=1]

ST_133: tmp_132 [1/1] 0.00ns
bb8.7:9  %tmp_132 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_11_7, i32 14, i32 31) ; <i18> [#uses=1]

ST_133: tmp_15_7 [1/1] 2.49ns
bb8.7:13  %tmp_15_7 = add nsw i32 %tmp_14_7, %tmp_13_7    ; <i32> [#uses=1]

ST_133: tmp_133 [1/1] 0.00ns
bb8.7:14  %tmp_133 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_15_7, i32 14, i32 31) ; <i18> [#uses=1]

ST_133: tmp_27_7 [2/3] 6.36ns
bb8.7:36  %tmp_27_7 = mul nsw i32 %x_assign_16, 13623     ; <i32> [#uses=1]

ST_133: tmp_28_7 [2/3] 6.36ns
bb8.7:37  %tmp_28_7 = mul nsw i32 %y_assign_17, 9102      ; <i32> [#uses=1]

ST_133: tmp_31_7 [2/3] 6.36ns
bb8.7:41  %tmp_31_7 = mul nsw i32 %x_assign_16, 9102      ; <i32> [#uses=1]

ST_133: tmp_32_7 [2/3] 6.36ns
bb8.7:42  %tmp_32_7 = mul nsw i32 %y_assign_17, 13623     ; <i32> [#uses=1]

ST_133: tmp_35_7 [2/3] 6.36ns
bb8.7:46  %tmp_35_7 = mul nsw i32 %x_assign_17, 16069     ; <i32> [#uses=1]

ST_133: tmp_36_7 [2/3] 6.36ns
bb8.7:47  %tmp_36_7 = mul nsw i32 %y_assign_16, 3196      ; <i32> [#uses=1]

ST_133: tmp_39_7 [2/3] 6.36ns
bb8.7:51  %tmp_39_7 = mul nsw i32 %x_assign_17, 3196      ; <i32> [#uses=1]

ST_133: tmp_40_7 [2/3] 6.36ns
bb8.7:52  %tmp_40_7 = mul nsw i32 %y_assign_16, 16069     ; <i32> [#uses=1]


 <State 134>: 6.36ns
ST_134: Y_load_62 [1/2] 2.39ns
bb8.7:0  %Y_load_62 = load i32* %Y_addr_72, align 4      ; <i32> [#uses=2]

ST_134: Y_load_50 [1/2] 2.39ns
bb8.7:1  %Y_load_50 = load i32* %Y_addr_64, align 4      ; <i32> [#uses=2]

ST_134: tmp_27_7 [1/3] 6.36ns
bb8.7:36  %tmp_27_7 = mul nsw i32 %x_assign_16, 13623     ; <i32> [#uses=1]

ST_134: tmp_28_7 [1/3] 6.36ns
bb8.7:37  %tmp_28_7 = mul nsw i32 %y_assign_17, 9102      ; <i32> [#uses=1]

ST_134: tmp_31_7 [1/3] 6.36ns
bb8.7:41  %tmp_31_7 = mul nsw i32 %x_assign_16, 9102      ; <i32> [#uses=1]

ST_134: tmp_32_7 [1/3] 6.36ns
bb8.7:42  %tmp_32_7 = mul nsw i32 %y_assign_17, 13623     ; <i32> [#uses=1]

ST_134: tmp_35_7 [1/3] 6.36ns
bb8.7:46  %tmp_35_7 = mul nsw i32 %x_assign_17, 16069     ; <i32> [#uses=1]

ST_134: tmp_36_7 [1/3] 6.36ns
bb8.7:47  %tmp_36_7 = mul nsw i32 %y_assign_16, 3196      ; <i32> [#uses=1]

ST_134: tmp_39_7 [1/3] 6.36ns
bb8.7:51  %tmp_39_7 = mul nsw i32 %x_assign_17, 3196      ; <i32> [#uses=1]

ST_134: tmp_40_7 [1/3] 6.36ns
bb8.7:52  %tmp_40_7 = mul nsw i32 %y_assign_16, 16069     ; <i32> [#uses=1]


 <State 135>: 4.98ns
ST_135: z1_1_7 [1/1] 2.49ns
bb8.7:2  %z1_1_7 = sub nsw i32 %Y_load_62, %Y_load_50    ; <i32> [#uses=2]

ST_135: z1_0_7 [1/1] 2.49ns
bb8.7:3  %z1_0_7 = add nsw i32 %Y_load_50, %Y_load_62    ; <i32> [#uses=2]

ST_135: z1_3_7 [1/1] 0.00ns
bb8.7:15  %z1_3_7 = sext i18 %tmp_133 to i32              ; <i32> [#uses=2]

ST_135: z3_3_7 [1/1] 2.49ns
bb8.7:28  %z3_3_7 = sub nsw i32 %z1_0_7, %z1_3_7          ; <i32> [#uses=2]

ST_135: z3_0_7 [1/1] 2.49ns
bb8.7:29  %z3_0_7 = add nsw i32 %z1_0_7, %z1_3_7          ; <i32> [#uses=2]

ST_135: tmp_29_7 [1/1] 2.49ns
bb8.7:38  %tmp_29_7 = sub nsw i32 %tmp_27_7, %tmp_28_7    ; <i32> [#uses=1]

ST_135: tmp_136 [1/1] 0.00ns
bb8.7:39  %tmp_136 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_29_7, i32 14, i32 31) ; <i18> [#uses=1]

ST_135: tmp_33_7 [1/1] 2.49ns
bb8.7:43  %tmp_33_7 = add nsw i32 %tmp_32_7, %tmp_31_7    ; <i32> [#uses=1]

ST_135: tmp_137 [1/1] 0.00ns
bb8.7:44  %tmp_137 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_33_7, i32 14, i32 31) ; <i18> [#uses=1]

ST_135: tmp_37_7 [1/1] 2.49ns
bb8.7:48  %tmp_37_7 = sub nsw i32 %tmp_35_7, %tmp_36_7    ; <i32> [#uses=1]

ST_135: tmp_138 [1/1] 0.00ns
bb8.7:49  %tmp_138 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_37_7, i32 14, i32 31) ; <i18> [#uses=1]

ST_135: tmp_41_7 [1/1] 2.49ns
bb8.7:53  %tmp_41_7 = add nsw i32 %tmp_40_7, %tmp_39_7    ; <i32> [#uses=1]

ST_135: tmp_139 [1/1] 0.00ns
bb8.7:54  %tmp_139 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_41_7, i32 14, i32 31) ; <i18> [#uses=1]


 <State 136>: 4.88ns
ST_136: z1_2_7 [1/1] 0.00ns
bb8.7:10  %z1_2_7 = sext i18 %tmp_132 to i32              ; <i32> [#uses=2]

ST_136: z3_2_7 [1/1] 2.49ns
bb8.7:30  %z3_2_7 = sub nsw i32 %z1_1_7, %z1_2_7          ; <i32> [#uses=2]

ST_136: z3_1_7 [1/1] 2.49ns
bb8.7:31  %z3_1_7 = add nsw i32 %z1_1_7, %z1_2_7          ; <i32> [#uses=2]

ST_136: z3_7_7 [1/1] 0.00ns
bb8.7:45  %z3_7_7 = sext i18 %tmp_137 to i32              ; <i32> [#uses=2]

ST_136: tmp_43_7 [1/1] 2.49ns
bb8.7:56  %tmp_43_7 = sub nsw i32 %z3_0_7, %z3_7_7        ; <i32> [#uses=1]

ST_136: stg_1347 [1/1] 2.39ns
bb8.7:57  store i32 %tmp_43_7, i32* %Y_addr_68, align 4

ST_136: tmp_44_7 [1/1] 2.49ns
bb8.7:58  %tmp_44_7 = add nsw i32 %z3_0_7, %z3_7_7        ; <i32> [#uses=1]

ST_136: stg_1349 [1/1] 2.39ns
bb8.7:59  store i32 %tmp_44_7, i32* %Y_addr_72, align 4


 <State 137>: 4.88ns
ST_137: z3_6_7 [1/1] 0.00ns
bb8.7:55  %z3_6_7 = sext i18 %tmp_139 to i32              ; <i32> [#uses=2]

ST_137: tmp_45_7 [1/1] 2.49ns
bb8.7:60  %tmp_45_7 = sub nsw i32 %z3_1_7, %z3_6_7        ; <i32> [#uses=1]

ST_137: stg_1352 [1/1] 2.39ns
bb8.7:61  store i32 %tmp_45_7, i32* %Y_addr_65, align 4

ST_137: tmp_46_7 [1/1] 2.49ns
bb8.7:62  %tmp_46_7 = add nsw i32 %z3_1_7, %z3_6_7        ; <i32> [#uses=1]

ST_137: stg_1354 [1/1] 2.39ns
bb8.7:63  store i32 %tmp_46_7, i32* %Y_addr_67, align 4


 <State 138>: 4.88ns
ST_138: z3_5_7 [1/1] 0.00ns
bb8.7:50  %z3_5_7 = sext i18 %tmp_138 to i32              ; <i32> [#uses=2]

ST_138: tmp_47_7 [1/1] 2.49ns
bb8.7:64  %tmp_47_7 = sub nsw i32 %z3_2_7, %z3_5_7        ; <i32> [#uses=1]

ST_138: stg_1357 [1/1] 2.39ns
bb8.7:65  store i32 %tmp_47_7, i32* %Y_addr_70, align 4

ST_138: tmp_48_7 [1/1] 2.49ns
bb8.7:66  %tmp_48_7 = add nsw i32 %z3_2_7, %z3_5_7        ; <i32> [#uses=1]

ST_138: stg_1359 [1/1] 2.39ns
bb8.7:67  store i32 %tmp_48_7, i32* %Y_addr_66, align 4


 <State 139>: 4.88ns
ST_139: z3_4_7 [1/1] 0.00ns
bb8.7:40  %z3_4_7 = sext i18 %tmp_136 to i32              ; <i32> [#uses=2]

ST_139: tmp_49_7 [1/1] 2.49ns
bb8.7:68  %tmp_49_7 = sub nsw i32 %z3_3_7, %z3_4_7        ; <i32> [#uses=1]

ST_139: stg_1362 [1/1] 2.39ns
bb8.7:69  store i32 %tmp_49_7, i32* %Y_addr_64, align 4

ST_139: tmp_50_7 [1/1] 2.49ns
bb8.7:70  %tmp_50_7 = add nsw i32 %z3_3_7, %z3_4_7        ; <i32> [#uses=1]

ST_139: stg_1364 [1/1] 2.39ns
bb8.7:71  store i32 %tmp_50_7, i32* %Y_addr_69, align 4

ST_139: empty_34 [1/1] 0.00ns
bb8.7:72  %empty_34 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str19, i32 %tmp_131) nounwind ; <i32> [#uses=0]

ST_139: stg_1366 [1/1] 1.21ns
bb8.7:73  br label %bb21


 <State 140>: 3.09ns
ST_140: column [1/1] 0.00ns
bb21:0  %column = phi i4 [ 0, %bb8.7 ], [ %column_3, %bb19 ] ; <i4> [#uses=3]

ST_140: column_cast [1/1] 0.00ns
bb21:1  %column_cast = zext i4 %column to i6            ; <i6> [#uses=2]

ST_140: empty_38 [1/1] 0.00ns
bb21:2  %empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_140: exitcond [1/1] 1.88ns
bb21:3  %exitcond = icmp eq i4 %column, -8              ; <i1> [#uses=1]

ST_140: column_3 [1/1] 0.85ns
bb21:4  %column_3 = add i4 %column, 1                   ; <i4> [#uses=1]

ST_140: stg_1372 [1/1] 1.21ns
bb21:5  br i1 %exitcond, label %bb22, label %bb13

ST_140: val_V_6_0 [1/1] 0.00ns
bb22:0  %val_V_6_0 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %WriteFullPort_0) nounwind ; <i1> [#uses=0]

ST_140: stg_1374 [1/1] 1.26ns
bb22:1  br label %bb8.i


 <State 141>: 4.16ns
ST_141: row [1/1] 0.00ns
bb13:0  %row = phi i4 [ %row_1, %bb12 ], [ 0, %bb21 ]   ; <i4> [#uses=4]

ST_141: row_cast1 [1/1] 0.00ns
bb13:1  %row_cast1 = zext i4 %row to i6                 ; <i6> [#uses=1]

ST_141: row_cast [1/1] 0.00ns
bb13:2  %row_cast = zext i4 %row to i32                 ; <i32> [#uses=1]

ST_141: empty_36 [1/1] 0.00ns
bb13:3  %empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_141: exitcond11 [1/1] 1.88ns
bb13:4  %exitcond11 = icmp eq i4 %row, -8               ; <i1> [#uses=1]

ST_141: row_1 [1/1] 0.85ns
bb13:5  %row_1 = add i4 %row, 1                         ; <i4> [#uses=1]

ST_141: stg_1381 [1/1] 0.00ns
bb13:6  br i1 %exitcond11, label %bb14, label %bb12

ST_141: tmp_95 [1/1] 0.00ns
bb12:0  %tmp_95 = shl i6 %row_cast1, 3                  ; <i6> [#uses=1]

ST_141: tmp_96 [1/1] 1.77ns
bb12:1  %tmp_96 = add i6 %tmp_95, %column_cast          ; <i6> [#uses=1]

ST_141: tmp_96_cast [1/1] 0.00ns
bb12:2  %tmp_96_cast = zext i6 %tmp_96 to i32           ; <i32> [#uses=1]

ST_141: Y_addr_8 [1/1] 0.00ns
bb12:3  %Y_addr_8 = getelementptr inbounds [64 x i32]* %Y, i32 0, i32 %tmp_96_cast ; <i32*> [#uses=1]

ST_141: Y_load_7 [2/2] 2.39ns
bb12:4  %Y_load_7 = load i32* %Y_addr_8, align 4        ; <i32> [#uses=1]

ST_141: Yc_load_5 [2/2] 2.39ns
bb14:20  %Yc_load_5 = load i32* %Yc_addr_5, align 4      ; <i32> [#uses=1]

ST_141: Yc_load_6 [2/2] 2.39ns
bb14:24  %Yc_load_6 = load i32* %Yc_addr_6, align 4      ; <i32> [#uses=1]


 <State 142>: 4.78ns
ST_142: Y_load_7 [1/2] 2.39ns
bb12:4  %Y_load_7 = load i32* %Y_addr_8, align 4        ; <i32> [#uses=1]

ST_142: Yc_addr_7 [1/1] 0.00ns
bb12:5  %Yc_addr_7 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 %row_cast ; <i32*> [#uses=1]

ST_142: stg_1391 [1/1] 2.39ns
bb12:6  store i32 %Y_load_7, i32* %Yc_addr_7, align 4

ST_142: stg_1392 [1/1] 0.00ns
bb12:7  br label %bb13


 <State 143>: 2.39ns
ST_143: Yc_load_5 [1/2] 2.39ns
bb14:20  %Yc_load_5 = load i32* %Yc_addr_5, align 4      ; <i32> [#uses=1]

ST_143: Yc_load_6 [1/2] 2.39ns
bb14:24  %Yc_load_6 = load i32* %Yc_addr_6, align 4      ; <i32> [#uses=1]


 <State 144>: 6.36ns
ST_144: Yc_load_2 [2/2] 2.39ns
bb14:4  %Yc_load_2 = load i32* %Yc_addr_1, align 4      ; <i32> [#uses=2]

ST_144: Yc_load_8 [2/2] 2.39ns
bb14:5  %Yc_load_8 = load i32* %Yc_addr_2, align 4      ; <i32> [#uses=2]

ST_144: tmp_63 [3/3] 6.36ns
bb14:21  %tmp_63 = mul nsw i32 %Yc_load_5, 23170         ; <i32> [#uses=1]

ST_144: tmp_65 [3/3] 6.36ns
bb14:25  %tmp_65 = mul nsw i32 %Yc_load_6, 23170         ; <i32> [#uses=1]


 <State 145>: 6.36ns
ST_145: Yc_load_2 [1/2] 2.39ns
bb14:4  %Yc_load_2 = load i32* %Yc_addr_1, align 4      ; <i32> [#uses=2]

ST_145: Yc_load_8 [1/2] 2.39ns
bb14:5  %Yc_load_8 = load i32* %Yc_addr_2, align 4      ; <i32> [#uses=2]

ST_145: Yc_load_3 [2/2] 2.39ns
bb14:16  %Yc_load_3 = load i32* %Yc_addr_3, align 4      ; <i32> [#uses=2]

ST_145: Yc_load_4 [2/2] 2.39ns
bb14:17  %Yc_load_4 = load i32* %Yc_addr_4, align 4      ; <i32> [#uses=2]

ST_145: tmp_63 [2/3] 6.36ns
bb14:21  %tmp_63 = mul nsw i32 %Yc_load_5, 23170         ; <i32> [#uses=1]

ST_145: tmp_65 [2/3] 6.36ns
bb14:25  %tmp_65 = mul nsw i32 %Yc_load_6, 23170         ; <i32> [#uses=1]


 <State 146>: 6.36ns
ST_146: tmp_s [3/3] 6.36ns
bb14:6  %tmp_s = mul nsw i32 %Yc_load_8, 8867           ; <i32> [#uses=1]

ST_146: tmp_54 [3/3] 6.36ns
bb14:7  %tmp_54 = mul nsw i32 %Yc_load_2, 21407         ; <i32> [#uses=1]

ST_146: tmp_57 [3/3] 6.36ns
bb14:11  %tmp_57 = mul nsw i32 %Yc_load_8, 21407         ; <i32> [#uses=1]

ST_146: tmp_58 [3/3] 6.36ns
bb14:12  %tmp_58 = mul nsw i32 %Yc_load_2, 8867          ; <i32> [#uses=1]

ST_146: Yc_load_3 [1/2] 2.39ns
bb14:16  %Yc_load_3 = load i32* %Yc_addr_3, align 4      ; <i32> [#uses=2]

ST_146: Yc_load_4 [1/2] 2.39ns
bb14:17  %Yc_load_4 = load i32* %Yc_addr_4, align 4      ; <i32> [#uses=2]

ST_146: tmp_63 [1/3] 6.36ns
bb14:21  %tmp_63 = mul nsw i32 %Yc_load_5, 23170         ; <i32> [#uses=1]

ST_146: tmp_142 [1/1] 0.00ns
bb14:22  %tmp_142 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_63, i32 14, i32 31) ; <i18> [#uses=1]

ST_146: tmp_65 [1/3] 6.36ns
bb14:25  %tmp_65 = mul nsw i32 %Yc_load_6, 23170         ; <i32> [#uses=1]

ST_146: tmp_143 [1/1] 0.00ns
bb14:26  %tmp_143 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_65, i32 14, i32 31) ; <i18> [#uses=1]


 <State 147>: 6.36ns
ST_147: tmp_s [2/3] 6.36ns
bb14:6  %tmp_s = mul nsw i32 %Yc_load_8, 8867           ; <i32> [#uses=1]

ST_147: tmp_54 [2/3] 6.36ns
bb14:7  %tmp_54 = mul nsw i32 %Yc_load_2, 21407         ; <i32> [#uses=1]

ST_147: tmp_57 [2/3] 6.36ns
bb14:11  %tmp_57 = mul nsw i32 %Yc_load_8, 21407         ; <i32> [#uses=1]

ST_147: tmp_58 [2/3] 6.36ns
bb14:12  %tmp_58 = mul nsw i32 %Yc_load_2, 8867          ; <i32> [#uses=1]

ST_147: z1_4_8 [1/1] 2.49ns
bb14:18  %z1_4_8 = sub nsw i32 %Yc_load_3, %Yc_load_4    ; <i32> [#uses=2]

ST_147: z1_7_8 [1/1] 2.49ns
bb14:19  %z1_7_8 = add nsw i32 %Yc_load_4, %Yc_load_3    ; <i32> [#uses=2]

ST_147: z1_5_8 [1/1] 0.00ns
bb14:23  %z1_5_8 = sext i18 %tmp_142 to i32              ; <i32> [#uses=2]

ST_147: z1_6_8 [1/1] 0.00ns
bb14:27  %z1_6_8 = sext i18 %tmp_143 to i32              ; <i32> [#uses=2]

ST_147: y_assign_5 [1/1] 2.49ns
bb14:32  %y_assign_5 = sub nsw i32 %z1_4_8, %z1_6_8      ; <i32> [#uses=2]

ST_147: x_assign_4 [1/1] 2.49ns
bb14:33  %x_assign_4 = add nsw i32 %z1_4_8, %z1_6_8      ; <i32> [#uses=2]

ST_147: x_assign_5 [1/1] 2.49ns
bb14:34  %x_assign_5 = sub nsw i32 %z1_7_8, %z1_5_8      ; <i32> [#uses=2]

ST_147: y_assign_4 [1/1] 2.49ns
bb14:35  %y_assign_4 = add nsw i32 %z1_7_8, %z1_5_8      ; <i32> [#uses=2]


 <State 148>: 6.36ns
ST_148: tmp_s [1/3] 6.36ns
bb14:6  %tmp_s = mul nsw i32 %Yc_load_8, 8867           ; <i32> [#uses=1]

ST_148: tmp_54 [1/3] 6.36ns
bb14:7  %tmp_54 = mul nsw i32 %Yc_load_2, 21407         ; <i32> [#uses=1]

ST_148: tmp_57 [1/3] 6.36ns
bb14:11  %tmp_57 = mul nsw i32 %Yc_load_8, 21407         ; <i32> [#uses=1]

ST_148: tmp_58 [1/3] 6.36ns
bb14:12  %tmp_58 = mul nsw i32 %Yc_load_2, 8867          ; <i32> [#uses=1]

ST_148: tmp_71 [3/3] 6.36ns
bb14:36  %tmp_71 = mul nsw i32 %x_assign_4, 13623        ; <i32> [#uses=1]

ST_148: tmp_72 [3/3] 6.36ns
bb14:37  %tmp_72 = mul nsw i32 %y_assign_4, 9102         ; <i32> [#uses=1]

ST_148: tmp_75 [3/3] 6.36ns
bb14:41  %tmp_75 = mul nsw i32 %x_assign_4, 9102         ; <i32> [#uses=1]

ST_148: tmp_76 [3/3] 6.36ns
bb14:42  %tmp_76 = mul nsw i32 %y_assign_4, 13623        ; <i32> [#uses=1]

ST_148: tmp_79 [3/3] 6.36ns
bb14:46  %tmp_79 = mul nsw i32 %x_assign_5, 16069        ; <i32> [#uses=1]

ST_148: tmp_80 [3/3] 6.36ns
bb14:47  %tmp_80 = mul nsw i32 %y_assign_5, 3196         ; <i32> [#uses=1]

ST_148: tmp_83 [3/3] 6.36ns
bb14:51  %tmp_83 = mul nsw i32 %x_assign_5, 3196         ; <i32> [#uses=1]

ST_148: tmp_84 [3/3] 6.36ns
bb14:52  %tmp_84 = mul nsw i32 %y_assign_5, 16069        ; <i32> [#uses=1]


 <State 149>: 6.36ns
ST_149: Yc_load_1 [2/2] 2.39ns
bb14:0  %Yc_load_1 = load i32* %Yc_addr_9, align 4      ; <i32> [#uses=2]

ST_149: Yc_load [2/2] 2.39ns
bb14:1  %Yc_load = load i32* %Yc_addr, align 4          ; <i32> [#uses=2]

ST_149: tmp_55 [1/1] 2.49ns
bb14:8  %tmp_55 = sub nsw i32 %tmp_s, %tmp_54           ; <i32> [#uses=1]

ST_149: tmp_140 [1/1] 0.00ns
bb14:9  %tmp_140 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_55, i32 14, i32 31) ; <i18> [#uses=1]

ST_149: tmp_59 [1/1] 2.49ns
bb14:13  %tmp_59 = add nsw i32 %tmp_58, %tmp_57          ; <i32> [#uses=1]

ST_149: tmp_141 [1/1] 0.00ns
bb14:14  %tmp_141 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_59, i32 14, i32 31) ; <i18> [#uses=1]

ST_149: tmp_71 [2/3] 6.36ns
bb14:36  %tmp_71 = mul nsw i32 %x_assign_4, 13623        ; <i32> [#uses=1]

ST_149: tmp_72 [2/3] 6.36ns
bb14:37  %tmp_72 = mul nsw i32 %y_assign_4, 9102         ; <i32> [#uses=1]

ST_149: tmp_75 [2/3] 6.36ns
bb14:41  %tmp_75 = mul nsw i32 %x_assign_4, 9102         ; <i32> [#uses=1]

ST_149: tmp_76 [2/3] 6.36ns
bb14:42  %tmp_76 = mul nsw i32 %y_assign_4, 13623        ; <i32> [#uses=1]

ST_149: tmp_79 [2/3] 6.36ns
bb14:46  %tmp_79 = mul nsw i32 %x_assign_5, 16069        ; <i32> [#uses=1]

ST_149: tmp_80 [2/3] 6.36ns
bb14:47  %tmp_80 = mul nsw i32 %y_assign_5, 3196         ; <i32> [#uses=1]

ST_149: tmp_83 [2/3] 6.36ns
bb14:51  %tmp_83 = mul nsw i32 %x_assign_5, 3196         ; <i32> [#uses=1]

ST_149: tmp_84 [2/3] 6.36ns
bb14:52  %tmp_84 = mul nsw i32 %y_assign_5, 16069        ; <i32> [#uses=1]


 <State 150>: 6.36ns
ST_150: Yc_load_1 [1/2] 2.39ns
bb14:0  %Yc_load_1 = load i32* %Yc_addr_9, align 4      ; <i32> [#uses=2]

ST_150: Yc_load [1/2] 2.39ns
bb14:1  %Yc_load = load i32* %Yc_addr, align 4          ; <i32> [#uses=2]

ST_150: tmp_71 [1/3] 6.36ns
bb14:36  %tmp_71 = mul nsw i32 %x_assign_4, 13623        ; <i32> [#uses=1]

ST_150: tmp_72 [1/3] 6.36ns
bb14:37  %tmp_72 = mul nsw i32 %y_assign_4, 9102         ; <i32> [#uses=1]

ST_150: tmp_75 [1/3] 6.36ns
bb14:41  %tmp_75 = mul nsw i32 %x_assign_4, 9102         ; <i32> [#uses=1]

ST_150: tmp_76 [1/3] 6.36ns
bb14:42  %tmp_76 = mul nsw i32 %y_assign_4, 13623        ; <i32> [#uses=1]

ST_150: tmp_79 [1/3] 6.36ns
bb14:46  %tmp_79 = mul nsw i32 %x_assign_5, 16069        ; <i32> [#uses=1]

ST_150: tmp_80 [1/3] 6.36ns
bb14:47  %tmp_80 = mul nsw i32 %y_assign_5, 3196         ; <i32> [#uses=1]

ST_150: tmp_83 [1/3] 6.36ns
bb14:51  %tmp_83 = mul nsw i32 %x_assign_5, 3196         ; <i32> [#uses=1]

ST_150: tmp_84 [1/3] 6.36ns
bb14:52  %tmp_84 = mul nsw i32 %y_assign_5, 16069        ; <i32> [#uses=1]


 <State 151>: 4.98ns
ST_151: z1_1_8 [1/1] 2.49ns
bb14:2  %z1_1_8 = sub nsw i32 %Yc_load_1, %Yc_load      ; <i32> [#uses=2]

ST_151: z1_0_8 [1/1] 2.49ns
bb14:3  %z1_0_8 = add nsw i32 %Yc_load, %Yc_load_1      ; <i32> [#uses=2]

ST_151: z1_3_8 [1/1] 0.00ns
bb14:15  %z1_3_8 = sext i18 %tmp_141 to i32              ; <i32> [#uses=2]

ST_151: z3_3_8 [1/1] 2.49ns
bb14:28  %z3_3_8 = sub nsw i32 %z1_0_8, %z1_3_8          ; <i32> [#uses=2]

ST_151: z3_0_8 [1/1] 2.49ns
bb14:29  %z3_0_8 = add nsw i32 %z1_0_8, %z1_3_8          ; <i32> [#uses=2]

ST_151: tmp_73 [1/1] 2.49ns
bb14:38  %tmp_73 = sub nsw i32 %tmp_71, %tmp_72          ; <i32> [#uses=1]

ST_151: tmp_144 [1/1] 0.00ns
bb14:39  %tmp_144 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_73, i32 14, i32 31) ; <i18> [#uses=1]

ST_151: tmp_77 [1/1] 2.49ns
bb14:43  %tmp_77 = add nsw i32 %tmp_76, %tmp_75          ; <i32> [#uses=1]

ST_151: tmp_145 [1/1] 0.00ns
bb14:44  %tmp_145 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_77, i32 14, i32 31) ; <i18> [#uses=1]

ST_151: tmp_81 [1/1] 2.49ns
bb14:48  %tmp_81 = sub nsw i32 %tmp_79, %tmp_80          ; <i32> [#uses=1]

ST_151: tmp_146 [1/1] 0.00ns
bb14:49  %tmp_146 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_81, i32 14, i32 31) ; <i18> [#uses=1]

ST_151: tmp_85 [1/1] 2.49ns
bb14:53  %tmp_85 = add nsw i32 %tmp_84, %tmp_83          ; <i32> [#uses=1]

ST_151: tmp_147 [1/1] 0.00ns
bb14:54  %tmp_147 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_85, i32 14, i32 31) ; <i18> [#uses=1]


 <State 152>: 4.88ns
ST_152: z1_2_8 [1/1] 0.00ns
bb14:10  %z1_2_8 = sext i18 %tmp_140 to i32              ; <i32> [#uses=2]

ST_152: z3_2_8 [1/1] 2.49ns
bb14:30  %z3_2_8 = sub nsw i32 %z1_1_8, %z1_2_8          ; <i32> [#uses=2]

ST_152: z3_1_8 [1/1] 2.49ns
bb14:31  %z3_1_8 = add nsw i32 %z1_1_8, %z1_2_8          ; <i32> [#uses=2]

ST_152: z3_7_8 [1/1] 0.00ns
bb14:45  %z3_7_8 = sext i18 %tmp_145 to i32              ; <i32> [#uses=2]

ST_152: tmp_87 [1/1] 2.49ns
bb14:56  %tmp_87 = sub nsw i32 %z3_0_8, %z3_7_8          ; <i32> [#uses=1]

ST_152: stg_1481 [1/1] 2.39ns
bb14:57  store i32 %tmp_87, i32* %Yc_addr_4, align 4

ST_152: tmp_88 [1/1] 2.49ns
bb14:58  %tmp_88 = add nsw i32 %z3_0_8, %z3_7_8          ; <i32> [#uses=1]

ST_152: stg_1483 [1/1] 2.39ns
bb14:59  store i32 %tmp_88, i32* %Yc_addr_9, align 4


 <State 153>: 4.88ns
ST_153: z3_6_8 [1/1] 0.00ns
bb14:55  %z3_6_8 = sext i18 %tmp_147 to i32              ; <i32> [#uses=2]

ST_153: tmp_89 [1/1] 2.49ns
bb14:60  %tmp_89 = sub nsw i32 %z3_1_8, %z3_6_8          ; <i32> [#uses=1]

ST_153: stg_1486 [1/1] 2.39ns
bb14:61  store i32 %tmp_89, i32* %Yc_addr_1, align 4

ST_153: tmp_90 [1/1] 2.49ns
bb14:62  %tmp_90 = add nsw i32 %z3_1_8, %z3_6_8          ; <i32> [#uses=1]

ST_153: stg_1488 [1/1] 2.39ns
bb14:63  store i32 %tmp_90, i32* %Yc_addr_3, align 4


 <State 154>: 4.88ns
ST_154: z3_5_8 [1/1] 0.00ns
bb14:50  %z3_5_8 = sext i18 %tmp_146 to i32              ; <i32> [#uses=2]

ST_154: tmp_91 [1/1] 2.49ns
bb14:64  %tmp_91 = sub nsw i32 %z3_2_8, %z3_5_8          ; <i32> [#uses=1]

ST_154: stg_1491 [1/1] 2.39ns
bb14:65  store i32 %tmp_91, i32* %Yc_addr_6, align 4

ST_154: tmp_92 [1/1] 2.49ns
bb14:66  %tmp_92 = add nsw i32 %z3_2_8, %z3_5_8          ; <i32> [#uses=1]

ST_154: stg_1493 [1/1] 2.39ns
bb14:67  store i32 %tmp_92, i32* %Yc_addr_2, align 4


 <State 155>: 4.88ns
ST_155: z3_4_8 [1/1] 0.00ns
bb14:40  %z3_4_8 = sext i18 %tmp_144 to i32              ; <i32> [#uses=2]

ST_155: tmp_93 [1/1] 2.49ns
bb14:68  %tmp_93 = sub nsw i32 %z3_3_8, %z3_4_8          ; <i32> [#uses=1]

ST_155: stg_1496 [1/1] 2.39ns
bb14:69  store i32 %tmp_93, i32* %Yc_addr, align 4

ST_155: tmp_94 [1/1] 2.49ns
bb14:70  %tmp_94 = add nsw i32 %z3_3_8, %z3_4_8          ; <i32> [#uses=1]

ST_155: stg_1498 [1/1] 2.39ns
bb14:71  store i32 %tmp_94, i32* %Yc_addr_5, align 4

ST_155: stg_1499 [1/1] 1.21ns
bb14:72  br label %bb19


 <State 156>: 2.39ns
ST_156: row_2 [1/1] 0.00ns
bb19:0  %row_2 = phi i4 [ 0, %bb14 ], [ %row_3, %bb15_ifconv ] ; <i4> [#uses=4]

ST_156: row_2_cast1 [1/1] 0.00ns
bb19:1  %row_2_cast1 = zext i4 %row_2 to i32            ; <i32> [#uses=1]

ST_156: row_2_cast [1/1] 0.00ns
bb19:2  %row_2_cast = zext i4 %row_2 to i6              ; <i6> [#uses=1]

ST_156: empty_37 [1/1] 0.00ns
bb19:3  %empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind ; <i32> [#uses=0]

ST_156: exitcond13 [1/1] 1.88ns
bb19:4  %exitcond13 = icmp eq i4 %row_2, -8             ; <i1> [#uses=1]

ST_156: row_3 [1/1] 0.85ns
bb19:5  %row_3 = add i4 %row_2, 1                       ; <i4> [#uses=1]

ST_156: stg_1506 [1/1] 0.00ns
bb19:6  br i1 %exitcond13, label %bb21, label %bb15_ifconv

ST_156: Yc_addr_8 [1/1] 0.00ns
bb15_ifconv:0  %Yc_addr_8 = getelementptr inbounds [8 x i32]* %Yc, i32 0, i32 %row_2_cast1 ; <i32*> [#uses=1]

ST_156: Yc_load_7 [2/2] 2.39ns
bb15_ifconv:1  %Yc_load_7 = load i32* %Yc_addr_8, align 4      ; <i32> [#uses=2]

ST_156: tmp_103 [1/1] 0.00ns
bb15_ifconv:16  %tmp_103 = shl i6 %row_2_cast, 3                ; <i6> [#uses=1]

ST_156: tmp_104 [1/1] 1.77ns
bb15_ifconv:17  %tmp_104 = add i6 %tmp_103, %column_cast        ; <i6> [#uses=1]


 <State 157>: 6.25ns
ST_157: Yc_load_7 [1/2] 2.39ns
bb15_ifconv:1  %Yc_load_7 = load i32* %Yc_addr_8, align 4      ; <i32> [#uses=2]

ST_157: tmp_149 [1/1] 0.00ns
bb15_ifconv:2  %tmp_149 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %Yc_load_7, i32 31) ; <i1> [#uses=1]

ST_157: p_lobit_neg_cast [1/1] 0.00ns
bb15_ifconv:3  %p_lobit_neg_cast = sext i1 %tmp_149 to i6      ; <i6> [#uses=1]

ST_157: tmp [1/1] 1.37ns
bb15_ifconv:4  %tmp = xor i6 %p_lobit_neg_cast, -32            ; <i6> [#uses=1]

ST_157: tmp_cast [1/1] 0.00ns
bb15_ifconv:5  %tmp_cast = zext i6 %tmp to i32                 ; <i32> [#uses=1]

ST_157: tmp_98 [1/1] 2.49ns
bb15_ifconv:6  %tmp_98 = add i32 %tmp_cast, %Yc_load_7         ; <i32> [#uses=1]

ST_157: tmp_150 [1/1] 0.00ns
bb15_ifconv:7  %tmp_150 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %tmp_98, i32 6, i32 31) ; <i26> [#uses=1]


 <State 158>: 6.07ns
ST_158: tmp_99_cast [1/1] 0.00ns
bb15_ifconv:8  %tmp_99_cast = sext i26 %tmp_150 to i27         ; <i27> [#uses=1]

ST_158: r [1/1] 2.37ns
bb15_ifconv:9  %r = add i27 %tmp_99_cast, 128                  ; <i27> [#uses=3]

ST_158: tmp_100 [1/1] 2.44ns
bb15_ifconv:10  %tmp_100 = icmp sgt i27 %r, 0                   ; <i1> [#uses=1]

ST_158: tmp_151 [1/1] 0.00ns
bb15_ifconv:11  %tmp_151 = call i19 @_ssdm_op_PartSelect.i19.i27.i32.i32(i27 %r, i32 8, i32 26) ; <i19> [#uses=1]

ST_158: icmp [1/1] 2.33ns
bb15_ifconv:12  %icmp = icmp slt i19 %tmp_151, 1                ; <i1> [#uses=1]

ST_158: tmp_102 [1/1] 0.00ns
bb15_ifconv:13  %tmp_102 = trunc i27 %r to i8                   ; <i8> [#uses=1]

ST_158: phitmp [1/1] 1.37ns
bb15_ifconv:14  %phitmp = select i1 %icmp, i8 %tmp_102, i8 -1   ; <i8> [#uses=1]


 <State 159>: 3.76ns
ST_159: iftmp_s [1/1] 1.37ns
bb15_ifconv:15  %iftmp_s = select i1 %tmp_100, i8 %phitmp, i8 0 ; <i8> [#uses=1]

ST_159: tmp_104_cast [1/1] 0.00ns
bb15_ifconv:18  %tmp_104_cast = zext i6 %tmp_104 to i32         ; <i32> [#uses=1]

ST_159: Idct_addr [1/1] 0.00ns
bb15_ifconv:19  %Idct_addr = getelementptr inbounds [64 x i8]* %Idct, i32 0, i32 %tmp_104_cast ; <i8*> [#uses=1]

ST_159: stg_1528 [1/1] 2.39ns
bb15_ifconv:20  store i8 %iftmp_s, i8* %Idct_addr, align 1

ST_159: stg_1529 [1/1] 0.00ns
bb15_ifconv:21  br label %bb19


 <State 160>: 1.91ns
ST_160: i_2 [1/1] 0.00ns
bb8.i:0  %i_2 = phi i5 [ %i_3, %bb7.i69 ], [ 0, %bb22 ]  ; <i5> [#uses=6]

ST_160: i_6_cast [1/1] 0.00ns
bb8.i:1  %i_6_cast = zext i5 %i_2 to i7                  ; <i7> [#uses=1]

ST_160: tmp_i [1/1] 0.00ns
bb8.i:2  %tmp_i = shl i7 %i_6_cast, 2                    ; <i7> [#uses=1]

ST_160: tmp_i_cast [1/1] 0.00ns
bb8.i:3  %tmp_i_cast = zext i7 %tmp_i to i32             ; <i32> [#uses=1]

ST_160: tmp332338_i [1/1] 0.00ns
bb8.i:4  %tmp332338_i = call i7 @_ssdm_op_PartSet.i7.i7.i5.i32.i32(i7 3, i5 %i_2, i32 2, i32 6) ; <i7> [#uses=1]

ST_160: tmp332338_i_cast [1/1] 0.00ns
bb8.i:5  %tmp332338_i_cast = zext i7 %tmp332338_i to i32 ; <i32> [#uses=1]

ST_160: Idct_addr_1 [1/1] 0.00ns
bb8.i:6  %Idct_addr_1 = getelementptr [64 x i8]* %Idct, i32 0, i32 %tmp332338_i_cast ; <i8*> [#uses=1]

ST_160: tmp333339_i [1/1] 0.00ns
bb8.i:7  %tmp333339_i = call i7 @_ssdm_op_PartSet.i7.i7.i5.i32.i32(i7 2, i5 %i_2, i32 2, i32 6) ; <i7> [#uses=1]

ST_160: tmp333339_i_cast [1/1] 0.00ns
bb8.i:8  %tmp333339_i_cast = zext i7 %tmp333339_i to i32 ; <i32> [#uses=1]

ST_160: Idct_addr_2 [1/1] 0.00ns
bb8.i:9  %Idct_addr_2 = getelementptr [64 x i8]* %Idct, i32 0, i32 %tmp333339_i_cast ; <i8*> [#uses=1]

ST_160: tmp335340_i [1/1] 0.00ns
bb8.i:10  %tmp335340_i = call i7 @_ssdm_op_PartSet.i7.i7.i5.i32.i32(i7 1, i5 %i_2, i32 2, i32 6) ; <i7> [#uses=1]

ST_160: tmp335340_i_cast [1/1] 0.00ns
bb8.i:11  %tmp335340_i_cast = zext i7 %tmp335340_i to i32 ; <i32> [#uses=1]

ST_160: Idct_addr_3 [1/1] 0.00ns
bb8.i:12  %Idct_addr_3 = getelementptr [64 x i8]* %Idct, i32 0, i32 %tmp335340_i_cast ; <i8*> [#uses=1]

ST_160: Idct_addr_4 [1/1] 0.00ns
bb8.i:13  %Idct_addr_4 = getelementptr [64 x i8]* %Idct, i32 0, i32 %tmp_i_cast ; <i8*> [#uses=1]

ST_160: empty_39 [1/1] 0.00ns
bb8.i:14  %empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind ; <i32> [#uses=0]

ST_160: exitcond12 [1/1] 1.91ns
bb8.i:15  %exitcond12 = icmp eq i5 %i_2, -16              ; <i1> [#uses=1]

ST_160: i_3 [1/1] 1.77ns
bb8.i:16  %i_3 = add i5 %i_2, 1                           ; <i5> [#uses=1]

ST_160: stg_1547 [1/1] 0.00ns
bb8.i:17  br i1 %exitcond12, label %bb23, label %bb5.i68


 <State 161>: 2.39ns
ST_161: tmp_V_6 [1/1] 0.00ns
bb5.i68:0  %tmp_V_6 = call i1 @_ssdm_op_WireRead.volatile.i1P(i1* %WriteFullPort_0) nounwind ; <i1> [#uses=1]

ST_161: stg_1549 [1/1] 0.00ns
bb5.i68:1  br i1 %tmp_V_6, label %bb.i166.i, label %bb7.i69

ST_161: stg_1550 [1/1] 0.00ns
bb.i166.i:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_161: stg_1551 [1/1] 0.00ns
bb.i166.i:1  br label %bb5.i68

ST_161: Idct_load [2/2] 2.39ns
bb7.i69:0  %Idct_load = load i8* %Idct_addr_4, align 1     ; <i8> [#uses=1]

ST_161: Idct_load_1 [2/2] 2.39ns
bb7.i69:2  %Idct_load_1 = load i8* %Idct_addr_3, align 1   ; <i8> [#uses=1]


 <State 162>: 2.39ns
ST_162: Idct_load [1/2] 2.39ns
bb7.i69:0  %Idct_load = load i8* %Idct_addr_4, align 1     ; <i8> [#uses=1]

ST_162: Idct_load_1 [1/2] 2.39ns
bb7.i69:2  %Idct_load_1 = load i8* %Idct_addr_3, align 1   ; <i8> [#uses=1]

ST_162: Idct_load_2 [2/2] 2.39ns
bb7.i69:3  %Idct_load_2 = load i8* %Idct_addr_2, align 1   ; <i8> [#uses=1]

ST_162: Idct_load_3 [2/2] 2.39ns
bb7.i69:4  %Idct_load_3 = load i8* %Idct_addr_1, align 1   ; <i8> [#uses=1]


 <State 163>: 2.39ns
ST_163: p_Result_s [1/1] 0.00ns
bb7.i69:1  %p_Result_s = zext i8 %Idct_load to i32         ; <i32> [#uses=1]

ST_163: Idct_load_2 [1/2] 2.39ns
bb7.i69:3  %Idct_load_2 = load i8* %Idct_addr_2, align 1   ; <i8> [#uses=1]

ST_163: Idct_load_3 [1/2] 2.39ns
bb7.i69:4  %Idct_load_3 = load i8* %Idct_addr_1, align 1   ; <i8> [#uses=1]

ST_163: tmp_148 [1/1] 0.00ns
bb7.i69:5  %tmp_148 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %Idct_load_3, i8 %Idct_load_2, i8 %Idct_load_1) ; <i24> [#uses=1]

ST_163: p_Result_2 [1/1] 0.00ns
bb7.i69:6  %p_Result_2 = call i32 @_ssdm_op_PartSet.i32.i32.i24.i32.i32(i32 %p_Result_s, i24 %tmp_148, i32 8, i32 31) ; <i32> [#uses=1]

ST_163: stg_1563 [1/1] 0.00ns
bb7.i69:7  call void @_ssdm_op_WireWrite.volatile.i32P(i32* %WriteDataPort_0, i32 %p_Result_2) nounwind

ST_163: stg_1564 [1/1] 0.00ns
bb7.i69:8  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %WriteEnablePort_0, i1 true) nounwind


 <State 164>: 0.00ns
ST_164: stg_1565 [1/1] 0.00ns
bb7.i69:9  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_164: stg_1566 [1/1] 0.00ns
bb7.i69:10  call void @_ssdm_op_WireWrite.volatile.i32P(i32* %WriteDataPort_0, i32 0) nounwind

ST_164: stg_1567 [1/1] 0.00ns
bb7.i69:11  call void @_ssdm_op_WireWrite.volatile.i1P(i1* %WriteEnablePort_0, i1 false) nounwind


 <State 165>: 0.00ns
ST_165: stg_1568 [1/1] 0.00ns
bb7.i69:12  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_165: stg_1569 [1/1] 0.00ns
bb7.i69:13  br label %bb8.i



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
